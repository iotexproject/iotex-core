// Code generated by idl2go from JSON generated by Barrister v0.1.6
package explorer

import (
	"fmt"
	"reflect"

	"github.com/coopernurse/barrister-go"
)

const BarristerVersion string = "0.1.6"
const BarristerChecksum string = "0f6bf284ad39053040811ee110998a4d"
const BarristerDateGenerated int64 = 1553297260246000000

type CoinStatistic struct {
	Height     int64  `json:"height"`
	Supply     string `json:"supply"`
	Transfers  int64  `json:"transfers"`
	Votes      int64  `json:"votes"`
	Executions int64  `json:"executions"`
	Aps        int64  `json:"aps"`
}

type BlockGenerator struct {
	Name    string `json:"name"`
	Address string `json:"address"`
}

type Block struct {
	ID               string         `json:"ID"`
	Height           int64          `json:"height"`
	Timestamp        int64          `json:"timestamp"`
	Transfers        int64          `json:"transfers"`
	Votes            int64          `json:"votes"`
	Executions       int64          `json:"executions"`
	GenerateBy       BlockGenerator `json:"generateBy"`
	Amount           string         `json:"amount"`
	Size             int64          `json:"size"`
	TxRoot           string         `json:"txRoot"`
	DeltaStateDigest string         `json:"deltaStateDigest"`
}

type Transfer struct {
	Version      int64  `json:"version"`
	ID           string `json:"ID"`
	Nonce        int64  `json:"nonce"`
	Sender       string `json:"sender"`
	Recipient    string `json:"recipient"`
	Amount       string `json:"amount"`
	SenderPubKey string `json:"senderPubKey"`
	Signature    string `json:"signature"`
	Payload      string `json:"payload"`
	GasLimit     int64  `json:"gasLimit"`
	GasPrice     string `json:"gasPrice"`
	IsCoinbase   bool   `json:"isCoinbase"`
	Fee          string `json:"fee"`
	Timestamp    int64  `json:"timestamp"`
	BlockID      string `json:"blockID"`
	IsPending    bool   `json:"isPending"`
}

type Execution struct {
	Version        int64  `json:"version"`
	ID             string `json:"ID"`
	Nonce          int64  `json:"nonce"`
	Executor       string `json:"executor"`
	Contract       string `json:"contract"`
	Amount         string `json:"amount"`
	ExecutorPubKey string `json:"executorPubKey"`
	Signature      string `json:"signature"`
	GasLimit       int64  `json:"gasLimit"`
	GasPrice       string `json:"gasPrice"`
	Timestamp      int64  `json:"timestamp"`
	Data           string `json:"data"`
	BlockID        string `json:"blockID"`
	IsPending      bool   `json:"isPending"`
}

type Log struct {
	Address     string   `json:"address"`
	Topics      []string `json:"topics"`
	Data        string   `json:"data"`
	BlockNumber int64    `json:"blockNumber"`
	TxnHash     string   `json:"txnHash"`
	Index       int64    `json:"index"`
}

type Receipt struct {
	ReturnValue     string `json:"returnValue"`
	Status          int64  `json:"status"`
	Hash            string `json:"hash"`
	GasConsumed     int64  `json:"gasConsumed"`
	ContractAddress string `json:"contractAddress"`
	Logs            []Log  `json:"logs"`
}

type SendExecutionResponse struct {
	Receipt Receipt `json:"receipt"`
}

type Vote struct {
	Version     int64  `json:"version"`
	ID          string `json:"ID"`
	Nonce       int64  `json:"nonce"`
	Timestamp   int64  `json:"timestamp"`
	Voter       string `json:"voter"`
	Votee       string `json:"votee"`
	VoterPubKey string `json:"voterPubKey"`
	GasLimit    int64  `json:"gasLimit"`
	GasPrice    string `json:"gasPrice"`
	Signature   string `json:"signature"`
	BlockID     string `json:"blockID"`
	IsPending   bool   `json:"isPending"`
}

type AddressDetails struct {
	Address      string `json:"address"`
	TotalBalance string `json:"totalBalance"`
	Nonce        int64  `json:"nonce"`
	PendingNonce int64  `json:"pendingNonce"`
	IsCandidate  bool   `json:"isCandidate"`
}

type Candidate struct {
	Address    string `json:"address"`
	PubKey     string `json:"pubKey"`
	TotalVote  string `json:"totalVote"`
	IsDelegate bool   `json:"isDelegate"`
	IsProducer bool   `json:"isProducer"`
}

type CandidateMetrics struct {
	Candidates   []Candidate `json:"candidates"`
	LatestEpoch  int64       `json:"latestEpoch"`
	LatestHeight int64       `json:"latestHeight"`
}

type ConsensusMetrics struct {
	LatestEpoch         int64    `json:"latestEpoch"`
	LatestDelegates     []string `json:"latestDelegates"`
	LatestBlockProducer string   `json:"latestBlockProducer"`
	Candidates          []string `json:"candidates"`
}

type SendTransferRequest struct {
	Version      int64  `json:"version"`
	Nonce        int64  `json:"nonce"`
	Sender       string `json:"sender"`
	Recipient    string `json:"recipient"`
	Amount       string `json:"amount"`
	SenderPubKey string `json:"senderPubKey"`
	Signature    string `json:"signature"`
	Payload      string `json:"payload"`
	GasLimit     int64  `json:"gasLimit"`
	GasPrice     string `json:"gasPrice"`
	IsCoinbase   bool   `json:"isCoinbase"`
}

type SendTransferResponse struct {
	Hash string `json:"hash"`
}

type SendVoteRequest struct {
	Version     int64  `json:"version"`
	Nonce       int64  `json:"nonce"`
	Voter       string `json:"voter"`
	Votee       string `json:"votee"`
	VoterPubKey string `json:"voterPubKey"`
	GasLimit    int64  `json:"gasLimit"`
	GasPrice    string `json:"gasPrice"`
	Signature   string `json:"signature"`
}

type SendVoteResponse struct {
	Hash string `json:"hash"`
}

type PutSubChainBlockMerkelRoot struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type PutSubChainBlockRequest struct {
	Version         int64                        `json:"version"`
	Nonce           int64                        `json:"nonce"`
	SenderAddress   string                       `json:"senderAddress"`
	SubChainAddress string                       `json:"subChainAddress"`
	Height          int64                        `json:"height"`
	Roots           []PutSubChainBlockMerkelRoot `json:"roots"`
	SenderPubKey    string                       `json:"senderPubKey"`
	Signature       string                       `json:"signature"`
	GasLimit        int64                        `json:"gasLimit"`
	GasPrice        string                       `json:"gasPrice"`
}

type PutSubChainBlockResponse struct {
	Hash string `json:"hash"`
}

type SendActionRequest struct {
	Payload string `json:"payload"`
}

type SendActionResponse struct {
	Payload string `json:"payload"`
}

type Node struct {
	Address string `json:"address"`
}

type GetPeersResponse struct {
	Self  Node   `json:"Self"`
	Peers []Node `json:"Peers"`
}

type SendSmartContractResponse struct {
	Hash string `json:"hash"`
}

type GetBlkOrActResponse struct {
	Block     *Block          `json:"block,omitempty"`
	Transfer  *Transfer       `json:"transfer,omitempty"`
	Vote      *Vote           `json:"vote,omitempty"`
	Execution *Execution      `json:"execution,omitempty"`
	Address   *AddressDetails `json:"address,omitempty"`
}

type CreateDepositRequest struct {
	Version      int64  `json:"version"`
	Nonce        int64  `json:"nonce"`
	ChainID      int64  `json:"chainID"`
	Sender       string `json:"sender"`
	SenderPubKey string `json:"senderPubKey"`
	Recipient    string `json:"recipient"`
	Amount       string `json:"amount"`
	Signature    string `json:"signature"`
	GasLimit     int64  `json:"gasLimit"`
	GasPrice     string `json:"gasPrice"`
}

type CreateDepositResponse struct {
	Hash string `json:"hash"`
}

type Deposit struct {
	Amount    string `json:"amount"`
	Address   string `json:"address"`
	Confirmed bool   `json:"confirmed"`
}

type SettleDepositRequest struct {
	Version      int64  `json:"version"`
	Nonce        int64  `json:"nonce"`
	Sender       string `json:"sender"`
	SenderPubKey string `json:"senderPubKey"`
	Recipient    string `json:"recipient"`
	Amount       string `json:"amount"`
	Index        int64  `json:"index"`
	Signature    string `json:"signature"`
	GasLimit     int64  `json:"gasLimit"`
	GasPrice     string `json:"gasPrice"`
}

type SettleDepositResponse struct {
	Hash string `json:"hash"`
}

type CreateDeposit struct {
	Version      int64  `json:"version"`
	ID           string `json:"ID"`
	Nonce        int64  `json:"nonce"`
	Sender       string `json:"sender"`
	Recipient    string `json:"recipient"`
	Amount       string `json:"amount"`
	SenderPubKey string `json:"senderPubKey"`
	Signature    string `json:"signature"`
	GasLimit     int64  `json:"gasLimit"`
	GasPrice     string `json:"gasPrice"`
	Fee          string `json:"fee"`
	Timestamp    int64  `json:"timestamp"`
	BlockID      string `json:"blockID"`
	IsPending    bool   `json:"isPending"`
}

type SettleDeposit struct {
	Version      int64  `json:"version"`
	ID           string `json:"ID"`
	Nonce        int64  `json:"nonce"`
	Sender       string `json:"sender"`
	Recipient    string `json:"recipient"`
	Amount       string `json:"amount"`
	Index        int64  `json:"index"`
	SenderPubKey string `json:"senderPubKey"`
	Signature    string `json:"signature"`
	GasLimit     int64  `json:"gasLimit"`
	GasPrice     string `json:"gasPrice"`
	Fee          string `json:"fee"`
	Timestamp    int64  `json:"timestamp"`
	BlockID      string `json:"blockID"`
	IsPending    bool   `json:"isPending"`
}

type Explorer interface {
	GetBlockchainHeight() (int64, error)
	GetAddressBalance(address string) (string, error)
	GetAddressDetails(address string) (AddressDetails, error)
	GetCreateDeposit(createDepositID string) (CreateDeposit, error)
	GetCreateDepositsByAddress(address string, offset int64, limit int64) ([]CreateDeposit, error)
	GetSettleDeposit(settleDepositID string) (SettleDeposit, error)
	GetSettleDepositsByAddress(address string, offset int64, limit int64) ([]SettleDeposit, error)
	GetLastBlocksByRange(offset int64, limit int64) ([]Block, error)
	GetBlockByID(blkID string) (Block, error)
	GetCoinStatistic() (CoinStatistic, error)
	GetConsensusMetrics() (ConsensusMetrics, error)
	GetCandidateMetrics() (CandidateMetrics, error)
	GetCandidateMetricsByHeight(h int64) (CandidateMetrics, error)
	SendTransfer(request SendTransferRequest) (SendTransferResponse, error)
	SendVote(request SendVoteRequest) (SendVoteResponse, error)
	SendSmartContract(request Execution) (SendSmartContractResponse, error)
	PutSubChainBlock(request PutSubChainBlockRequest) (PutSubChainBlockResponse, error)
	SendAction(request SendActionRequest) (SendActionResponse, error)
	GetPeers() (GetPeersResponse, error)
	GetReceiptByExecutionID(id string) (Receipt, error)
	GetReceiptByActionID(id string) (Receipt, error)
	ReadExecutionState(request Execution) (string, error)
	GetBlockOrActionByHash(hashStr string) (GetBlkOrActResponse, error)
	CreateDeposit(request CreateDepositRequest) (CreateDepositResponse, error)
	GetDeposits(subChainID int64, offset int64, limit int64) ([]Deposit, error)
	SettleDeposit(request SettleDepositRequest) (SettleDepositResponse, error)
	SuggestGasPrice() (int64, error)
	EstimateGasForTransfer(request SendTransferRequest) (int64, error)
	EstimateGasForVote() (int64, error)
	EstimateGasForSmartContract(request Execution) (int64, error)
	GetStateRootHash(blockHeight int64) (string, error)
}

func NewExplorerProxy(c barrister.Client) Explorer {
	return ExplorerProxy{c, barrister.MustParseIdlJson([]byte(IdlJsonRaw))}
}

type ExplorerProxy struct {
	client barrister.Client
	idl    *barrister.Idl
}

func (_p ExplorerProxy) GetBlockchainHeight() (int64, error) {
	_res, _err := _p.client.Call("Explorer.getBlockchainHeight")
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getBlockchainHeight").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(int64(0)), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(int64)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getBlockchainHeight returned invalid type: %v", _t)
			return int64(0), &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return int64(0), _err
}

func (_p ExplorerProxy) GetAddressBalance(address string) (string, error) {
	_res, _err := _p.client.Call("Explorer.getAddressBalance", address)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getAddressBalance").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(""), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(string)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getAddressBalance returned invalid type: %v", _t)
			return "", &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return "", _err
}

func (_p ExplorerProxy) GetAddressDetails(address string) (AddressDetails, error) {
	_res, _err := _p.client.Call("Explorer.getAddressDetails", address)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getAddressDetails").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(AddressDetails{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(AddressDetails)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getAddressDetails returned invalid type: %v", _t)
			return AddressDetails{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return AddressDetails{}, _err
}

func (_p ExplorerProxy) GetCreateDeposit(createDepositID string) (CreateDeposit, error) {
	_res, _err := _p.client.Call("Explorer.getCreateDeposit", createDepositID)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getCreateDeposit").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(CreateDeposit{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(CreateDeposit)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getCreateDeposit returned invalid type: %v", _t)
			return CreateDeposit{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return CreateDeposit{}, _err
}

func (_p ExplorerProxy) GetCreateDepositsByAddress(address string, offset int64, limit int64) ([]CreateDeposit, error) {
	_res, _err := _p.client.Call("Explorer.getCreateDepositsByAddress", address, offset, limit)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getCreateDepositsByAddress").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf([]CreateDeposit{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.([]CreateDeposit)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getCreateDepositsByAddress returned invalid type: %v", _t)
			return []CreateDeposit{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return []CreateDeposit{}, _err
}

func (_p ExplorerProxy) GetSettleDeposit(settleDepositID string) (SettleDeposit, error) {
	_res, _err := _p.client.Call("Explorer.getSettleDeposit", settleDepositID)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getSettleDeposit").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(SettleDeposit{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(SettleDeposit)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getSettleDeposit returned invalid type: %v", _t)
			return SettleDeposit{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return SettleDeposit{}, _err
}

func (_p ExplorerProxy) GetSettleDepositsByAddress(address string, offset int64, limit int64) ([]SettleDeposit, error) {
	_res, _err := _p.client.Call("Explorer.getSettleDepositsByAddress", address, offset, limit)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getSettleDepositsByAddress").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf([]SettleDeposit{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.([]SettleDeposit)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getSettleDepositsByAddress returned invalid type: %v", _t)
			return []SettleDeposit{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return []SettleDeposit{}, _err
}

func (_p ExplorerProxy) GetLastBlocksByRange(offset int64, limit int64) ([]Block, error) {
	_res, _err := _p.client.Call("Explorer.getLastBlocksByRange", offset, limit)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getLastBlocksByRange").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf([]Block{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.([]Block)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getLastBlocksByRange returned invalid type: %v", _t)
			return []Block{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return []Block{}, _err
}

func (_p ExplorerProxy) GetBlockByID(blkID string) (Block, error) {
	_res, _err := _p.client.Call("Explorer.getBlockByID", blkID)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getBlockByID").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(Block{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(Block)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getBlockByID returned invalid type: %v", _t)
			return Block{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return Block{}, _err
}

func (_p ExplorerProxy) GetCoinStatistic() (CoinStatistic, error) {
	_res, _err := _p.client.Call("Explorer.getCoinStatistic")
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getCoinStatistic").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(CoinStatistic{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(CoinStatistic)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getCoinStatistic returned invalid type: %v", _t)
			return CoinStatistic{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return CoinStatistic{}, _err
}

func (_p ExplorerProxy) GetConsensusMetrics() (ConsensusMetrics, error) {
	_res, _err := _p.client.Call("Explorer.getConsensusMetrics")
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getConsensusMetrics").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(ConsensusMetrics{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(ConsensusMetrics)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getConsensusMetrics returned invalid type: %v", _t)
			return ConsensusMetrics{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return ConsensusMetrics{}, _err
}

func (_p ExplorerProxy) GetCandidateMetrics() (CandidateMetrics, error) {
	_res, _err := _p.client.Call("Explorer.getCandidateMetrics")
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getCandidateMetrics").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(CandidateMetrics{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(CandidateMetrics)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getCandidateMetrics returned invalid type: %v", _t)
			return CandidateMetrics{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return CandidateMetrics{}, _err
}

func (_p ExplorerProxy) GetCandidateMetricsByHeight(h int64) (CandidateMetrics, error) {
	_res, _err := _p.client.Call("Explorer.getCandidateMetricsByHeight", h)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getCandidateMetricsByHeight").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(CandidateMetrics{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(CandidateMetrics)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getCandidateMetricsByHeight returned invalid type: %v", _t)
			return CandidateMetrics{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return CandidateMetrics{}, _err
}

func (_p ExplorerProxy) SendTransfer(request SendTransferRequest) (SendTransferResponse, error) {
	_res, _err := _p.client.Call("Explorer.sendTransfer", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.sendTransfer").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(SendTransferResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(SendTransferResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.sendTransfer returned invalid type: %v", _t)
			return SendTransferResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return SendTransferResponse{}, _err
}

func (_p ExplorerProxy) SendVote(request SendVoteRequest) (SendVoteResponse, error) {
	_res, _err := _p.client.Call("Explorer.sendVote", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.sendVote").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(SendVoteResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(SendVoteResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.sendVote returned invalid type: %v", _t)
			return SendVoteResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return SendVoteResponse{}, _err
}

func (_p ExplorerProxy) SendSmartContract(request Execution) (SendSmartContractResponse, error) {
	_res, _err := _p.client.Call("Explorer.sendSmartContract", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.sendSmartContract").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(SendSmartContractResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(SendSmartContractResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.sendSmartContract returned invalid type: %v", _t)
			return SendSmartContractResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return SendSmartContractResponse{}, _err
}

func (_p ExplorerProxy) PutSubChainBlock(request PutSubChainBlockRequest) (PutSubChainBlockResponse, error) {
	_res, _err := _p.client.Call("Explorer.putSubChainBlock", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.putSubChainBlock").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(PutSubChainBlockResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(PutSubChainBlockResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.putSubChainBlock returned invalid type: %v", _t)
			return PutSubChainBlockResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return PutSubChainBlockResponse{}, _err
}

func (_p ExplorerProxy) SendAction(request SendActionRequest) (SendActionResponse, error) {
	_res, _err := _p.client.Call("Explorer.sendAction", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.sendAction").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(SendActionResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(SendActionResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.sendAction returned invalid type: %v", _t)
			return SendActionResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return SendActionResponse{}, _err
}

func (_p ExplorerProxy) GetPeers() (GetPeersResponse, error) {
	_res, _err := _p.client.Call("Explorer.getPeers")
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getPeers").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(GetPeersResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(GetPeersResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getPeers returned invalid type: %v", _t)
			return GetPeersResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return GetPeersResponse{}, _err
}

func (_p ExplorerProxy) GetReceiptByExecutionID(id string) (Receipt, error) {
	_res, _err := _p.client.Call("Explorer.getReceiptByExecutionID", id)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getReceiptByExecutionID").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(Receipt{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(Receipt)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getReceiptByExecutionID returned invalid type: %v", _t)
			return Receipt{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return Receipt{}, _err
}

func (_p ExplorerProxy) GetReceiptByActionID(id string) (Receipt, error) {
	_res, _err := _p.client.Call("Explorer.getReceiptByActionID", id)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getReceiptByActionID").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(Receipt{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(Receipt)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getReceiptByActionID returned invalid type: %v", _t)
			return Receipt{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return Receipt{}, _err
}

func (_p ExplorerProxy) ReadExecutionState(request Execution) (string, error) {
	_res, _err := _p.client.Call("Explorer.readExecutionState", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.readExecutionState").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(""), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(string)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.readExecutionState returned invalid type: %v", _t)
			return "", &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return "", _err
}

func (_p ExplorerProxy) GetBlockOrActionByHash(hashStr string) (GetBlkOrActResponse, error) {
	_res, _err := _p.client.Call("Explorer.getBlockOrActionByHash", hashStr)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getBlockOrActionByHash").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(GetBlkOrActResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(GetBlkOrActResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getBlockOrActionByHash returned invalid type: %v", _t)
			return GetBlkOrActResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return GetBlkOrActResponse{}, _err
}

func (_p ExplorerProxy) CreateDeposit(request CreateDepositRequest) (CreateDepositResponse, error) {
	_res, _err := _p.client.Call("Explorer.createDeposit", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.createDeposit").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(CreateDepositResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(CreateDepositResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.createDeposit returned invalid type: %v", _t)
			return CreateDepositResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return CreateDepositResponse{}, _err
}

func (_p ExplorerProxy) GetDeposits(subChainID int64, offset int64, limit int64) ([]Deposit, error) {
	_res, _err := _p.client.Call("Explorer.getDeposits", subChainID, offset, limit)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getDeposits").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf([]Deposit{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.([]Deposit)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getDeposits returned invalid type: %v", _t)
			return []Deposit{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return []Deposit{}, _err
}

func (_p ExplorerProxy) SettleDeposit(request SettleDepositRequest) (SettleDepositResponse, error) {
	_res, _err := _p.client.Call("Explorer.settleDeposit", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.settleDeposit").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(SettleDepositResponse{}), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(SettleDepositResponse)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.settleDeposit returned invalid type: %v", _t)
			return SettleDepositResponse{}, &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return SettleDepositResponse{}, _err
}

func (_p ExplorerProxy) SuggestGasPrice() (int64, error) {
	_res, _err := _p.client.Call("Explorer.suggestGasPrice")
	if _err == nil {
		_retType := _p.idl.Method("Explorer.suggestGasPrice").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(int64(0)), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(int64)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.suggestGasPrice returned invalid type: %v", _t)
			return int64(0), &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return int64(0), _err
}

func (_p ExplorerProxy) EstimateGasForTransfer(request SendTransferRequest) (int64, error) {
	_res, _err := _p.client.Call("Explorer.estimateGasForTransfer", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.estimateGasForTransfer").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(int64(0)), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(int64)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.estimateGasForTransfer returned invalid type: %v", _t)
			return int64(0), &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return int64(0), _err
}

func (_p ExplorerProxy) EstimateGasForVote() (int64, error) {
	_res, _err := _p.client.Call("Explorer.estimateGasForVote")
	if _err == nil {
		_retType := _p.idl.Method("Explorer.estimateGasForVote").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(int64(0)), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(int64)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.estimateGasForVote returned invalid type: %v", _t)
			return int64(0), &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return int64(0), _err
}

func (_p ExplorerProxy) EstimateGasForSmartContract(request Execution) (int64, error) {
	_res, _err := _p.client.Call("Explorer.estimateGasForSmartContract", request)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.estimateGasForSmartContract").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(int64(0)), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(int64)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.estimateGasForSmartContract returned invalid type: %v", _t)
			return int64(0), &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return int64(0), _err
}

func (_p ExplorerProxy) GetStateRootHash(blockHeight int64) (string, error) {
	_res, _err := _p.client.Call("Explorer.getStateRootHash", blockHeight)
	if _err == nil {
		_retType := _p.idl.Method("Explorer.getStateRootHash").Returns
		_res, _err = barrister.Convert(_p.idl, &_retType, reflect.TypeOf(""), _res, "")
	}
	if _err == nil {
		_cast, _ok := _res.(string)
		if !_ok {
			_t := reflect.TypeOf(_res)
			_msg := fmt.Sprintf("Explorer.getStateRootHash returned invalid type: %v", _t)
			return "", &barrister.JsonRpcError{Code: -32000, Message: _msg}
		}
		return _cast, nil
	}
	return "", _err
}

func NewJSONServer(idl *barrister.Idl, forceASCII bool, explorer Explorer) barrister.Server {
	return NewServer(idl, &barrister.JsonSerializer{forceASCII}, explorer)
}

func NewServer(idl *barrister.Idl, ser barrister.Serializer, explorer Explorer) barrister.Server {
	_svr := barrister.NewServer(idl, ser)
	_svr.AddHandler("Explorer", explorer)
	return _svr
}

var IdlJsonRaw = `[
    {
        "type": "comment",
        "name": "",
        "comment": "",
        "value": "Copyright (c) 2019 IoTeX\nThis is an alpha (internal) release and is not suitable for production. This source code is provided 'as is' and no\nwarranties are given as to title or non-infringement, merchantability or fitness for purpose and, to the extent\npermitted by law, all liability for your use of the code is disclaimed. This source code is governed by Apache\nLicense 2.0 that can be found in the LICENSE file.",
        "extends": "",
        "fields": null,
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "comment",
        "name": "",
        "comment": "",
        "value": "To compile this file:\n1. Install the barrister translator (IDL -\u003e JSON)\nyou need to be root (or use sudo)\npip install barrister",
        "extends": "",
        "fields": null,
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "comment",
        "name": "",
        "comment": "",
        "value": "2. Install barrister-go\ngo get github.com/coopernurse/barrister-go\ngo install github.com/coopernurse/barrister-go/idl2go",
        "extends": "",
        "fields": null,
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "comment",
        "name": "",
        "comment": "",
        "value": "3. barrister explorer.idl | $GOPATH/bin/idl2go -i -p explorer",
        "extends": "",
        "fields": null,
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "CoinStatistic",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "height",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "supply",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "transfers",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "votes",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "executions",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "aps",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "BlockGenerator",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "name",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "address",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Block",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "ID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "height",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "timestamp",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "transfers",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "votes",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "executions",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "generateBy",
                "type": "BlockGenerator",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "size",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "txRoot",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "deltaStateDigest",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Transfer",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "ID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "sender",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "recipient",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "senderPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "payload",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isCoinbase",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "fee",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "timestamp",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "blockID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isPending",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Execution",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "ID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "executor",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "contract",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "executorPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "timestamp",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "data",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "blockID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isPending",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Log",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "address",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "topics",
                "type": "string",
                "optional": false,
                "is_array": true,
                "comment": ""
            },
            {
                "name": "data",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "blockNumber",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "txnHash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "index",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Receipt",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "returnValue",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "status",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "hash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasConsumed",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "contractAddress",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "logs",
                "type": "Log",
                "optional": false,
                "is_array": true,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendExecutionResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "receipt",
                "type": "Receipt",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Vote",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "ID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "timestamp",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "voter",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "votee",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "voterPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "blockID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isPending",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "AddressDetails",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "address",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "totalBalance",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "pendingNonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isCandidate",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Candidate",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "address",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "pubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "totalVote",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isDelegate",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isProducer",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "CandidateMetrics",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "candidates",
                "type": "Candidate",
                "optional": false,
                "is_array": true,
                "comment": ""
            },
            {
                "name": "latestEpoch",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "latestHeight",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "ConsensusMetrics",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "latestEpoch",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "latestDelegates",
                "type": "string",
                "optional": false,
                "is_array": true,
                "comment": ""
            },
            {
                "name": "latestBlockProducer",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "candidates",
                "type": "string",
                "optional": false,
                "is_array": true,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendTransferRequest",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "sender",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "recipient",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "senderPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "payload",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isCoinbase",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendTransferResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "hash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendVoteRequest",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "voter",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "votee",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "voterPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendVoteResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "hash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "PutSubChainBlockMerkelRoot",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "name",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "value",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "PutSubChainBlockRequest",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "senderAddress",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "subChainAddress",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "height",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "roots",
                "type": "PutSubChainBlockMerkelRoot",
                "optional": false,
                "is_array": true,
                "comment": ""
            },
            {
                "name": "senderPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "PutSubChainBlockResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "hash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendActionRequest",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "payload",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendActionResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "payload",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Node",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "address",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "GetPeersResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "Self",
                "type": "Node",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "Peers",
                "type": "Node",
                "optional": false,
                "is_array": true,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SendSmartContractResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "hash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "GetBlkOrActResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "block",
                "type": "Block",
                "optional": true,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "transfer",
                "type": "Transfer",
                "optional": true,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "vote",
                "type": "Vote",
                "optional": true,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "execution",
                "type": "Execution",
                "optional": true,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "address",
                "type": "AddressDetails",
                "optional": true,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "CreateDepositRequest",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "chainID",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "sender",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "senderPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "recipient",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "CreateDepositResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "hash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "Deposit",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "address",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "confirmed",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SettleDepositRequest",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "sender",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "senderPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "recipient",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "index",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SettleDepositResponse",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "hash",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "CreateDeposit",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "ID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "sender",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "recipient",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "senderPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "fee",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "timestamp",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "blockID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isPending",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "struct",
        "name": "SettleDeposit",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": [
            {
                "name": "version",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "ID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "nonce",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "sender",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "recipient",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "amount",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "index",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "senderPubKey",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "signature",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasLimit",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "gasPrice",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "fee",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "timestamp",
                "type": "int",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "blockID",
                "type": "string",
                "optional": false,
                "is_array": false,
                "comment": ""
            },
            {
                "name": "isPending",
                "type": "bool",
                "optional": false,
                "is_array": false,
                "comment": ""
            }
        ],
        "values": null,
        "functions": null,
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "interface",
        "name": "Explorer",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": null,
        "values": null,
        "functions": [
            {
                "name": "getBlockchainHeight",
                "comment": "get the blockchain tip height",
                "params": [],
                "returns": {
                    "name": "",
                    "type": "int",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getAddressBalance",
                "comment": "get the balance of an address",
                "params": [
                    {
                        "name": "address",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "string",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getAddressDetails",
                "comment": "get the address detail of an iotex address",
                "params": [
                    {
                        "name": "address",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "AddressDetails",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getCreateDeposit",
                "comment": "get create deposit from id",
                "params": [
                    {
                        "name": "createDepositID",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "CreateDeposit",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getCreateDepositsByAddress",
                "comment": "get list of create deposits belonging to an address",
                "params": [
                    {
                        "name": "address",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    },
                    {
                        "name": "offset",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    },
                    {
                        "name": "limit",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "CreateDeposit",
                    "optional": false,
                    "is_array": true,
                    "comment": ""
                }
            },
            {
                "name": "getSettleDeposit",
                "comment": "get settle deposit from id",
                "params": [
                    {
                        "name": "settleDepositID",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "SettleDeposit",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getSettleDepositsByAddress",
                "comment": "get list of settle deposits belonging to an address",
                "params": [
                    {
                        "name": "address",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    },
                    {
                        "name": "offset",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    },
                    {
                        "name": "limit",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "SettleDeposit",
                    "optional": false,
                    "is_array": true,
                    "comment": ""
                }
            },
            {
                "name": "getLastBlocksByRange",
                "comment": "get list of blocks by block id offset and limit",
                "params": [
                    {
                        "name": "offset",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    },
                    {
                        "name": "limit",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "Block",
                    "optional": false,
                    "is_array": true,
                    "comment": ""
                }
            },
            {
                "name": "getBlockByID",
                "comment": "get block by block id",
                "params": [
                    {
                        "name": "blkID",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "Block",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getCoinStatistic",
                "comment": "get statistic of iotx",
                "params": [],
                "returns": {
                    "name": "",
                    "type": "CoinStatistic",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getConsensusMetrics",
                "comment": "get consensus metrics",
                "params": [],
                "returns": {
                    "name": "",
                    "type": "ConsensusMetrics",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getCandidateMetrics",
                "comment": "get candidates metrics",
                "params": [],
                "returns": {
                    "name": "",
                    "type": "CandidateMetrics",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getCandidateMetricsByHeight",
                "comment": "get candidates metrics at given height",
                "params": [
                    {
                        "name": "h",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "CandidateMetrics",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "sendTransfer",
                "comment": "send transfer",
                "params": [
                    {
                        "name": "request",
                        "type": "SendTransferRequest",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "SendTransferResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "sendVote",
                "comment": "send vote",
                "params": [
                    {
                        "name": "request",
                        "type": "SendVoteRequest",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "SendVoteResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "sendSmartContract",
                "comment": "sendSmartContract",
                "params": [
                    {
                        "name": "request",
                        "type": "Execution",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "SendSmartContractResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "putSubChainBlock",
                "comment": "putSubChainBlock",
                "params": [
                    {
                        "name": "request",
                        "type": "PutSubChainBlockRequest",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "PutSubChainBlockResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "sendAction",
                "comment": "sendAction",
                "params": [
                    {
                        "name": "request",
                        "type": "SendActionRequest",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "SendActionResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getPeers",
                "comment": "get list of peers",
                "params": [],
                "returns": {
                    "name": "",
                    "type": "GetPeersResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getReceiptByExecutionID",
                "comment": "get receipt by execution id",
                "params": [
                    {
                        "name": "id",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "Receipt",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getReceiptByActionID",
                "comment": "get receipt by action id",
                "params": [
                    {
                        "name": "id",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "Receipt",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "readExecutionState",
                "comment": "read execution state",
                "params": [
                    {
                        "name": "request",
                        "type": "Execution",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "string",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getBlockOrActionByHash",
                "comment": "get block or action by a hash",
                "params": [
                    {
                        "name": "hashStr",
                        "type": "string",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "GetBlkOrActResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "createDeposit",
                "comment": "deposit balance from main-chain to sub-chain",
                "params": [
                    {
                        "name": "request",
                        "type": "CreateDepositRequest",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "CreateDepositResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getDeposits",
                "comment": "get deposits on a sub-chain",
                "params": [
                    {
                        "name": "subChainID",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    },
                    {
                        "name": "offset",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    },
                    {
                        "name": "limit",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "Deposit",
                    "optional": false,
                    "is_array": true,
                    "comment": ""
                }
            },
            {
                "name": "settleDeposit",
                "comment": "settle deposit on sub-chain. This is a sub-chain API",
                "params": [
                    {
                        "name": "request",
                        "type": "SettleDepositRequest",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "SettleDepositResponse",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "suggestGasPrice",
                "comment": "suggest gas price",
                "params": [],
                "returns": {
                    "name": "",
                    "type": "int",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "estimateGasForTransfer",
                "comment": "estimate gas for transfer",
                "params": [
                    {
                        "name": "request",
                        "type": "SendTransferRequest",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "int",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "estimateGasForVote",
                "comment": "estimate gas for vote",
                "params": [],
                "returns": {
                    "name": "",
                    "type": "int",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "estimateGasForSmartContract",
                "comment": "estimate gas for smart contract",
                "params": [
                    {
                        "name": "request",
                        "type": "Execution",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "int",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            },
            {
                "name": "getStateRootHash",
                "comment": "get the state root hash of a given block height",
                "params": [
                    {
                        "name": "blockHeight",
                        "type": "int",
                        "optional": false,
                        "is_array": false,
                        "comment": ""
                    }
                ],
                "returns": {
                    "name": "",
                    "type": "string",
                    "optional": false,
                    "is_array": false,
                    "comment": ""
                }
            }
        ],
        "barrister_version": "",
        "date_generated": 0,
        "checksum": ""
    },
    {
        "type": "meta",
        "name": "",
        "comment": "",
        "value": "",
        "extends": "",
        "fields": null,
        "values": null,
        "functions": null,
        "barrister_version": "0.1.6",
        "date_generated": 1553297260246,
        "checksum": "0f6bf284ad39053040811ee110998a4d"
    }
]`
