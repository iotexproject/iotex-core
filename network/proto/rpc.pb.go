// Code generated by protoc-gen-go. DO NOT EDIT.
// source: network/proto/rpc.proto

package network

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Ping struct {
	Nonce uint64 `protobuf:"varint,1,opt,name=nonce" json:"nonce,omitempty"`
	// Every one who participates into the network needs to tell others its address
	// TODO: Seperate it as a standalone protocol
	Addr                 string   `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{0}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (dst *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(dst, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Ping) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type Pong struct {
	AckNonce             uint64   `protobuf:"varint,1,opt,name=ack_nonce,json=ackNonce" json:"ack_nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{1}
}
func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (dst *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(dst, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetAckNonce() uint64 {
	if m != nil {
		return m.AckNonce
	}
	return 0
}

type GetPeersReq struct {
	Count                uint32   `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeersReq) Reset()         { *m = GetPeersReq{} }
func (m *GetPeersReq) String() string { return proto.CompactTextString(m) }
func (*GetPeersReq) ProtoMessage()    {}
func (*GetPeersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{2}
}
func (m *GetPeersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeersReq.Unmarshal(m, b)
}
func (m *GetPeersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeersReq.Marshal(b, m, deterministic)
}
func (dst *GetPeersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeersReq.Merge(dst, src)
}
func (m *GetPeersReq) XXX_Size() int {
	return xxx_messageInfo_GetPeersReq.Size(m)
}
func (m *GetPeersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeersReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeersReq proto.InternalMessageInfo

func (m *GetPeersReq) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetPeersRes struct {
	Addr                 []string `protobuf:"bytes,1,rep,name=addr" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPeersRes) Reset()         { *m = GetPeersRes{} }
func (m *GetPeersRes) String() string { return proto.CompactTextString(m) }
func (*GetPeersRes) ProtoMessage()    {}
func (*GetPeersRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{3}
}
func (m *GetPeersRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPeersRes.Unmarshal(m, b)
}
func (m *GetPeersRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPeersRes.Marshal(b, m, deterministic)
}
func (dst *GetPeersRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPeersRes.Merge(dst, src)
}
func (m *GetPeersRes) XXX_Size() int {
	return xxx_messageInfo_GetPeersRes.Size(m)
}
func (m *GetPeersRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPeersRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetPeersRes proto.InternalMessageInfo

func (m *GetPeersRes) GetAddr() []string {
	if m != nil {
		return m.Addr
	}
	return nil
}

type BroadcastReq struct {
	Header               uint32   `protobuf:"varint,1,opt,name=header" json:"header,omitempty"`
	MsgType              uint32   `protobuf:"varint,2,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	MsgBody              []byte   `protobuf:"bytes,3,opt,name=msg_body,json=msgBody,proto3" json:"msg_body,omitempty"`
	Ttl                  uint32   `protobuf:"varint,4,opt,name=ttl" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcastReq) Reset()         { *m = BroadcastReq{} }
func (m *BroadcastReq) String() string { return proto.CompactTextString(m) }
func (*BroadcastReq) ProtoMessage()    {}
func (*BroadcastReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{4}
}
func (m *BroadcastReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastReq.Unmarshal(m, b)
}
func (m *BroadcastReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastReq.Marshal(b, m, deterministic)
}
func (dst *BroadcastReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastReq.Merge(dst, src)
}
func (m *BroadcastReq) XXX_Size() int {
	return xxx_messageInfo_BroadcastReq.Size(m)
}
func (m *BroadcastReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastReq.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastReq proto.InternalMessageInfo

func (m *BroadcastReq) GetHeader() uint32 {
	if m != nil {
		return m.Header
	}
	return 0
}

func (m *BroadcastReq) GetMsgType() uint32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *BroadcastReq) GetMsgBody() []byte {
	if m != nil {
		return m.MsgBody
	}
	return nil
}

func (m *BroadcastReq) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type BroadcastRes struct {
	Header               uint32   `protobuf:"varint,1,opt,name=header" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BroadcastRes) Reset()         { *m = BroadcastRes{} }
func (m *BroadcastRes) String() string { return proto.CompactTextString(m) }
func (*BroadcastRes) ProtoMessage()    {}
func (*BroadcastRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{5}
}
func (m *BroadcastRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BroadcastRes.Unmarshal(m, b)
}
func (m *BroadcastRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BroadcastRes.Marshal(b, m, deterministic)
}
func (dst *BroadcastRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BroadcastRes.Merge(dst, src)
}
func (m *BroadcastRes) XXX_Size() int {
	return xxx_messageInfo_BroadcastRes.Size(m)
}
func (m *BroadcastRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BroadcastRes.DiscardUnknown(m)
}

var xxx_messageInfo_BroadcastRes proto.InternalMessageInfo

func (m *BroadcastRes) GetHeader() uint32 {
	if m != nil {
		return m.Header
	}
	return 0
}

type TellReq struct {
	Header               uint32   `protobuf:"varint,1,opt,name=header" json:"header,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	MsgType              uint32   `protobuf:"varint,3,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	MsgBody              []byte   `protobuf:"bytes,4,opt,name=msg_body,json=msgBody,proto3" json:"msg_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TellReq) Reset()         { *m = TellReq{} }
func (m *TellReq) String() string { return proto.CompactTextString(m) }
func (*TellReq) ProtoMessage()    {}
func (*TellReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{6}
}
func (m *TellReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TellReq.Unmarshal(m, b)
}
func (m *TellReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TellReq.Marshal(b, m, deterministic)
}
func (dst *TellReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TellReq.Merge(dst, src)
}
func (m *TellReq) XXX_Size() int {
	return xxx_messageInfo_TellReq.Size(m)
}
func (m *TellReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TellReq.DiscardUnknown(m)
}

var xxx_messageInfo_TellReq proto.InternalMessageInfo

func (m *TellReq) GetHeader() uint32 {
	if m != nil {
		return m.Header
	}
	return 0
}

func (m *TellReq) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *TellReq) GetMsgType() uint32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *TellReq) GetMsgBody() []byte {
	if m != nil {
		return m.MsgBody
	}
	return nil
}

type TellRes struct {
	Header               uint32   `protobuf:"varint,1,opt,name=header" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TellRes) Reset()         { *m = TellRes{} }
func (m *TellRes) String() string { return proto.CompactTextString(m) }
func (*TellRes) ProtoMessage()    {}
func (*TellRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_e452c36976e6f4c9, []int{7}
}
func (m *TellRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TellRes.Unmarshal(m, b)
}
func (m *TellRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TellRes.Marshal(b, m, deterministic)
}
func (dst *TellRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TellRes.Merge(dst, src)
}
func (m *TellRes) XXX_Size() int {
	return xxx_messageInfo_TellRes.Size(m)
}
func (m *TellRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TellRes.DiscardUnknown(m)
}

var xxx_messageInfo_TellRes proto.InternalMessageInfo

func (m *TellRes) GetHeader() uint32 {
	if m != nil {
		return m.Header
	}
	return 0
}

func init() {
	proto.RegisterType((*Ping)(nil), "network.Ping")
	proto.RegisterType((*Pong)(nil), "network.Pong")
	proto.RegisterType((*GetPeersReq)(nil), "network.GetPeersReq")
	proto.RegisterType((*GetPeersRes)(nil), "network.GetPeersRes")
	proto.RegisterType((*BroadcastReq)(nil), "network.BroadcastReq")
	proto.RegisterType((*BroadcastRes)(nil), "network.BroadcastRes")
	proto.RegisterType((*TellReq)(nil), "network.TellReq")
	proto.RegisterType((*TellRes)(nil), "network.TellRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PeerClient is the client API for Peer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PeerClient interface {
	Ping(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
	GetPeers(ctx context.Context, in *GetPeersReq, opts ...grpc.CallOption) (*GetPeersRes, error)
	Broadcast(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRes, error)
	Tell(ctx context.Context, in *TellReq, opts ...grpc.CallOption) (*TellRes, error)
}

type peerClient struct {
	cc *grpc.ClientConn
}

func NewPeerClient(cc *grpc.ClientConn) PeerClient {
	return &peerClient{cc}
}

func (c *peerClient) Ping(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/network.Peer/ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerClient) GetPeers(ctx context.Context, in *GetPeersReq, opts ...grpc.CallOption) (*GetPeersRes, error) {
	out := new(GetPeersRes)
	err := c.cc.Invoke(ctx, "/network.Peer/getPeers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerClient) Broadcast(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastRes, error) {
	out := new(BroadcastRes)
	err := c.cc.Invoke(ctx, "/network.Peer/broadcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerClient) Tell(ctx context.Context, in *TellReq, opts ...grpc.CallOption) (*TellRes, error) {
	out := new(TellRes)
	err := c.cc.Invoke(ctx, "/network.Peer/tell", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PeerServer is the server API for Peer service.
type PeerServer interface {
	Ping(context.Context, *Ping) (*Pong, error)
	GetPeers(context.Context, *GetPeersReq) (*GetPeersRes, error)
	Broadcast(context.Context, *BroadcastReq) (*BroadcastRes, error)
	Tell(context.Context, *TellReq) (*TellRes, error)
}

func RegisterPeerServer(s *grpc.Server, srv PeerServer) {
	s.RegisterService(&_Peer_serviceDesc, srv)
}

func _Peer_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.Peer/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).Ping(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

func _Peer_GetPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).GetPeers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.Peer/GetPeers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).GetPeers(ctx, req.(*GetPeersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Peer_Broadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).Broadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.Peer/Broadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).Broadcast(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Peer_Tell_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TellReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).Tell(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/network.Peer/Tell",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).Tell(ctx, req.(*TellReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Peer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "network.Peer",
	HandlerType: (*PeerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ping",
			Handler:    _Peer_Ping_Handler,
		},
		{
			MethodName: "getPeers",
			Handler:    _Peer_GetPeers_Handler,
		},
		{
			MethodName: "broadcast",
			Handler:    _Peer_Broadcast_Handler,
		},
		{
			MethodName: "tell",
			Handler:    _Peer_Tell_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "network/proto/rpc.proto",
}

func init() { proto.RegisterFile("network/proto/rpc.proto", fileDescriptor_rpc_e452c36976e6f4c9) }

var fileDescriptor_rpc_e452c36976e6f4c9 = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4d, 0x4f, 0xf2, 0x40,
	0x18, 0xa4, 0x6f, 0xf7, 0xe5, 0xe3, 0x11, 0x12, 0xf2, 0x04, 0xb5, 0xd6, 0x4b, 0x59, 0x12, 0xc2,
	0xc1, 0x80, 0xd1, 0x8b, 0x89, 0x37, 0x2e, 0xde, 0x0c, 0x69, 0xb8, 0x93, 0xd2, 0x6e, 0xaa, 0x69,
	0xd9, 0xad, 0xbb, 0x6b, 0x4c, 0x7f, 0xa7, 0x7f, 0xc8, 0xec, 0x52, 0x9a, 0x62, 0xc0, 0xdb, 0xce,
	0xf3, 0x35, 0x93, 0x99, 0x85, 0x6b, 0xce, 0xf4, 0x97, 0x90, 0xd9, 0xa2, 0x90, 0x42, 0x8b, 0x85,
	0x2c, 0xe2, 0xb9, 0x7d, 0x61, 0xa7, 0x6a, 0xd0, 0x7b, 0x20, 0xab, 0x77, 0x9e, 0xe2, 0x08, 0xfe,
	0x73, 0xc1, 0x63, 0xe6, 0x39, 0x81, 0x33, 0x23, 0xe1, 0x1e, 0x20, 0x02, 0x89, 0x92, 0x44, 0x7a,
	0xff, 0x02, 0x67, 0xd6, 0x0b, 0xed, 0x9b, 0x4e, 0x80, 0xac, 0x04, 0x4f, 0xf1, 0x16, 0x7a, 0x51,
	0x9c, 0x6d, 0x9a, 0x5b, 0xdd, 0x28, 0xce, 0x5e, 0x0d, 0xa6, 0x13, 0xb8, 0x78, 0x61, 0x7a, 0xc5,
	0x98, 0x54, 0x21, 0xfb, 0x30, 0xd7, 0x63, 0xf1, 0xc9, 0xb5, 0x9d, 0x1b, 0x84, 0x7b, 0x40, 0xc7,
	0xcd, 0x21, 0x55, 0x93, 0x39, 0x81, 0x5b, 0x93, 0x71, 0xe8, 0x2f, 0xa5, 0x88, 0x92, 0x38, 0x52,
	0xda, 0x1c, 0xba, 0x82, 0xf6, 0x1b, 0x8b, 0x12, 0x26, 0xab, 0x4b, 0x15, 0xc2, 0x1b, 0xe8, 0xee,
	0x54, 0xba, 0xd1, 0x65, 0xc1, 0xac, 0xd8, 0x41, 0xd8, 0xd9, 0xa9, 0x74, 0x5d, 0x16, 0xec, 0xd0,
	0xda, 0x8a, 0xa4, 0xf4, 0xdc, 0xc0, 0x99, 0xf5, 0x6d, 0x6b, 0x29, 0x92, 0x12, 0x87, 0xe0, 0x6a,
	0x9d, 0x7b, 0xc4, 0x2e, 0x98, 0x27, 0x9d, 0x1e, 0xf1, 0xa9, 0x73, 0x7c, 0x34, 0x83, 0xce, 0x9a,
	0xe5, 0xf9, 0x5f, 0x92, 0x4e, 0x78, 0x77, 0x24, 0xd3, 0x3d, 0x2f, 0x93, 0x1c, 0xc9, 0xa4, 0xe3,
	0x03, 0xd9, 0x59, 0x3d, 0x0f, 0xdf, 0x0e, 0x10, 0x63, 0x24, 0x4e, 0x81, 0x14, 0x26, 0xcf, 0xc1,
	0xbc, 0x4a, 0x78, 0x6e, 0xe2, 0xf5, 0x1b, 0x50, 0xf0, 0x94, 0xb6, 0xf0, 0x09, 0xba, 0x69, 0xe5,
	0x3d, 0x8e, 0xea, 0x66, 0x23, 0x33, 0xff, 0x54, 0x55, 0xd1, 0x16, 0x3e, 0x43, 0x6f, 0x7b, 0xb0,
	0x08, 0x2f, 0xeb, 0xa1, 0x66, 0x4c, 0xfe, 0xc9, 0xb2, 0x59, 0xbe, 0x03, 0xa2, 0x59, 0x9e, 0xe3,
	0xb0, 0x1e, 0xa8, 0x6c, 0xf4, 0x7f, 0x57, 0x14, 0x6d, 0x6d, 0xdb, 0xf6, 0xb3, 0x3e, 0xfe, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xb2, 0x38, 0xd7, 0x27, 0xc7, 0x02, 0x00, 0x00,
}
