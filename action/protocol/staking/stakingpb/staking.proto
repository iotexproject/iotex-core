// Copyright (c) 2020 IoTeX
// This source code is provided 'as is' and no warranties are given as to title or non-infringement, merchantability
// or fitness for purpose and, to the extent permitted by law, all liability for your use of the code is disclaimed.
// This source code is governed by Apache License 2.0 that can be found in the LICENSE file.

// To compile the proto, run:
//      protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";
package stakingpb;
option go_package = "github.com/iotexproject/iotex-core/action/protocol/staking/stakingpb";
import "google/protobuf/timestamp.proto";

message Bucket {
  uint64 index = 1;
  string candidateAddress = 2;
  string stakedAmount = 3;
  uint32 stakedDuration = 4;
  google.protobuf.Timestamp createTime = 5;
  google.protobuf.Timestamp stakeStartTime = 6;
  google.protobuf.Timestamp unstakeStartTime = 7;
  bool autoStake = 8;
  string owner = 9;
  string contractAddress = 10;
  uint64 stakedDurationBlockNumber = 11;
  uint64 createBlockHeight = 12;
  uint64 stakeStartBlockHeight = 13;
  uint64 unstakeStartBlockHeight = 14;
}

message BucketIndices {
    repeated uint64 indices = 1;
}

message Candidate {
    string ownerAddress = 1;
    string operatorAddress = 2;
    string rewardAddress = 3;
    string name = 4;
    string votes = 5;
    uint64 selfStakeBucketIdx = 6;
    string selfStake = 7;
}

message Candidates {
    repeated Candidate candidates = 1;
}

message TotalAmount {
    string amount = 1;
    uint64 count = 2;
}

message BucketType {
    string amount = 1;
    uint64 duration = 2;
    uint64 activatedAt = 3;
}