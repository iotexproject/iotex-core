// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blacklist.proto

package blacklistpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlackList struct {
	BlackListInfos       []*BlackListInfo `protobuf:"bytes,1,rep,name=blackListInfos,proto3" json:"blackListInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BlackList) Reset()         { *m = BlackList{} }
func (m *BlackList) String() string { return proto.CompactTextString(m) }
func (*BlackList) ProtoMessage()    {}
func (*BlackList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e533ff776c9dc202, []int{0}
}

func (m *BlackList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlackList.Unmarshal(m, b)
}
func (m *BlackList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlackList.Marshal(b, m, deterministic)
}
func (m *BlackList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlackList.Merge(m, src)
}
func (m *BlackList) XXX_Size() int {
	return xxx_messageInfo_BlackList.Size(m)
}
func (m *BlackList) XXX_DiscardUnknown() {
	xxx_messageInfo_BlackList.DiscardUnknown(m)
}

var xxx_messageInfo_BlackList proto.InternalMessageInfo

func (m *BlackList) GetBlackListInfos() []*BlackListInfo {
	if m != nil {
		return m.BlackListInfos
	}
	return nil
}

type BlackListInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlackListInfo) Reset()         { *m = BlackListInfo{} }
func (m *BlackListInfo) String() string { return proto.CompactTextString(m) }
func (*BlackListInfo) ProtoMessage()    {}
func (*BlackListInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e533ff776c9dc202, []int{1}
}

func (m *BlackListInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlackListInfo.Unmarshal(m, b)
}
func (m *BlackListInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlackListInfo.Marshal(b, m, deterministic)
}
func (m *BlackListInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlackListInfo.Merge(m, src)
}
func (m *BlackListInfo) XXX_Size() int {
	return xxx_messageInfo_BlackListInfo.Size(m)
}
func (m *BlackListInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlackListInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlackListInfo proto.InternalMessageInfo

func (m *BlackListInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BlackListInfo) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*BlackList)(nil), "blacklistpb.blackList")
	proto.RegisterType((*BlackListInfo)(nil), "blacklistpb.blackListInfo")
}

func init() { proto.RegisterFile("blacklist.proto", fileDescriptor_e533ff776c9dc202) }

var fileDescriptor_e533ff776c9dc202 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xca, 0x49, 0x4c,
	0xce, 0xce, 0xc9, 0x2c, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x86, 0x0b, 0x14,
	0x24, 0x29, 0xf9, 0x73, 0x71, 0x82, 0xb9, 0x3e, 0x99, 0xc5, 0x25, 0x42, 0x4e, 0x5c, 0x7c, 0x70,
	0x8e, 0x67, 0x5e, 0x5a, 0x7e, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x94, 0x1e, 0x92,
	0x16, 0x3d, 0x14, 0x25, 0x41, 0x68, 0x3a, 0x94, 0x2c, 0xb9, 0x78, 0x51, 0x44, 0x84, 0x84, 0xb8,
	0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x11,
	0x2e, 0xd6, 0xe4, 0xfc, 0xd2, 0xbc, 0x12, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x08, 0x27,
	0x89, 0x0d, 0xec, 0x3e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x1b, 0x7f, 0x9f, 0xb2,
	0x00, 0x00, 0x00,
}
