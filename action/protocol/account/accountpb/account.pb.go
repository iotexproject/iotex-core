// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package accountpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Account struct {
	// used by state-based model
	Nonce                uint64   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Balance              string   `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Root                 []byte   `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	CodeHash             []byte   `protobuf:"bytes,4,opt,name=codeHash,proto3" json:"codeHash,omitempty"`
	IsCandidate          bool     `protobuf:"varint,5,opt,name=isCandidate,proto3" json:"isCandidate,omitempty"`
	VotingWeight         []byte   `protobuf:"bytes,6,opt,name=votingWeight,proto3" json:"votingWeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Account) GetBalance() string {
	if m != nil {
		return m.Balance
	}
	return ""
}

func (m *Account) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *Account) GetCodeHash() []byte {
	if m != nil {
		return m.CodeHash
	}
	return nil
}

func (m *Account) GetIsCandidate() bool {
	if m != nil {
		return m.IsCandidate
	}
	return false
}

func (m *Account) GetVotingWeight() []byte {
	if m != nil {
		return m.VotingWeight
	}
	return nil
}

func init() {
	proto.RegisterType((*Account)(nil), "accountpb.Account")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor_8e28828dcb8d24f0) }

var fileDescriptor_8e28828dcb8d24f0 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xcf, 0x3f, 0xcb, 0xc2, 0x30,
	0x10, 0xc7, 0x71, 0xf2, 0x3c, 0xfd, 0x7b, 0xd6, 0xe5, 0x70, 0x08, 0x4e, 0xa1, 0x53, 0x26, 0x17,
	0x5f, 0x81, 0xb8, 0x38, 0x67, 0x71, 0x4e, 0x93, 0xd0, 0x06, 0x24, 0x57, 0xda, 0xe8, 0xdb, 0xf2,
	0x2d, 0x8a, 0xa9, 0x8a, 0x6e, 0xf7, 0xf9, 0x0e, 0x07, 0x3f, 0x58, 0x6b, 0x63, 0xe8, 0x1a, 0xe2,
	0x6e, 0x9c, 0x28, 0x12, 0xd6, 0x2f, 0x8e, 0x5d, 0x7b, 0x67, 0x50, 0x1e, 0x16, 0xe1, 0x06, 0xf2,
	0x40, 0xc1, 0x38, 0xce, 0x04, 0x93, 0x99, 0x5a, 0x80, 0x1c, 0xca, 0x4e, 0x5f, 0xf4, 0xb3, 0xff,
	0x09, 0x26, 0x6b, 0xf5, 0x26, 0x22, 0x64, 0x13, 0x51, 0xe4, 0xff, 0x82, 0xc9, 0x46, 0xa5, 0x1b,
	0xb7, 0x50, 0x19, 0xb2, 0xee, 0xa4, 0xe7, 0x81, 0x67, 0xa9, 0x7f, 0x8c, 0x02, 0x56, 0x7e, 0x3e,
	0xea, 0x60, 0xbd, 0xd5, 0xd1, 0xf1, 0x5c, 0x30, 0x59, 0xa9, 0xef, 0x84, 0x2d, 0x34, 0x37, 0x8a,
	0x3e, 0xf4, 0x67, 0xe7, 0xfb, 0x21, 0xf2, 0x22, 0x7d, 0xf8, 0x69, 0x5d, 0x91, 0x36, 0xec, 0x1f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x31, 0x8a, 0x32, 0xd4, 0x00, 0x00, 0x00,
}
