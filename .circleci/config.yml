# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: iotex/iotex-core-ci:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/iotexproject/iotex-core
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: echo $PATH
      - run: go env
      - run: go get github.com/wanlibing/go2xunit
      - run: go build github.com/wanlibing/go2xunit
      - run: mkdir -p /tmp/test_report_upload
      - run: cat /go/src/github.com/wanlibing/go2xunit/lib/parsers.go | grep -i "orphan"
      - run: which go2xunit
      - run: go list ./... | grep -v 'vender\|accountpb\|util\|subchainpb\|rewardingpb\|candidatesutil\|chainservice\|cli\|consensus\|triepb\|idl\|p2p\|log\|unit\|protogen\|server\|identityset\|mock\|tools'
      - run: echo '<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="0" tests="1" time="0.009"><testcase classname="test_quick_start" file="test_quick_start.py" line="3" name="test_reverse" time="0.000499725341797"></testcase></testsuite>'> /tmp/test_report_upload/this.xml
      - run: golint -set_exit_status $(go list ./... | grep -v /vendor/ | grep -v /explorer/idl/ | grep -v /api/idl/)
      - run: ./go.test.sh
      - run: bash <(curl -s https://codecov.io/bash)
      - run: go test -v -run=XXX -bench=. $(go list ./crypto) | go2xunit > /tmp/test_report_upload/bench.xml
      - run: make minicluster
      - store_test_results:
          path: /tmp/test_report_upload
  nightly:
    docker:
      # specify the version
      - image: iotex/iotex-core-ci:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/iotexproject/iotex-core
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: make nightlybuild
workflows:
  version: 2
  commit:
    jobs:
      - build
