# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:

  build_test_local:
    docker:
      - image: iotex/iotex-core-ci:latest
    working_directory: /go/src/github.com/iotexproject/iotex-core
    steps:
      - run: mkdir -p /go/src/github.com/iotexproject/iotex-core && cp -arf /tmp/_circleci_local_build_repo/* /go/src/github.com/iotexproject/iotex-core/
      - run: golint -set_exit_status $(go list ./... | grep -v /vendor/ | grep -v /explorer/idl/ | grep -v /api/idl/)
      - run: ./go.test.sh
      - run: bash <(curl -s https://codecov.io/bash)
      - run: go test -run=XXX -bench=. $(go list ./crypto)
      - run: make minicluster
                            
  build_test_docker:
    docker:
      - image: iotex/iotex-core-ci:latest
    working_directory: /go/src/github.com/iotexproject/iotex-core
    steps:
      - checkout
      - run: golint -set_exit_status $(go list ./... | grep -v /vendor/ | grep -v /explorer/idl/ | grep -v /api/idl/)
      - run: ./go.test.sh
      - run: bash <(curl -s https://codecov.io/bash)
      - run: go test -run=XXX -bench=. $(go list ./crypto)
      - run: make minicluster

  build_test_darwin:
    macos:
      xcode: "10.2.0"   # not supported > 10.2.0
    working_directory: ~/go/src/github.com/iotexproject/iotex-core

    steps:
      - checkout
      - run:
          name: install golang 1.11.6
          command: |
            curl -o go1.11.6.darwin-amd64.tar.gz https://dl.google.com/go/go1.11.6.darwin-amd64.tar.gz
            sudo tar -C /usr/local -xzf go1.11.6.darwin-amd64.tar.gz
      - run:
          name: SET GO ENV AND go.test.sh
          command: |
            export GOPATH=~/go
            export GOROOT="/usr/local/go"
            export PATH=$PATH:$GOPATH/bin:$PATH:$GOROOT/bin
            ./go.test.sh
            bash <(curl -s https://codecov.io/bash)
            go test -run=XXX -bench=. $(go list ./crypto)
            make minicluster

  build_test_ubuntu:
    machine:
      image: circleci/classic:latest
    working_directory: ~/go/src/github.com/iotexproject/iotex-core
    steps:
      - checkout
      - run: 
          name: clean go 1.9 update golang 1.11.6
          command: |
            wget https://dl.google.com/go/go1.11.6.linux-amd64.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -zxf go1.11.6.linux-amd64.tar.gz
      - run:
          name: SET GO ENV AND go.test.sh
          command: |
            export GOROOT="/usr/local/go"
            export GOPATH=~/go
            export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
            ./go.test.sh
            bash <(curl -s https://codecov.io/bash)
            go test -run=XXX -bench=. $(go list ./crypto)
            make minicluster          
######################################################################
  nightly_build_docker:
    docker:
      # specify the version
      - image: iotex/iotex-core-ci:latest

    working_directory: /go/src/github.com/iotexproject/iotex-core
    steps:
      - checkout
      # specify any bash command here prefixed with `run: `
      - run: make nightlybuild

  nightly_bin_build_docker:
    docker:
      # specify the version
      - image: iotex/iotex-core-ci:latest

    working_directory: /go/src/github.com/iotexproject/iotex-core
    steps:
      - checkout
      - run: cd cli/ioctl/ && ./buildcli.sh
      - run: sudo apt-get install python python-pip 
      - run: sudo pip install awscli
      - run: aws s3 sync cli/ioctl/release/ ${S3_BUCKET_DIR}
      - run: cd tools/actioninjector.v2/ && ./build_injector.sh
      - run: aws s3 sync tools/actioninjector.v2/release/ ${S3_BUCKET_DIR}  

  nightly_bin_build_darwin:
    macos:
      xcode: "10.2.0"   # not supported > 10.2.0

    working_directory: ~/go/src/github.com/iotexproject/iotex-core

    steps:
      - checkout
      - run:
          name: install golang 1.11.6
          command: |
            curl -o go1.11.6.darwin-amd64.tar.gz https://dl.google.com/go/go1.11.6.darwin-amd64.tar.gz
            sudo tar -C /usr/local -xzf go1.11.6.darwin-amd64.tar.gz
            rm go1.11.6.darwin-amd64.tar.gz
      - run:
          name: SET GO ENV AND buildcli.sh
          command: |
            export GOPATH=~/go
            export GOROOT="/usr/local/go"
            export PATH=$PATH:$GOPATH/bin:$PATH:$GOROOT/bin
            cd cli/ioctl/ && ./buildcli.sh
            sudo pip install awscli
            aws s3 sync release/ ${S3_BUCKET_DIR}
            cd tools/actioninjector.v2/ && ./build_injector.sh
            aws s3 sync tools/actioninjector.v2/release/ ${S3_BUCKET_DIR}
workflows:
  version: 2
  commit:
    jobs:
      #- build_test_ubuntu
      - build_test_darwin
      - build_test_docker

  scheduled-workflow:
    triggers:
      - schedule:
          cron: "0 7 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - nightly_build_docker
      - nightly_bin_build_docker
      - nightly_bin_build_darwin
