// Copyright (c) 2019 IoTeX Foundation
// This source code is provided 'as is' and no warranties are given as to title or non-infringement, merchantability
// or fitness for purpose and, to the extent permitted by law, all liability for your use of the code is disclaimed.
// This source code is governed by Apache License 2.0 that can be found in the LICENSE file.

package systemcontracts

// CandidateListV2StorageABI is the ABI for the CandidateListV2Storage contract
const CandidateListV2StorageABI = `[
    {
        "anonymous": false,
        "inputs": [],
        "name": "CandidateListCleared",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "count",
                "type": "uint256"
            }
        ],
        "name": "CandidatesStored",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "offset",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "limit",
                "type": "uint256"
            }
        ],
        "name": "getCandidates",
        "outputs": [
            {
                "components": [
                    {
                        "internalType": "string",
                        "name": "ownerAddress",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "operatorAddress",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "rewardAddress",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "totalWeightedVotes",
                        "type": "string"
                    },
                    {
                        "internalType": "uint64",
                        "name": "selfStakeBucketIdx",
                        "type": "uint64"
                    },
                    {
                        "internalType": "string",
                        "name": "selfStakingTokens",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "internalType": "struct CandidateListV2Storage.CandidateV2[]",
                "name": "candidateList",
                "type": "tuple[]"
            },
            {
                "internalType": "uint256",
                "name": "total",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "components": [
                    {
                        "internalType": "string",
                        "name": "ownerAddress",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "operatorAddress",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "rewardAddress",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "totalWeightedVotes",
                        "type": "string"
                    },
                    {
                        "internalType": "uint64",
                        "name": "selfStakeBucketIdx",
                        "type": "uint64"
                    },
                    {
                        "internalType": "string",
                        "name": "selfStakingTokens",
                        "type": "string"
                    },
                    {
                        "internalType": "string",
                        "name": "id",
                        "type": "string"
                    }
                ],
                "internalType": "struct CandidateListV2Storage.CandidateV2[]",
                "name": "candidateList",
                "type": "tuple[]"
            }
        ],
        "name": "putCandidates",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]`

// CandidateListV2StorageByteCodeStr contains the compiled bytecode used for deploying new contracts.
var CandidateListV2StorageByteCodeStr = `608060405234801561001057600080fd5b50611433806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630a52eef61461003b578063a151bc2214610057575b600080fd5b61005560048036038101906100509190610d16565b610088565b005b610071600480360381019061006c9190610d95565b6101fb565b60405161007f92919061100e565b60405180910390f35b600080610095919061078c565b60005b81518110156101bf5760008282815181106100b6576100b561103e565b5b6020026020010151908060018154018082558091505060019003906000526020600020906008020160009091909190915060008201518160000190816100fc9190611279565b5060208201518160010190816101129190611279565b5060408201518160020190816101289190611279565b50606082015181600301908161013e9190611279565b5060808201518160040190816101549190611279565b5060a08201518160050160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060c08201518160060190816101999190611279565b5060e08201518160070190816101af9190611279565b5050508080600101915050610098565b507f67a539d5dc76638717d3aeb6749071188a26e498021dc86dffc9d136a095a20e81516040516101f0919061134b565b60405180910390a150565b606060008080549050905080841061026957600067ffffffffffffffff81111561022857610227610928565b5b60405190808252806020026020018201604052801561026157816020015b61024e6107b0565b8152602001906001900390816102465790505b509150610785565b600084826102779190611395565b90506000818511610288578461028a565b815b90508067ffffffffffffffff8111156102a6576102a5610928565b5b6040519080825280602002602001820160405280156102df57816020015b6102cc6107b0565b8152602001906001900390816102c45790505b50935060005b8181101561078157600081886102fb91906113c9565b8154811061030c5761030b61103e565b5b9060005260206000209060080201604051806101000160405290816000820180546103369061109c565b80601f01602080910402602001604051908101604052809291908181526020018280546103629061109c565b80156103af5780601f10610384576101008083540402835291602001916103af565b820191906000526020600020905b81548152906001019060200180831161039257829003601f168201915b505050505081526020016001820180546103c89061109c565b80601f01602080910402602001604051908101604052809291908181526020018280546103f49061109c565b80156104415780601f1061041657610100808354040283529160200191610441565b820191906000526020600020905b81548152906001019060200180831161042457829003601f168201915b5050505050815260200160028201805461045a9061109c565b80601f01602080910402602001604051908101604052809291908181526020018280546104869061109c565b80156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b505050505081526020016003820180546104ec9061109c565b80601f01602080910402602001604051908101604052809291908181526020018280546105189061109c565b80156105655780601f1061053a57610100808354040283529160200191610565565b820191906000526020600020905b81548152906001019060200180831161054857829003601f168201915b5050505050815260200160048201805461057e9061109c565b80601f01602080910402602001604051908101604052809291908181526020018280546105aa9061109c565b80156105f75780601f106105cc576101008083540402835291602001916105f7565b820191906000526020600020905b8154815290600101906020018083116105da57829003601f168201915b505050505081526020016005820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016006820180546106429061109c565b80601f016020809104026020016040519081016040528092919081815260200182805461066e9061109c565b80156106bb5780601f10610690576101008083540402835291602001916106bb565b820191906000526020600020905b81548152906001019060200180831161069e57829003601f168201915b505050505081526020016007820180546106d49061109c565b80601f01602080910402602001604051908101604052809291908181526020018280546107009061109c565b801561074d5780601f106107225761010080835404028352916020019161074d565b820191906000526020600020905b81548152906001019060200180831161073057829003601f168201915b5050505050815250508582815181106107695761076861103e565b5b602002602001018190525080806001019150506102e5565b5050505b9250929050565b50805460008255600802906000526020600020908101906107ad91906107ff565b50565b6040518061010001604052806060815260200160608152602001606081526020016060815260200160608152602001600067ffffffffffffffff16815260200160608152602001606081525090565b5b8082111561089d576000808201600061081991906108a1565b60018201600061082991906108a1565b60028201600061083991906108a1565b60038201600061084991906108a1565b60048201600061085991906108a1565b6005820160006101000a81549067ffffffffffffffff021916905560068201600061088491906108a1565b60078201600061089491906108a1565b50600801610800565b5090565b5080546108ad9061109c565b6000825580601f106108bf57506108de565b601f0160209004906000526020600020908101906108dd91906108e1565b5b50565b5b808211156108fa5760008160009055506001016108e2565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61096082610917565b810181811067ffffffffffffffff8211171561097f5761097e610928565b5b80604052505050565b60006109926108fe565b905061099e8282610957565b919050565b600067ffffffffffffffff8211156109be576109bd610928565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156109fe576109fd610928565b5b610a0782610917565b9050602081019050919050565b82818337600083830152505050565b6000610a36610a31846109e3565b610988565b905082815260208101848484011115610a5257610a516109de565b5b610a5d848285610a14565b509392505050565b600082601f830112610a7a57610a79610912565b5b8135610a8a848260208601610a23565b91505092915050565b600067ffffffffffffffff82169050919050565b610ab081610a93565b8114610abb57600080fd5b50565b600081359050610acd81610aa7565b92915050565b60006101008284031215610aea57610ae96109d4565b5b610af5610100610988565b9050600082013567ffffffffffffffff811115610b1557610b146109d9565b5b610b2184828501610a65565b600083015250602082013567ffffffffffffffff811115610b4557610b446109d9565b5b610b5184828501610a65565b602083015250604082013567ffffffffffffffff811115610b7557610b746109d9565b5b610b8184828501610a65565b604083015250606082013567ffffffffffffffff811115610ba557610ba46109d9565b5b610bb184828501610a65565b606083015250608082013567ffffffffffffffff811115610bd557610bd46109d9565b5b610be184828501610a65565b60808301525060a0610bf584828501610abe565b60a08301525060c082013567ffffffffffffffff811115610c1957610c186109d9565b5b610c2584828501610a65565b60c08301525060e082013567ffffffffffffffff811115610c4957610c486109d9565b5b610c5584828501610a65565b60e08301525092915050565b6000610c74610c6f846109a3565b610988565b90508083825260208201905060208402830185811115610c9757610c966109cf565b5b835b81811015610cde57803567ffffffffffffffff811115610cbc57610cbb610912565b5b808601610cc98982610ad3565b85526020850194505050602081019050610c99565b5050509392505050565b600082601f830112610cfd57610cfc610912565b5b8135610d0d848260208601610c61565b91505092915050565b600060208284031215610d2c57610d2b610908565b5b600082013567ffffffffffffffff811115610d4a57610d4961090d565b5b610d5684828501610ce8565b91505092915050565b6000819050919050565b610d7281610d5f565b8114610d7d57600080fd5b50565b600081359050610d8f81610d69565b92915050565b60008060408385031215610dac57610dab610908565b5b6000610dba85828601610d80565b9250506020610dcb85828601610d80565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e3b578082015181840152602081019050610e20565b60008484015250505050565b6000610e5282610e01565b610e5c8185610e0c565b9350610e6c818560208601610e1d565b610e7581610917565b840191505092915050565b610e8981610a93565b82525050565b6000610100830160008301518482036000860152610ead8282610e47565b91505060208301518482036020860152610ec78282610e47565b91505060408301518482036040860152610ee18282610e47565b91505060608301518482036060860152610efb8282610e47565b91505060808301518482036080860152610f158282610e47565b91505060a0830151610f2a60a0860182610e80565b5060c083015184820360c0860152610f428282610e47565b91505060e083015184820360e0860152610f5c8282610e47565b9150508091505092915050565b6000610f758383610e8f565b905092915050565b6000602082019050919050565b6000610f9582610dd5565b610f9f8185610de0565b935083602082028501610fb185610df1565b8060005b85811015610fed5784840389528151610fce8582610f69565b9450610fd983610f7d565b925060208a01995050600181019050610fb5565b50829750879550505050505092915050565b61100881610d5f565b82525050565b600060408201905081810360008301526110288185610f8a565b90506110376020830184610fff565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b457607f821691505b6020821081036110c7576110c661106d565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261112f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110f2565b61113986836110f2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061117661117161116c84610d5f565b611151565b610d5f565b9050919050565b6000819050919050565b6111908361115b565b6111a461119c8261117d565b8484546110ff565b825550505050565b600090565b6111b96111ac565b6111c4818484611187565b505050565b5b818110156111e8576111dd6000826111b1565b6001810190506111ca565b5050565b601f82111561122d576111fe816110cd565b611207846110e2565b81016020851015611216578190505b61122a611222856110e2565b8301826111c9565b50505b505050565b600082821c905092915050565b600061125060001984600802611232565b1980831691505092915050565b6000611269838361123f565b9150826002028217905092915050565b61128282610e01565b67ffffffffffffffff81111561129b5761129a610928565b5b6112a5825461109c565b6112b08282856111ec565b600060209050601f8311600181146112e357600084156112d1578287015190505b6112db858261125d565b865550611343565b601f1984166112f1866110cd565b60005b82811015611319578489015182556001820191506020850194506020810190506112f4565b868310156113365784890151611332601f89168261123f565b8355505b6001600288020188555050505b505050505050565b60006020820190506113606000830184610fff565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113a082610d5f565b91506113ab83610d5f565b92508282039050818111156113c3576113c2611366565b5b92915050565b60006113d482610d5f565b91506113df83610d5f565b92508282019050808211156113f7576113f6611366565b5b9291505056fea264697066735822122056e6b4f54f281a29245ebf3b3d7a4aeef3c5c7d630be9164479d93070bfebbe864736f6c63430008180033`

// CandidateListV2StorageByteCode contains the compiled bytecode for the CandidateListV2Storage contract.
var CandidateListV2StorageByteCode []byte

// init is removed - bytecode initialization is now handled by systemcontracts.go
