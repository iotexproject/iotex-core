// Code generated by protoc-gen-go. DO NOT EDIT.
// source: endorsement.proto

package endorsementPb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Endorsement_ConsensusVoteTopic int32

const (
	Endorsement_PROPOSAL Endorsement_ConsensusVoteTopic = 0
	Endorsement_LOCK     Endorsement_ConsensusVoteTopic = 1
	Endorsement_COMMIT   Endorsement_ConsensusVoteTopic = 2
)

var Endorsement_ConsensusVoteTopic_name = map[int32]string{
	0: "PROPOSAL",
	1: "LOCK",
	2: "COMMIT",
}
var Endorsement_ConsensusVoteTopic_value = map[string]int32{
	"PROPOSAL": 0,
	"LOCK":     1,
	"COMMIT":   2,
}

func (x Endorsement_ConsensusVoteTopic) String() string {
	return proto.EnumName(Endorsement_ConsensusVoteTopic_name, int32(x))
}
func (Endorsement_ConsensusVoteTopic) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_endorsement_df900f2285241dd8, []int{0, 0}
}

// corresponding to prepare and pre-prepare phase in view change protocol
type Endorsement struct {
	Height               uint64                         `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                uint32                         `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	BlockHash            []byte                         `protobuf:"bytes,3,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Topic                Endorsement_ConsensusVoteTopic `protobuf:"varint,4,opt,name=topic,proto3,enum=endorsementPb.Endorsement_ConsensusVoteTopic" json:"topic,omitempty"`
	Endorser             string                         `protobuf:"bytes,5,opt,name=endorser,proto3" json:"endorser,omitempty"`
	EndorserPubKey       []byte                         `protobuf:"bytes,6,opt,name=endorserPubKey,proto3" json:"endorserPubKey,omitempty"`
	Decision             bool                           `protobuf:"varint,7,opt,name=decision,proto3" json:"decision,omitempty"`
	Signature            []byte                         `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Endorsement) Reset()         { *m = Endorsement{} }
func (m *Endorsement) String() string { return proto.CompactTextString(m) }
func (*Endorsement) ProtoMessage()    {}
func (*Endorsement) Descriptor() ([]byte, []int) {
	return fileDescriptor_endorsement_df900f2285241dd8, []int{0}
}
func (m *Endorsement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Endorsement.Unmarshal(m, b)
}
func (m *Endorsement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Endorsement.Marshal(b, m, deterministic)
}
func (dst *Endorsement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Endorsement.Merge(dst, src)
}
func (m *Endorsement) XXX_Size() int {
	return xxx_messageInfo_Endorsement.Size(m)
}
func (m *Endorsement) XXX_DiscardUnknown() {
	xxx_messageInfo_Endorsement.DiscardUnknown(m)
}

var xxx_messageInfo_Endorsement proto.InternalMessageInfo

func (m *Endorsement) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Endorsement) GetRound() uint32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Endorsement) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *Endorsement) GetTopic() Endorsement_ConsensusVoteTopic {
	if m != nil {
		return m.Topic
	}
	return Endorsement_PROPOSAL
}

func (m *Endorsement) GetEndorser() string {
	if m != nil {
		return m.Endorser
	}
	return ""
}

func (m *Endorsement) GetEndorserPubKey() []byte {
	if m != nil {
		return m.EndorserPubKey
	}
	return nil
}

func (m *Endorsement) GetDecision() bool {
	if m != nil {
		return m.Decision
	}
	return false
}

func (m *Endorsement) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type EndorsementSet struct {
	BlockHash            []byte         `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Round                uint32         `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Endorsements         []*Endorsement `protobuf:"bytes,3,rep,name=endorsements,proto3" json:"endorsements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EndorsementSet) Reset()         { *m = EndorsementSet{} }
func (m *EndorsementSet) String() string { return proto.CompactTextString(m) }
func (*EndorsementSet) ProtoMessage()    {}
func (*EndorsementSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_endorsement_df900f2285241dd8, []int{1}
}
func (m *EndorsementSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndorsementSet.Unmarshal(m, b)
}
func (m *EndorsementSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndorsementSet.Marshal(b, m, deterministic)
}
func (dst *EndorsementSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndorsementSet.Merge(dst, src)
}
func (m *EndorsementSet) XXX_Size() int {
	return xxx_messageInfo_EndorsementSet.Size(m)
}
func (m *EndorsementSet) XXX_DiscardUnknown() {
	xxx_messageInfo_EndorsementSet.DiscardUnknown(m)
}

var xxx_messageInfo_EndorsementSet proto.InternalMessageInfo

func (m *EndorsementSet) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *EndorsementSet) GetRound() uint32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *EndorsementSet) GetEndorsements() []*Endorsement {
	if m != nil {
		return m.Endorsements
	}
	return nil
}

func init() {
	proto.RegisterType((*Endorsement)(nil), "endorsementPb.Endorsement")
	proto.RegisterType((*EndorsementSet)(nil), "endorsementPb.EndorsementSet")
	proto.RegisterEnum("endorsementPb.Endorsement_ConsensusVoteTopic", Endorsement_ConsensusVoteTopic_name, Endorsement_ConsensusVoteTopic_value)
}

func init() { proto.RegisterFile("endorsement.proto", fileDescriptor_endorsement_df900f2285241dd8) }

var fileDescriptor_endorsement_df900f2285241dd8 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x3d, 0x4f, 0xf3, 0x30,
	0x14, 0x85, 0x5f, 0xf7, 0x23, 0x6f, 0x7a, 0xfb, 0xa1, 0x60, 0x21, 0x64, 0x55, 0x0c, 0x56, 0x06,
	0xe4, 0x85, 0x0c, 0x65, 0x61, 0x42, 0x42, 0x11, 0x12, 0xa8, 0xad, 0x12, 0xb9, 0x15, 0x7b, 0x93,
	0x58, 0x4d, 0x04, 0xd8, 0x55, 0xec, 0x0c, 0xec, 0xfc, 0x46, 0x7e, 0x0f, 0x4a, 0x53, 0xd2, 0xa4,
	0xc0, 0xe6, 0x73, 0xe4, 0xe3, 0x7b, 0xcf, 0x63, 0x38, 0x13, 0x32, 0x51, 0xb9, 0x16, 0x6f, 0x42,
	0x1a, 0x6f, 0x97, 0x2b, 0xa3, 0xf0, 0xb8, 0x61, 0x85, 0x91, 0xfb, 0xd9, 0x81, 0xe1, 0xc3, 0xd1,
	0xc1, 0x17, 0x60, 0xa5, 0x22, 0xdb, 0xa6, 0x86, 0x20, 0x8a, 0x58, 0x8f, 0x1f, 0x14, 0x3e, 0x87,
	0x7e, 0xae, 0x0a, 0x99, 0x90, 0x0e, 0x45, 0x6c, 0xcc, 0x2b, 0x81, 0x2f, 0x61, 0x10, 0xbd, 0xaa,
	0xf8, 0xe5, 0x71, 0xa3, 0x53, 0xd2, 0xa5, 0x88, 0x8d, 0xf8, 0xd1, 0xc0, 0x3e, 0xf4, 0x8d, 0xda,
	0x65, 0x31, 0xe9, 0x51, 0xc4, 0x26, 0xb3, 0x6b, 0xaf, 0x35, 0xda, 0x6b, 0x8c, 0xf5, 0x7c, 0x25,
	0xb5, 0x90, 0xba, 0xd0, 0xcf, 0xca, 0x88, 0x75, 0x19, 0xe2, 0x55, 0x16, 0x4f, 0xc1, 0x3e, 0xc4,
	0x72, 0xd2, 0xa7, 0x88, 0x0d, 0x78, 0xad, 0xf1, 0x15, 0x4c, 0xbe, 0xcf, 0x61, 0x11, 0xcd, 0xc5,
	0x3b, 0xb1, 0xf6, 0x3b, 0x9c, 0xb8, 0xe5, 0x1b, 0x89, 0x88, 0x33, 0x9d, 0x29, 0x49, 0xfe, 0x53,
	0xc4, 0x6c, 0x5e, 0xeb, 0xb2, 0x82, 0xce, 0xb6, 0x72, 0x63, 0x8a, 0x5c, 0x10, 0xbb, 0xaa, 0x50,
	0x1b, 0xee, 0x2d, 0xe0, 0x9f, 0xab, 0xe1, 0x11, 0xd8, 0x21, 0x0f, 0xc2, 0x60, 0x75, 0xbf, 0x70,
	0xfe, 0x61, 0x1b, 0x7a, 0x8b, 0xc0, 0x9f, 0x3b, 0x08, 0x03, 0x58, 0x7e, 0xb0, 0x5c, 0x3e, 0xad,
	0x9d, 0x8e, 0xfb, 0x81, 0x60, 0xd2, 0x68, 0xb8, 0x12, 0xa6, 0x4d, 0x0b, 0x9d, 0xd2, 0xfa, 0x9d,
	0xf0, 0x1d, 0x8c, 0x1a, 0xd4, 0x34, 0xe9, 0xd2, 0x2e, 0x1b, 0xce, 0xa6, 0x7f, 0xa3, 0xe4, 0xad,
	0xfb, 0x91, 0xb5, 0xff, 0xf5, 0x9b, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x3c, 0xdf, 0x29,
	0x0a, 0x02, 0x00, 0x00,
}
