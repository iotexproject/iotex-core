// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/rpc/rpc.proto

package iotexrpc // import "github.com/iotexproject/iotex-core/protogen/iotexrpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import iotextypes "github.com/iotexproject/iotex-core/protogen/iotextypes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Consensus_ConsensusMessageType int32

const (
	Consensus_PROPOSAL    Consensus_ConsensusMessageType = 0
	Consensus_ENDORSEMENT Consensus_ConsensusMessageType = 1
)

var Consensus_ConsensusMessageType_name = map[int32]string{
	0: "PROPOSAL",
	1: "ENDORSEMENT",
}
var Consensus_ConsensusMessageType_value = map[string]int32{
	"PROPOSAL":    0,
	"ENDORSEMENT": 1,
}

func (x Consensus_ConsensusMessageType) String() string {
	return proto.EnumName(Consensus_ConsensusMessageType_name, int32(x))
}
func (Consensus_ConsensusMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_rpc_430bec839a1f211e, []int{2, 0}
}

type BlockSync struct {
	Start                uint64   `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  uint64   `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockSync) Reset()         { *m = BlockSync{} }
func (m *BlockSync) String() string { return proto.CompactTextString(m) }
func (*BlockSync) ProtoMessage()    {}
func (*BlockSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_430bec839a1f211e, []int{0}
}
func (m *BlockSync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockSync.Unmarshal(m, b)
}
func (m *BlockSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockSync.Marshal(b, m, deterministic)
}
func (dst *BlockSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockSync.Merge(dst, src)
}
func (m *BlockSync) XXX_Size() int {
	return xxx_messageInfo_BlockSync.Size(m)
}
func (m *BlockSync) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockSync.DiscardUnknown(m)
}

var xxx_messageInfo_BlockSync proto.InternalMessageInfo

func (m *BlockSync) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *BlockSync) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

// block container
// used to send old/existing blocks in block sync
type BlockContainer struct {
	Block                *iotextypes.Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BlockContainer) Reset()         { *m = BlockContainer{} }
func (m *BlockContainer) String() string { return proto.CompactTextString(m) }
func (*BlockContainer) ProtoMessage()    {}
func (*BlockContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_430bec839a1f211e, []int{1}
}
func (m *BlockContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockContainer.Unmarshal(m, b)
}
func (m *BlockContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockContainer.Marshal(b, m, deterministic)
}
func (dst *BlockContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockContainer.Merge(dst, src)
}
func (m *BlockContainer) XXX_Size() int {
	return xxx_messageInfo_BlockContainer.Size(m)
}
func (m *BlockContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockContainer.DiscardUnknown(m)
}

var xxx_messageInfo_BlockContainer proto.InternalMessageInfo

func (m *BlockContainer) GetBlock() *iotextypes.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type Consensus struct {
	Height               uint64                         `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Round                uint32                         `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Type                 Consensus_ConsensusMessageType `protobuf:"varint,3,opt,name=type,proto3,enum=iotexrpc.Consensus_ConsensusMessageType" json:"type,omitempty"`
	Timestamp            *timestamp.Timestamp           `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 []byte                         `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Consensus) Reset()         { *m = Consensus{} }
func (m *Consensus) String() string { return proto.CompactTextString(m) }
func (*Consensus) ProtoMessage()    {}
func (*Consensus) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_430bec839a1f211e, []int{2}
}
func (m *Consensus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consensus.Unmarshal(m, b)
}
func (m *Consensus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consensus.Marshal(b, m, deterministic)
}
func (dst *Consensus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consensus.Merge(dst, src)
}
func (m *Consensus) XXX_Size() int {
	return xxx_messageInfo_Consensus.Size(m)
}
func (m *Consensus) XXX_DiscardUnknown() {
	xxx_messageInfo_Consensus.DiscardUnknown(m)
}

var xxx_messageInfo_Consensus proto.InternalMessageInfo

func (m *Consensus) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Consensus) GetRound() uint32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *Consensus) GetType() Consensus_ConsensusMessageType {
	if m != nil {
		return m.Type
	}
	return Consensus_PROPOSAL
}

func (m *Consensus) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Consensus) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockSync)(nil), "iotexrpc.BlockSync")
	proto.RegisterType((*BlockContainer)(nil), "iotexrpc.BlockContainer")
	proto.RegisterType((*Consensus)(nil), "iotexrpc.Consensus")
	proto.RegisterEnum("iotexrpc.Consensus_ConsensusMessageType", Consensus_ConsensusMessageType_name, Consensus_ConsensusMessageType_value)
}

func init() { proto.RegisterFile("proto/rpc/rpc.proto", fileDescriptor_rpc_430bec839a1f211e) }

var fileDescriptor_rpc_430bec839a1f211e = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xcf, 0x4f, 0xf2, 0x40,
	0x10, 0xfd, 0xfa, 0x51, 0x08, 0x2c, 0x88, 0x75, 0x25, 0xa6, 0xe1, 0x22, 0xe9, 0xc5, 0x5e, 0xdc,
	0x26, 0xa0, 0x46, 0x13, 0x2f, 0x82, 0xdc, 0xe4, 0x47, 0x16, 0x4e, 0xde, 0xda, 0x65, 0x6d, 0xab,
	0xb0, 0xdb, 0xec, 0x6e, 0x13, 0xf9, 0xdf, 0x3d, 0x98, 0x4e, 0x29, 0x5c, 0x3c, 0x34, 0x99, 0xb7,
	0xf3, 0xde, 0xcc, 0x7b, 0x53, 0x74, 0x99, 0x29, 0x69, 0x64, 0xa0, 0x32, 0x56, 0x7c, 0x04, 0x10,
	0x6e, 0xa6, 0xd2, 0xf0, 0x6f, 0x95, 0xb1, 0xbe, 0x13, 0x6d, 0x25, 0xfb, 0x62, 0x49, 0x98, 0x8a,
	0xb2, 0xd7, 0xbf, 0x8e, 0xa5, 0x8c, 0xb7, 0x3c, 0x00, 0x14, 0xe5, 0x1f, 0x81, 0x49, 0x77, 0x5c,
	0x9b, 0x70, 0x97, 0x95, 0x04, 0x6f, 0x84, 0x5a, 0xe3, 0x42, 0xb4, 0xda, 0x0b, 0x86, 0x7b, 0xa8,
	0xae, 0x4d, 0xa8, 0x8c, 0xfb, 0x7f, 0x60, 0xf9, 0x36, 0x2d, 0x01, 0x76, 0x50, 0x8d, 0x8b, 0x8d,
	0x5b, 0x83, 0xb7, 0xa2, 0xf4, 0x9e, 0x50, 0x17, 0x44, 0x13, 0x29, 0x4c, 0x98, 0x0a, 0xae, 0xf0,
	0x0d, 0xaa, 0xc3, 0x6e, 0xd7, 0x1a, 0x58, 0x7e, 0x7b, 0x78, 0x41, 0xc0, 0x93, 0xd9, 0x67, 0x5c,
	0x13, 0xa0, 0xd2, 0xb2, 0xef, 0xfd, 0x58, 0xa8, 0x35, 0x91, 0x42, 0x73, 0xa1, 0x73, 0x8d, 0xaf,
	0x50, 0x23, 0xe1, 0x69, 0x9c, 0x18, 0xd0, 0xd9, 0xf4, 0x80, 0x0a, 0x23, 0x4a, 0xe6, 0x62, 0x03,
	0x46, 0xce, 0x68, 0x09, 0xf0, 0x33, 0xb2, 0x8b, 0x89, 0xe0, 0xa4, 0x3b, 0xf4, 0x49, 0x95, 0x9b,
	0x1c, 0x07, 0x9e, 0xaa, 0x19, 0xd7, 0x3a, 0x8c, 0xf9, 0x7a, 0x9f, 0x71, 0x0a, 0x2a, 0xfc, 0x88,
	0x5a, 0xc7, 0xf0, 0xae, 0x0d, 0x36, 0xfb, 0xa4, 0x3c, 0x0f, 0xa9, 0xce, 0x43, 0xd6, 0x15, 0x83,
	0x9e, 0xc8, 0x18, 0x23, 0x7b, 0x13, 0x9a, 0xd0, 0xad, 0x0f, 0x2c, 0xbf, 0x43, 0xa1, 0xf6, 0xee,
	0x51, 0xef, 0xaf, 0x5d, 0xb8, 0x83, 0x9a, 0x4b, 0xba, 0x58, 0x2e, 0x56, 0x2f, 0x6f, 0xce, 0x3f,
	0x7c, 0x8e, 0xda, 0xd3, 0xf9, 0xeb, 0x82, 0xae, 0xa6, 0xb3, 0xe9, 0x7c, 0xed, 0x58, 0xe3, 0x87,
	0xf7, 0xbb, 0x38, 0x35, 0x49, 0x1e, 0x11, 0x26, 0x77, 0x01, 0x04, 0xc8, 0x94, 0xfc, 0xe4, 0xcc,
	0x94, 0xe0, 0x96, 0x49, 0x75, 0xf8, 0x5b, 0x31, 0x17, 0x41, 0x95, 0x30, 0x6a, 0xc0, 0xd3, 0xe8,
	0x37, 0x00, 0x00, 0xff, 0xff, 0x62, 0x19, 0x56, 0xc2, 0x01, 0x02, 0x00, 0x00,
}
