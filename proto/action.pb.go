// Code generated by protoc-gen-go. DO NOT EDIT.
// source: action.proto

package iproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RewardType int32

const (
	RewardType_Block RewardType = 0
	RewardType_Epoch RewardType = 1
)

var RewardType_name = map[int32]string{
	0: "Block",
	1: "Epoch",
}
var RewardType_value = map[string]int32{
	"Block": 0,
	"Epoch": 1,
}

func (x RewardType) String() string {
	return proto.EnumName(RewardType_name, int32(x))
}
func (RewardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{0}
}

type TransferPb struct {
	// used by state-based model
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Recipient            string   `protobuf:"bytes,2,opt,name=recipient" json:"recipient,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferPb) Reset()         { *m = TransferPb{} }
func (m *TransferPb) String() string { return proto.CompactTextString(m) }
func (*TransferPb) ProtoMessage()    {}
func (*TransferPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{0}
}
func (m *TransferPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferPb.Unmarshal(m, b)
}
func (m *TransferPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferPb.Marshal(b, m, deterministic)
}
func (dst *TransferPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferPb.Merge(dst, src)
}
func (m *TransferPb) XXX_Size() int {
	return xxx_messageInfo_TransferPb.Size(m)
}
func (m *TransferPb) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferPb.DiscardUnknown(m)
}

var xxx_messageInfo_TransferPb proto.InternalMessageInfo

func (m *TransferPb) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *TransferPb) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *TransferPb) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type VotePb struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	VoteeAddress         string               `protobuf:"bytes,2,opt,name=voteeAddress" json:"voteeAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *VotePb) Reset()         { *m = VotePb{} }
func (m *VotePb) String() string { return proto.CompactTextString(m) }
func (*VotePb) ProtoMessage()    {}
func (*VotePb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{1}
}
func (m *VotePb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VotePb.Unmarshal(m, b)
}
func (m *VotePb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VotePb.Marshal(b, m, deterministic)
}
func (dst *VotePb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VotePb.Merge(dst, src)
}
func (m *VotePb) XXX_Size() int {
	return xxx_messageInfo_VotePb.Size(m)
}
func (m *VotePb) XXX_DiscardUnknown() {
	xxx_messageInfo_VotePb.DiscardUnknown(m)
}

var xxx_messageInfo_VotePb proto.InternalMessageInfo

func (m *VotePb) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *VotePb) GetVoteeAddress() string {
	if m != nil {
		return m.VoteeAddress
	}
	return ""
}

type ExecutionPb struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Contract             string   `protobuf:"bytes,2,opt,name=contract" json:"contract,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionPb) Reset()         { *m = ExecutionPb{} }
func (m *ExecutionPb) String() string { return proto.CompactTextString(m) }
func (*ExecutionPb) ProtoMessage()    {}
func (*ExecutionPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{2}
}
func (m *ExecutionPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionPb.Unmarshal(m, b)
}
func (m *ExecutionPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionPb.Marshal(b, m, deterministic)
}
func (dst *ExecutionPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionPb.Merge(dst, src)
}
func (m *ExecutionPb) XXX_Size() int {
	return xxx_messageInfo_ExecutionPb.Size(m)
}
func (m *ExecutionPb) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionPb.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionPb proto.InternalMessageInfo

func (m *ExecutionPb) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ExecutionPb) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *ExecutionPb) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type StartSubChainPb struct {
	// TODO: chainID chould be assigned by system and returned via a receipt
	ChainID              uint32   `protobuf:"varint,1,opt,name=chainID" json:"chainID,omitempty"`
	SecurityDeposit      []byte   `protobuf:"bytes,2,opt,name=securityDeposit,proto3" json:"securityDeposit,omitempty"`
	OperationDeposit     []byte   `protobuf:"bytes,3,opt,name=operationDeposit,proto3" json:"operationDeposit,omitempty"`
	StartHeight          uint64   `protobuf:"varint,4,opt,name=startHeight" json:"startHeight,omitempty"`
	ParentHeightOffset   uint64   `protobuf:"varint,5,opt,name=parentHeightOffset" json:"parentHeightOffset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartSubChainPb) Reset()         { *m = StartSubChainPb{} }
func (m *StartSubChainPb) String() string { return proto.CompactTextString(m) }
func (*StartSubChainPb) ProtoMessage()    {}
func (*StartSubChainPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{3}
}
func (m *StartSubChainPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartSubChainPb.Unmarshal(m, b)
}
func (m *StartSubChainPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartSubChainPb.Marshal(b, m, deterministic)
}
func (dst *StartSubChainPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartSubChainPb.Merge(dst, src)
}
func (m *StartSubChainPb) XXX_Size() int {
	return xxx_messageInfo_StartSubChainPb.Size(m)
}
func (m *StartSubChainPb) XXX_DiscardUnknown() {
	xxx_messageInfo_StartSubChainPb.DiscardUnknown(m)
}

var xxx_messageInfo_StartSubChainPb proto.InternalMessageInfo

func (m *StartSubChainPb) GetChainID() uint32 {
	if m != nil {
		return m.ChainID
	}
	return 0
}

func (m *StartSubChainPb) GetSecurityDeposit() []byte {
	if m != nil {
		return m.SecurityDeposit
	}
	return nil
}

func (m *StartSubChainPb) GetOperationDeposit() []byte {
	if m != nil {
		return m.OperationDeposit
	}
	return nil
}

func (m *StartSubChainPb) GetStartHeight() uint64 {
	if m != nil {
		return m.StartHeight
	}
	return 0
}

func (m *StartSubChainPb) GetParentHeightOffset() uint64 {
	if m != nil {
		return m.ParentHeightOffset
	}
	return 0
}

type StopSubChainPb struct {
	ChainID              uint32   `protobuf:"varint,1,opt,name=chainID" json:"chainID,omitempty"`
	StopHeight           uint64   `protobuf:"varint,2,opt,name=stopHeight" json:"stopHeight,omitempty"`
	SubChainAddress      string   `protobuf:"bytes,3,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopSubChainPb) Reset()         { *m = StopSubChainPb{} }
func (m *StopSubChainPb) String() string { return proto.CompactTextString(m) }
func (*StopSubChainPb) ProtoMessage()    {}
func (*StopSubChainPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{4}
}
func (m *StopSubChainPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopSubChainPb.Unmarshal(m, b)
}
func (m *StopSubChainPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopSubChainPb.Marshal(b, m, deterministic)
}
func (dst *StopSubChainPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopSubChainPb.Merge(dst, src)
}
func (m *StopSubChainPb) XXX_Size() int {
	return xxx_messageInfo_StopSubChainPb.Size(m)
}
func (m *StopSubChainPb) XXX_DiscardUnknown() {
	xxx_messageInfo_StopSubChainPb.DiscardUnknown(m)
}

var xxx_messageInfo_StopSubChainPb proto.InternalMessageInfo

func (m *StopSubChainPb) GetChainID() uint32 {
	if m != nil {
		return m.ChainID
	}
	return 0
}

func (m *StopSubChainPb) GetStopHeight() uint64 {
	if m != nil {
		return m.StopHeight
	}
	return 0
}

func (m *StopSubChainPb) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

type MerkleRoot struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerkleRoot) Reset()         { *m = MerkleRoot{} }
func (m *MerkleRoot) String() string { return proto.CompactTextString(m) }
func (*MerkleRoot) ProtoMessage()    {}
func (*MerkleRoot) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{5}
}
func (m *MerkleRoot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleRoot.Unmarshal(m, b)
}
func (m *MerkleRoot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleRoot.Marshal(b, m, deterministic)
}
func (dst *MerkleRoot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleRoot.Merge(dst, src)
}
func (m *MerkleRoot) XXX_Size() int {
	return xxx_messageInfo_MerkleRoot.Size(m)
}
func (m *MerkleRoot) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleRoot.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleRoot proto.InternalMessageInfo

func (m *MerkleRoot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MerkleRoot) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutBlockPb struct {
	SubChainAddress      string        `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	Height               uint64        `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Roots                []*MerkleRoot `protobuf:"bytes,3,rep,name=roots" json:"roots,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PutBlockPb) Reset()         { *m = PutBlockPb{} }
func (m *PutBlockPb) String() string { return proto.CompactTextString(m) }
func (*PutBlockPb) ProtoMessage()    {}
func (*PutBlockPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{6}
}
func (m *PutBlockPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutBlockPb.Unmarshal(m, b)
}
func (m *PutBlockPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutBlockPb.Marshal(b, m, deterministic)
}
func (dst *PutBlockPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutBlockPb.Merge(dst, src)
}
func (m *PutBlockPb) XXX_Size() int {
	return xxx_messageInfo_PutBlockPb.Size(m)
}
func (m *PutBlockPb) XXX_DiscardUnknown() {
	xxx_messageInfo_PutBlockPb.DiscardUnknown(m)
}

var xxx_messageInfo_PutBlockPb proto.InternalMessageInfo

func (m *PutBlockPb) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

func (m *PutBlockPb) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PutBlockPb) GetRoots() []*MerkleRoot {
	if m != nil {
		return m.Roots
	}
	return nil
}

type CreateDepositPb struct {
	ChainID              uint32   `protobuf:"varint,1,opt,name=chainID" json:"chainID,omitempty"`
	Amount               []byte   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Recipient            string   `protobuf:"bytes,3,opt,name=recipient" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDepositPb) Reset()         { *m = CreateDepositPb{} }
func (m *CreateDepositPb) String() string { return proto.CompactTextString(m) }
func (*CreateDepositPb) ProtoMessage()    {}
func (*CreateDepositPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{7}
}
func (m *CreateDepositPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDepositPb.Unmarshal(m, b)
}
func (m *CreateDepositPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDepositPb.Marshal(b, m, deterministic)
}
func (dst *CreateDepositPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDepositPb.Merge(dst, src)
}
func (m *CreateDepositPb) XXX_Size() int {
	return xxx_messageInfo_CreateDepositPb.Size(m)
}
func (m *CreateDepositPb) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDepositPb.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDepositPb proto.InternalMessageInfo

func (m *CreateDepositPb) GetChainID() uint32 {
	if m != nil {
		return m.ChainID
	}
	return 0
}

func (m *CreateDepositPb) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *CreateDepositPb) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type SettleDepositPb struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Recipient            string   `protobuf:"bytes,2,opt,name=recipient" json:"recipient,omitempty"`
	Index                uint64   `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettleDepositPb) Reset()         { *m = SettleDepositPb{} }
func (m *SettleDepositPb) String() string { return proto.CompactTextString(m) }
func (*SettleDepositPb) ProtoMessage()    {}
func (*SettleDepositPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{8}
}
func (m *SettleDepositPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettleDepositPb.Unmarshal(m, b)
}
func (m *SettleDepositPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettleDepositPb.Marshal(b, m, deterministic)
}
func (dst *SettleDepositPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettleDepositPb.Merge(dst, src)
}
func (m *SettleDepositPb) XXX_Size() int {
	return xxx_messageInfo_SettleDepositPb.Size(m)
}
func (m *SettleDepositPb) XXX_DiscardUnknown() {
	xxx_messageInfo_SettleDepositPb.DiscardUnknown(m)
}

var xxx_messageInfo_SettleDepositPb proto.InternalMessageInfo

func (m *SettleDepositPb) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *SettleDepositPb) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *SettleDepositPb) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// plum main chain APIs
type CreatePlumChainPb struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePlumChainPb) Reset()         { *m = CreatePlumChainPb{} }
func (m *CreatePlumChainPb) String() string { return proto.CompactTextString(m) }
func (*CreatePlumChainPb) ProtoMessage()    {}
func (*CreatePlumChainPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{9}
}
func (m *CreatePlumChainPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlumChainPb.Unmarshal(m, b)
}
func (m *CreatePlumChainPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlumChainPb.Marshal(b, m, deterministic)
}
func (dst *CreatePlumChainPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlumChainPb.Merge(dst, src)
}
func (m *CreatePlumChainPb) XXX_Size() int {
	return xxx_messageInfo_CreatePlumChainPb.Size(m)
}
func (m *CreatePlumChainPb) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlumChainPb.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlumChainPb proto.InternalMessageInfo

type TerminatePlumChainPb struct {
	SubChainAddress      string   `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminatePlumChainPb) Reset()         { *m = TerminatePlumChainPb{} }
func (m *TerminatePlumChainPb) String() string { return proto.CompactTextString(m) }
func (*TerminatePlumChainPb) ProtoMessage()    {}
func (*TerminatePlumChainPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{10}
}
func (m *TerminatePlumChainPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminatePlumChainPb.Unmarshal(m, b)
}
func (m *TerminatePlumChainPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminatePlumChainPb.Marshal(b, m, deterministic)
}
func (dst *TerminatePlumChainPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminatePlumChainPb.Merge(dst, src)
}
func (m *TerminatePlumChainPb) XXX_Size() int {
	return xxx_messageInfo_TerminatePlumChainPb.Size(m)
}
func (m *TerminatePlumChainPb) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminatePlumChainPb.DiscardUnknown(m)
}

var xxx_messageInfo_TerminatePlumChainPb proto.InternalMessageInfo

func (m *TerminatePlumChainPb) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

type PlumPutBlockPb struct {
	SubChainAddress      string            `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	Height               uint64            `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Roots                map[string][]byte `protobuf:"bytes,3,rep,name=roots" json:"roots,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PlumPutBlockPb) Reset()         { *m = PlumPutBlockPb{} }
func (m *PlumPutBlockPb) String() string { return proto.CompactTextString(m) }
func (*PlumPutBlockPb) ProtoMessage()    {}
func (*PlumPutBlockPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{11}
}
func (m *PlumPutBlockPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumPutBlockPb.Unmarshal(m, b)
}
func (m *PlumPutBlockPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumPutBlockPb.Marshal(b, m, deterministic)
}
func (dst *PlumPutBlockPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumPutBlockPb.Merge(dst, src)
}
func (m *PlumPutBlockPb) XXX_Size() int {
	return xxx_messageInfo_PlumPutBlockPb.Size(m)
}
func (m *PlumPutBlockPb) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumPutBlockPb.DiscardUnknown(m)
}

var xxx_messageInfo_PlumPutBlockPb proto.InternalMessageInfo

func (m *PlumPutBlockPb) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

func (m *PlumPutBlockPb) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PlumPutBlockPb) GetRoots() map[string][]byte {
	if m != nil {
		return m.Roots
	}
	return nil
}

type PlumCreateDepositPb struct {
	SubChainAddress      string   `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	Amount               []byte   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Recipient            string   `protobuf:"bytes,3,opt,name=recipient" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlumCreateDepositPb) Reset()         { *m = PlumCreateDepositPb{} }
func (m *PlumCreateDepositPb) String() string { return proto.CompactTextString(m) }
func (*PlumCreateDepositPb) ProtoMessage()    {}
func (*PlumCreateDepositPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{12}
}
func (m *PlumCreateDepositPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumCreateDepositPb.Unmarshal(m, b)
}
func (m *PlumCreateDepositPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumCreateDepositPb.Marshal(b, m, deterministic)
}
func (dst *PlumCreateDepositPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumCreateDepositPb.Merge(dst, src)
}
func (m *PlumCreateDepositPb) XXX_Size() int {
	return xxx_messageInfo_PlumCreateDepositPb.Size(m)
}
func (m *PlumCreateDepositPb) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumCreateDepositPb.DiscardUnknown(m)
}

var xxx_messageInfo_PlumCreateDepositPb proto.InternalMessageInfo

func (m *PlumCreateDepositPb) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

func (m *PlumCreateDepositPb) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *PlumCreateDepositPb) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type PlumStartExitPb struct {
	SubChainAddress             string   `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	PreviousTransfer            []byte   `protobuf:"bytes,2,opt,name=previousTransfer,proto3" json:"previousTransfer,omitempty"`
	PreviousTransferBlockProof  []byte   `protobuf:"bytes,3,opt,name=previousTransferBlockProof,proto3" json:"previousTransferBlockProof,omitempty"`
	PreviousTransferBlockHeight uint64   `protobuf:"varint,4,opt,name=previousTransferBlockHeight" json:"previousTransferBlockHeight,omitempty"`
	ExitTransfer                []byte   `protobuf:"bytes,5,opt,name=exitTransfer,proto3" json:"exitTransfer,omitempty"`
	ExitTransferBlockProof      []byte   `protobuf:"bytes,6,opt,name=exitTransferBlockProof,proto3" json:"exitTransferBlockProof,omitempty"`
	ExitTransferBlockHeight     uint64   `protobuf:"varint,7,opt,name=exitTransferBlockHeight" json:"exitTransferBlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *PlumStartExitPb) Reset()         { *m = PlumStartExitPb{} }
func (m *PlumStartExitPb) String() string { return proto.CompactTextString(m) }
func (*PlumStartExitPb) ProtoMessage()    {}
func (*PlumStartExitPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{13}
}
func (m *PlumStartExitPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumStartExitPb.Unmarshal(m, b)
}
func (m *PlumStartExitPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumStartExitPb.Marshal(b, m, deterministic)
}
func (dst *PlumStartExitPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumStartExitPb.Merge(dst, src)
}
func (m *PlumStartExitPb) XXX_Size() int {
	return xxx_messageInfo_PlumStartExitPb.Size(m)
}
func (m *PlumStartExitPb) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumStartExitPb.DiscardUnknown(m)
}

var xxx_messageInfo_PlumStartExitPb proto.InternalMessageInfo

func (m *PlumStartExitPb) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

func (m *PlumStartExitPb) GetPreviousTransfer() []byte {
	if m != nil {
		return m.PreviousTransfer
	}
	return nil
}

func (m *PlumStartExitPb) GetPreviousTransferBlockProof() []byte {
	if m != nil {
		return m.PreviousTransferBlockProof
	}
	return nil
}

func (m *PlumStartExitPb) GetPreviousTransferBlockHeight() uint64 {
	if m != nil {
		return m.PreviousTransferBlockHeight
	}
	return 0
}

func (m *PlumStartExitPb) GetExitTransfer() []byte {
	if m != nil {
		return m.ExitTransfer
	}
	return nil
}

func (m *PlumStartExitPb) GetExitTransferBlockProof() []byte {
	if m != nil {
		return m.ExitTransferBlockProof
	}
	return nil
}

func (m *PlumStartExitPb) GetExitTransferBlockHeight() uint64 {
	if m != nil {
		return m.ExitTransferBlockHeight
	}
	return 0
}

type PlumChallengeExit struct {
	SubChainAddress              string   `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	CoinID                       uint64   `protobuf:"varint,2,opt,name=coinID" json:"coinID,omitempty"`
	ChallengeTransfer            []byte   `protobuf:"bytes,3,opt,name=challengeTransfer,proto3" json:"challengeTransfer,omitempty"`
	ChallengeTransferBlockProof  []byte   `protobuf:"bytes,4,opt,name=challengeTransferBlockProof,proto3" json:"challengeTransferBlockProof,omitempty"`
	ChallengeTransferBlockHeight uint64   `protobuf:"varint,5,opt,name=challengeTransferBlockHeight" json:"challengeTransferBlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *PlumChallengeExit) Reset()         { *m = PlumChallengeExit{} }
func (m *PlumChallengeExit) String() string { return proto.CompactTextString(m) }
func (*PlumChallengeExit) ProtoMessage()    {}
func (*PlumChallengeExit) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{14}
}
func (m *PlumChallengeExit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumChallengeExit.Unmarshal(m, b)
}
func (m *PlumChallengeExit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumChallengeExit.Marshal(b, m, deterministic)
}
func (dst *PlumChallengeExit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumChallengeExit.Merge(dst, src)
}
func (m *PlumChallengeExit) XXX_Size() int {
	return xxx_messageInfo_PlumChallengeExit.Size(m)
}
func (m *PlumChallengeExit) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumChallengeExit.DiscardUnknown(m)
}

var xxx_messageInfo_PlumChallengeExit proto.InternalMessageInfo

func (m *PlumChallengeExit) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

func (m *PlumChallengeExit) GetCoinID() uint64 {
	if m != nil {
		return m.CoinID
	}
	return 0
}

func (m *PlumChallengeExit) GetChallengeTransfer() []byte {
	if m != nil {
		return m.ChallengeTransfer
	}
	return nil
}

func (m *PlumChallengeExit) GetChallengeTransferBlockProof() []byte {
	if m != nil {
		return m.ChallengeTransferBlockProof
	}
	return nil
}

func (m *PlumChallengeExit) GetChallengeTransferBlockHeight() uint64 {
	if m != nil {
		return m.ChallengeTransferBlockHeight
	}
	return 0
}

type PlumResponseChallengeExit struct {
	SubChainAddress             string   `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	CoinID                      uint64   `protobuf:"varint,2,opt,name=coinID" json:"coinID,omitempty"`
	ChallengeTransfer           []byte   `protobuf:"bytes,3,opt,name=challengeTransfer,proto3" json:"challengeTransfer,omitempty"`
	ResponseTransfer            []byte   `protobuf:"bytes,4,opt,name=responseTransfer,proto3" json:"responseTransfer,omitempty"`
	ResponseTransferBlockProof  []byte   `protobuf:"bytes,5,opt,name=responseTransferBlockProof,proto3" json:"responseTransferBlockProof,omitempty"`
	PreviousTransferBlockHeight uint64   `protobuf:"varint,6,opt,name=previousTransferBlockHeight" json:"previousTransferBlockHeight,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *PlumResponseChallengeExit) Reset()         { *m = PlumResponseChallengeExit{} }
func (m *PlumResponseChallengeExit) String() string { return proto.CompactTextString(m) }
func (*PlumResponseChallengeExit) ProtoMessage()    {}
func (*PlumResponseChallengeExit) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{15}
}
func (m *PlumResponseChallengeExit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumResponseChallengeExit.Unmarshal(m, b)
}
func (m *PlumResponseChallengeExit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumResponseChallengeExit.Marshal(b, m, deterministic)
}
func (dst *PlumResponseChallengeExit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumResponseChallengeExit.Merge(dst, src)
}
func (m *PlumResponseChallengeExit) XXX_Size() int {
	return xxx_messageInfo_PlumResponseChallengeExit.Size(m)
}
func (m *PlumResponseChallengeExit) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumResponseChallengeExit.DiscardUnknown(m)
}

var xxx_messageInfo_PlumResponseChallengeExit proto.InternalMessageInfo

func (m *PlumResponseChallengeExit) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

func (m *PlumResponseChallengeExit) GetCoinID() uint64 {
	if m != nil {
		return m.CoinID
	}
	return 0
}

func (m *PlumResponseChallengeExit) GetChallengeTransfer() []byte {
	if m != nil {
		return m.ChallengeTransfer
	}
	return nil
}

func (m *PlumResponseChallengeExit) GetResponseTransfer() []byte {
	if m != nil {
		return m.ResponseTransfer
	}
	return nil
}

func (m *PlumResponseChallengeExit) GetResponseTransferBlockProof() []byte {
	if m != nil {
		return m.ResponseTransferBlockProof
	}
	return nil
}

func (m *PlumResponseChallengeExit) GetPreviousTransferBlockHeight() uint64 {
	if m != nil {
		return m.PreviousTransferBlockHeight
	}
	return 0
}

type PlumFinalizeExit struct {
	SubChainAddress      string   `protobuf:"bytes,1,opt,name=subChainAddress" json:"subChainAddress,omitempty"`
	CoinID               uint64   `protobuf:"varint,2,opt,name=coinID" json:"coinID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlumFinalizeExit) Reset()         { *m = PlumFinalizeExit{} }
func (m *PlumFinalizeExit) String() string { return proto.CompactTextString(m) }
func (*PlumFinalizeExit) ProtoMessage()    {}
func (*PlumFinalizeExit) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{16}
}
func (m *PlumFinalizeExit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumFinalizeExit.Unmarshal(m, b)
}
func (m *PlumFinalizeExit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumFinalizeExit.Marshal(b, m, deterministic)
}
func (dst *PlumFinalizeExit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumFinalizeExit.Merge(dst, src)
}
func (m *PlumFinalizeExit) XXX_Size() int {
	return xxx_messageInfo_PlumFinalizeExit.Size(m)
}
func (m *PlumFinalizeExit) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumFinalizeExit.DiscardUnknown(m)
}

var xxx_messageInfo_PlumFinalizeExit proto.InternalMessageInfo

func (m *PlumFinalizeExit) GetSubChainAddress() string {
	if m != nil {
		return m.SubChainAddress
	}
	return ""
}

func (m *PlumFinalizeExit) GetCoinID() uint64 {
	if m != nil {
		return m.CoinID
	}
	return 0
}

// plum sub chain APIs
type PlumSettleDepositPb struct {
	CoinID               uint64   `protobuf:"varint,1,opt,name=coinID" json:"coinID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlumSettleDepositPb) Reset()         { *m = PlumSettleDepositPb{} }
func (m *PlumSettleDepositPb) String() string { return proto.CompactTextString(m) }
func (*PlumSettleDepositPb) ProtoMessage()    {}
func (*PlumSettleDepositPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{17}
}
func (m *PlumSettleDepositPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumSettleDepositPb.Unmarshal(m, b)
}
func (m *PlumSettleDepositPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumSettleDepositPb.Marshal(b, m, deterministic)
}
func (dst *PlumSettleDepositPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumSettleDepositPb.Merge(dst, src)
}
func (m *PlumSettleDepositPb) XXX_Size() int {
	return xxx_messageInfo_PlumSettleDepositPb.Size(m)
}
func (m *PlumSettleDepositPb) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumSettleDepositPb.DiscardUnknown(m)
}

var xxx_messageInfo_PlumSettleDepositPb proto.InternalMessageInfo

func (m *PlumSettleDepositPb) GetCoinID() uint64 {
	if m != nil {
		return m.CoinID
	}
	return 0
}

type PlumTransferPb struct {
	CoinID               uint64   `protobuf:"varint,1,opt,name=coinID" json:"coinID,omitempty"`
	Denomination         []byte   `protobuf:"bytes,2,opt,name=denomination,proto3" json:"denomination,omitempty"`
	Owner                string   `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	Recipient            string   `protobuf:"bytes,4,opt,name=recipient" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlumTransferPb) Reset()         { *m = PlumTransferPb{} }
func (m *PlumTransferPb) String() string { return proto.CompactTextString(m) }
func (*PlumTransferPb) ProtoMessage()    {}
func (*PlumTransferPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{18}
}
func (m *PlumTransferPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlumTransferPb.Unmarshal(m, b)
}
func (m *PlumTransferPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlumTransferPb.Marshal(b, m, deterministic)
}
func (dst *PlumTransferPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlumTransferPb.Merge(dst, src)
}
func (m *PlumTransferPb) XXX_Size() int {
	return xxx_messageInfo_PlumTransferPb.Size(m)
}
func (m *PlumTransferPb) XXX_DiscardUnknown() {
	xxx_messageInfo_PlumTransferPb.DiscardUnknown(m)
}

var xxx_messageInfo_PlumTransferPb proto.InternalMessageInfo

func (m *PlumTransferPb) GetCoinID() uint64 {
	if m != nil {
		return m.CoinID
	}
	return 0
}

func (m *PlumTransferPb) GetDenomination() []byte {
	if m != nil {
		return m.Denomination
	}
	return nil
}

func (m *PlumTransferPb) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *PlumTransferPb) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type ActionPb struct {
	Version uint32 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	// TODO: we should remove sender address later
	Sender       string `protobuf:"bytes,2,opt,name=sender" json:"sender,omitempty"`
	SenderPubKey []byte `protobuf:"bytes,3,opt,name=senderPubKey,proto3" json:"senderPubKey,omitempty"`
	Nonce        uint64 `protobuf:"varint,4,opt,name=nonce" json:"nonce,omitempty"`
	GasLimit     uint64 `protobuf:"varint,5,opt,name=gasLimit" json:"gasLimit,omitempty"`
	GasPrice     []byte `protobuf:"bytes,6,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	Signature    []byte `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	// Types that are valid to be assigned to Action:
	//	*ActionPb_Transfer
	//	*ActionPb_Vote
	//	*ActionPb_Execution
	//	*ActionPb_StartSubChain
	//	*ActionPb_StopSubChain
	//	*ActionPb_PutBlock
	//	*ActionPb_CreateDeposit
	//	*ActionPb_SettleDeposit
	//	*ActionPb_CreatePlumChain
	//	*ActionPb_TerminatePlumChain
	//	*ActionPb_PlumPutBlock
	//	*ActionPb_PlumCreateDeposit
	//	*ActionPb_PlumStartExit
	//	*ActionPb_PlumChallengeExit
	//	*ActionPb_PlumResponseChallengeExit
	//	*ActionPb_PlumFinalizeExit
	//	*ActionPb_PlumSettleDeposit
	//	*ActionPb_PlumTransfer
	//	*ActionPb_DepositToRewardingFund
	//	*ActionPb_ClaimFromRewardingFund
	//	*ActionPb_SetReward
	//	*ActionPb_GrantReward
	Action               isActionPb_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActionPb) Reset()         { *m = ActionPb{} }
func (m *ActionPb) String() string { return proto.CompactTextString(m) }
func (*ActionPb) ProtoMessage()    {}
func (*ActionPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{19}
}
func (m *ActionPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPb.Unmarshal(m, b)
}
func (m *ActionPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPb.Marshal(b, m, deterministic)
}
func (dst *ActionPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPb.Merge(dst, src)
}
func (m *ActionPb) XXX_Size() int {
	return xxx_messageInfo_ActionPb.Size(m)
}
func (m *ActionPb) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPb.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPb proto.InternalMessageInfo

type isActionPb_Action interface {
	isActionPb_Action()
}

type ActionPb_Transfer struct {
	Transfer *TransferPb `protobuf:"bytes,10,opt,name=transfer,oneof"`
}
type ActionPb_Vote struct {
	Vote *VotePb `protobuf:"bytes,11,opt,name=vote,oneof"`
}
type ActionPb_Execution struct {
	Execution *ExecutionPb `protobuf:"bytes,12,opt,name=execution,oneof"`
}
type ActionPb_StartSubChain struct {
	StartSubChain *StartSubChainPb `protobuf:"bytes,13,opt,name=startSubChain,oneof"`
}
type ActionPb_StopSubChain struct {
	StopSubChain *StopSubChainPb `protobuf:"bytes,14,opt,name=stopSubChain,oneof"`
}
type ActionPb_PutBlock struct {
	PutBlock *PutBlockPb `protobuf:"bytes,15,opt,name=putBlock,oneof"`
}
type ActionPb_CreateDeposit struct {
	CreateDeposit *CreateDepositPb `protobuf:"bytes,16,opt,name=createDeposit,oneof"`
}
type ActionPb_SettleDeposit struct {
	SettleDeposit *SettleDepositPb `protobuf:"bytes,17,opt,name=settleDeposit,oneof"`
}
type ActionPb_CreatePlumChain struct {
	CreatePlumChain *CreatePlumChainPb `protobuf:"bytes,18,opt,name=createPlumChain,oneof"`
}
type ActionPb_TerminatePlumChain struct {
	TerminatePlumChain *TerminatePlumChainPb `protobuf:"bytes,19,opt,name=terminatePlumChain,oneof"`
}
type ActionPb_PlumPutBlock struct {
	PlumPutBlock *PlumPutBlockPb `protobuf:"bytes,20,opt,name=plumPutBlock,oneof"`
}
type ActionPb_PlumCreateDeposit struct {
	PlumCreateDeposit *PlumCreateDepositPb `protobuf:"bytes,21,opt,name=plumCreateDeposit,oneof"`
}
type ActionPb_PlumStartExit struct {
	PlumStartExit *PlumStartExitPb `protobuf:"bytes,22,opt,name=plumStartExit,oneof"`
}
type ActionPb_PlumChallengeExit struct {
	PlumChallengeExit *PlumChallengeExit `protobuf:"bytes,23,opt,name=plumChallengeExit,oneof"`
}
type ActionPb_PlumResponseChallengeExit struct {
	PlumResponseChallengeExit *PlumResponseChallengeExit `protobuf:"bytes,24,opt,name=plumResponseChallengeExit,oneof"`
}
type ActionPb_PlumFinalizeExit struct {
	PlumFinalizeExit *PlumFinalizeExit `protobuf:"bytes,25,opt,name=plumFinalizeExit,oneof"`
}
type ActionPb_PlumSettleDeposit struct {
	PlumSettleDeposit *PlumSettleDepositPb `protobuf:"bytes,26,opt,name=plumSettleDeposit,oneof"`
}
type ActionPb_PlumTransfer struct {
	PlumTransfer *PlumTransferPb `protobuf:"bytes,27,opt,name=plumTransfer,oneof"`
}
type ActionPb_DepositToRewardingFund struct {
	DepositToRewardingFund *DepositToRewardingFund `protobuf:"bytes,30,opt,name=depositToRewardingFund,oneof"`
}
type ActionPb_ClaimFromRewardingFund struct {
	ClaimFromRewardingFund *ClaimFromRewardingFund `protobuf:"bytes,31,opt,name=claimFromRewardingFund,oneof"`
}
type ActionPb_SetReward struct {
	SetReward *SetReward `protobuf:"bytes,32,opt,name=setReward,oneof"`
}
type ActionPb_GrantReward struct {
	GrantReward *GrantReward `protobuf:"bytes,33,opt,name=grantReward,oneof"`
}

func (*ActionPb_Transfer) isActionPb_Action()                  {}
func (*ActionPb_Vote) isActionPb_Action()                      {}
func (*ActionPb_Execution) isActionPb_Action()                 {}
func (*ActionPb_StartSubChain) isActionPb_Action()             {}
func (*ActionPb_StopSubChain) isActionPb_Action()              {}
func (*ActionPb_PutBlock) isActionPb_Action()                  {}
func (*ActionPb_CreateDeposit) isActionPb_Action()             {}
func (*ActionPb_SettleDeposit) isActionPb_Action()             {}
func (*ActionPb_CreatePlumChain) isActionPb_Action()           {}
func (*ActionPb_TerminatePlumChain) isActionPb_Action()        {}
func (*ActionPb_PlumPutBlock) isActionPb_Action()              {}
func (*ActionPb_PlumCreateDeposit) isActionPb_Action()         {}
func (*ActionPb_PlumStartExit) isActionPb_Action()             {}
func (*ActionPb_PlumChallengeExit) isActionPb_Action()         {}
func (*ActionPb_PlumResponseChallengeExit) isActionPb_Action() {}
func (*ActionPb_PlumFinalizeExit) isActionPb_Action()          {}
func (*ActionPb_PlumSettleDeposit) isActionPb_Action()         {}
func (*ActionPb_PlumTransfer) isActionPb_Action()              {}
func (*ActionPb_DepositToRewardingFund) isActionPb_Action()    {}
func (*ActionPb_ClaimFromRewardingFund) isActionPb_Action()    {}
func (*ActionPb_SetReward) isActionPb_Action()                 {}
func (*ActionPb_GrantReward) isActionPb_Action()               {}

func (m *ActionPb) GetAction() isActionPb_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ActionPb) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ActionPb) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *ActionPb) GetSenderPubKey() []byte {
	if m != nil {
		return m.SenderPubKey
	}
	return nil
}

func (m *ActionPb) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ActionPb) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *ActionPb) GetGasPrice() []byte {
	if m != nil {
		return m.GasPrice
	}
	return nil
}

func (m *ActionPb) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *ActionPb) GetTransfer() *TransferPb {
	if x, ok := m.GetAction().(*ActionPb_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *ActionPb) GetVote() *VotePb {
	if x, ok := m.GetAction().(*ActionPb_Vote); ok {
		return x.Vote
	}
	return nil
}

func (m *ActionPb) GetExecution() *ExecutionPb {
	if x, ok := m.GetAction().(*ActionPb_Execution); ok {
		return x.Execution
	}
	return nil
}

func (m *ActionPb) GetStartSubChain() *StartSubChainPb {
	if x, ok := m.GetAction().(*ActionPb_StartSubChain); ok {
		return x.StartSubChain
	}
	return nil
}

func (m *ActionPb) GetStopSubChain() *StopSubChainPb {
	if x, ok := m.GetAction().(*ActionPb_StopSubChain); ok {
		return x.StopSubChain
	}
	return nil
}

func (m *ActionPb) GetPutBlock() *PutBlockPb {
	if x, ok := m.GetAction().(*ActionPb_PutBlock); ok {
		return x.PutBlock
	}
	return nil
}

func (m *ActionPb) GetCreateDeposit() *CreateDepositPb {
	if x, ok := m.GetAction().(*ActionPb_CreateDeposit); ok {
		return x.CreateDeposit
	}
	return nil
}

func (m *ActionPb) GetSettleDeposit() *SettleDepositPb {
	if x, ok := m.GetAction().(*ActionPb_SettleDeposit); ok {
		return x.SettleDeposit
	}
	return nil
}

func (m *ActionPb) GetCreatePlumChain() *CreatePlumChainPb {
	if x, ok := m.GetAction().(*ActionPb_CreatePlumChain); ok {
		return x.CreatePlumChain
	}
	return nil
}

func (m *ActionPb) GetTerminatePlumChain() *TerminatePlumChainPb {
	if x, ok := m.GetAction().(*ActionPb_TerminatePlumChain); ok {
		return x.TerminatePlumChain
	}
	return nil
}

func (m *ActionPb) GetPlumPutBlock() *PlumPutBlockPb {
	if x, ok := m.GetAction().(*ActionPb_PlumPutBlock); ok {
		return x.PlumPutBlock
	}
	return nil
}

func (m *ActionPb) GetPlumCreateDeposit() *PlumCreateDepositPb {
	if x, ok := m.GetAction().(*ActionPb_PlumCreateDeposit); ok {
		return x.PlumCreateDeposit
	}
	return nil
}

func (m *ActionPb) GetPlumStartExit() *PlumStartExitPb {
	if x, ok := m.GetAction().(*ActionPb_PlumStartExit); ok {
		return x.PlumStartExit
	}
	return nil
}

func (m *ActionPb) GetPlumChallengeExit() *PlumChallengeExit {
	if x, ok := m.GetAction().(*ActionPb_PlumChallengeExit); ok {
		return x.PlumChallengeExit
	}
	return nil
}

func (m *ActionPb) GetPlumResponseChallengeExit() *PlumResponseChallengeExit {
	if x, ok := m.GetAction().(*ActionPb_PlumResponseChallengeExit); ok {
		return x.PlumResponseChallengeExit
	}
	return nil
}

func (m *ActionPb) GetPlumFinalizeExit() *PlumFinalizeExit {
	if x, ok := m.GetAction().(*ActionPb_PlumFinalizeExit); ok {
		return x.PlumFinalizeExit
	}
	return nil
}

func (m *ActionPb) GetPlumSettleDeposit() *PlumSettleDepositPb {
	if x, ok := m.GetAction().(*ActionPb_PlumSettleDeposit); ok {
		return x.PlumSettleDeposit
	}
	return nil
}

func (m *ActionPb) GetPlumTransfer() *PlumTransferPb {
	if x, ok := m.GetAction().(*ActionPb_PlumTransfer); ok {
		return x.PlumTransfer
	}
	return nil
}

func (m *ActionPb) GetDepositToRewardingFund() *DepositToRewardingFund {
	if x, ok := m.GetAction().(*ActionPb_DepositToRewardingFund); ok {
		return x.DepositToRewardingFund
	}
	return nil
}

func (m *ActionPb) GetClaimFromRewardingFund() *ClaimFromRewardingFund {
	if x, ok := m.GetAction().(*ActionPb_ClaimFromRewardingFund); ok {
		return x.ClaimFromRewardingFund
	}
	return nil
}

func (m *ActionPb) GetSetReward() *SetReward {
	if x, ok := m.GetAction().(*ActionPb_SetReward); ok {
		return x.SetReward
	}
	return nil
}

func (m *ActionPb) GetGrantReward() *GrantReward {
	if x, ok := m.GetAction().(*ActionPb_GrantReward); ok {
		return x.GrantReward
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ActionPb) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ActionPb_OneofMarshaler, _ActionPb_OneofUnmarshaler, _ActionPb_OneofSizer, []interface{}{
		(*ActionPb_Transfer)(nil),
		(*ActionPb_Vote)(nil),
		(*ActionPb_Execution)(nil),
		(*ActionPb_StartSubChain)(nil),
		(*ActionPb_StopSubChain)(nil),
		(*ActionPb_PutBlock)(nil),
		(*ActionPb_CreateDeposit)(nil),
		(*ActionPb_SettleDeposit)(nil),
		(*ActionPb_CreatePlumChain)(nil),
		(*ActionPb_TerminatePlumChain)(nil),
		(*ActionPb_PlumPutBlock)(nil),
		(*ActionPb_PlumCreateDeposit)(nil),
		(*ActionPb_PlumStartExit)(nil),
		(*ActionPb_PlumChallengeExit)(nil),
		(*ActionPb_PlumResponseChallengeExit)(nil),
		(*ActionPb_PlumFinalizeExit)(nil),
		(*ActionPb_PlumSettleDeposit)(nil),
		(*ActionPb_PlumTransfer)(nil),
		(*ActionPb_DepositToRewardingFund)(nil),
		(*ActionPb_ClaimFromRewardingFund)(nil),
		(*ActionPb_SetReward)(nil),
		(*ActionPb_GrantReward)(nil),
	}
}

func _ActionPb_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ActionPb)
	// action
	switch x := m.Action.(type) {
	case *ActionPb_Transfer:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *ActionPb_Vote:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vote); err != nil {
			return err
		}
	case *ActionPb_Execution:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Execution); err != nil {
			return err
		}
	case *ActionPb_StartSubChain:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StartSubChain); err != nil {
			return err
		}
	case *ActionPb_StopSubChain:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StopSubChain); err != nil {
			return err
		}
	case *ActionPb_PutBlock:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutBlock); err != nil {
			return err
		}
	case *ActionPb_CreateDeposit:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreateDeposit); err != nil {
			return err
		}
	case *ActionPb_SettleDeposit:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SettleDeposit); err != nil {
			return err
		}
	case *ActionPb_CreatePlumChain:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CreatePlumChain); err != nil {
			return err
		}
	case *ActionPb_TerminatePlumChain:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TerminatePlumChain); err != nil {
			return err
		}
	case *ActionPb_PlumPutBlock:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumPutBlock); err != nil {
			return err
		}
	case *ActionPb_PlumCreateDeposit:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumCreateDeposit); err != nil {
			return err
		}
	case *ActionPb_PlumStartExit:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumStartExit); err != nil {
			return err
		}
	case *ActionPb_PlumChallengeExit:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumChallengeExit); err != nil {
			return err
		}
	case *ActionPb_PlumResponseChallengeExit:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumResponseChallengeExit); err != nil {
			return err
		}
	case *ActionPb_PlumFinalizeExit:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumFinalizeExit); err != nil {
			return err
		}
	case *ActionPb_PlumSettleDeposit:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumSettleDeposit); err != nil {
			return err
		}
	case *ActionPb_PlumTransfer:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlumTransfer); err != nil {
			return err
		}
	case *ActionPb_DepositToRewardingFund:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DepositToRewardingFund); err != nil {
			return err
		}
	case *ActionPb_ClaimFromRewardingFund:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ClaimFromRewardingFund); err != nil {
			return err
		}
	case *ActionPb_SetReward:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SetReward); err != nil {
			return err
		}
	case *ActionPb_GrantReward:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GrantReward); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ActionPb.Action has unexpected type %T", x)
	}
	return nil
}

func _ActionPb_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ActionPb)
	switch tag {
	case 10: // action.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransferPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_Transfer{msg}
		return true, err
	case 11: // action.vote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VotePb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_Vote{msg}
		return true, err
	case 12: // action.execution
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExecutionPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_Execution{msg}
		return true, err
	case 13: // action.startSubChain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StartSubChainPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_StartSubChain{msg}
		return true, err
	case 14: // action.stopSubChain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StopSubChainPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_StopSubChain{msg}
		return true, err
	case 15: // action.putBlock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutBlockPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PutBlock{msg}
		return true, err
	case 16: // action.createDeposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreateDepositPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_CreateDeposit{msg}
		return true, err
	case 17: // action.settleDeposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SettleDepositPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_SettleDeposit{msg}
		return true, err
	case 18: // action.createPlumChain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CreatePlumChainPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_CreatePlumChain{msg}
		return true, err
	case 19: // action.terminatePlumChain
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TerminatePlumChainPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_TerminatePlumChain{msg}
		return true, err
	case 20: // action.plumPutBlock
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumPutBlockPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumPutBlock{msg}
		return true, err
	case 21: // action.plumCreateDeposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumCreateDepositPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumCreateDeposit{msg}
		return true, err
	case 22: // action.plumStartExit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumStartExitPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumStartExit{msg}
		return true, err
	case 23: // action.plumChallengeExit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumChallengeExit)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumChallengeExit{msg}
		return true, err
	case 24: // action.plumResponseChallengeExit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumResponseChallengeExit)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumResponseChallengeExit{msg}
		return true, err
	case 25: // action.plumFinalizeExit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumFinalizeExit)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumFinalizeExit{msg}
		return true, err
	case 26: // action.plumSettleDeposit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumSettleDepositPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumSettleDeposit{msg}
		return true, err
	case 27: // action.plumTransfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlumTransferPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_PlumTransfer{msg}
		return true, err
	case 30: // action.depositToRewardingFund
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DepositToRewardingFund)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_DepositToRewardingFund{msg}
		return true, err
	case 31: // action.claimFromRewardingFund
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ClaimFromRewardingFund)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_ClaimFromRewardingFund{msg}
		return true, err
	case 32: // action.setReward
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SetReward)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_SetReward{msg}
		return true, err
	case 33: // action.grantReward
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GrantReward)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_GrantReward{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ActionPb_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ActionPb)
	// action
	switch x := m.Action.(type) {
	case *ActionPb_Transfer:
		s := proto.Size(x.Transfer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_Vote:
		s := proto.Size(x.Vote)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_Execution:
		s := proto.Size(x.Execution)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_StartSubChain:
		s := proto.Size(x.StartSubChain)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_StopSubChain:
		s := proto.Size(x.StopSubChain)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PutBlock:
		s := proto.Size(x.PutBlock)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_CreateDeposit:
		s := proto.Size(x.CreateDeposit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_SettleDeposit:
		s := proto.Size(x.SettleDeposit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_CreatePlumChain:
		s := proto.Size(x.CreatePlumChain)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_TerminatePlumChain:
		s := proto.Size(x.TerminatePlumChain)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumPutBlock:
		s := proto.Size(x.PlumPutBlock)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumCreateDeposit:
		s := proto.Size(x.PlumCreateDeposit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumStartExit:
		s := proto.Size(x.PlumStartExit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumChallengeExit:
		s := proto.Size(x.PlumChallengeExit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumResponseChallengeExit:
		s := proto.Size(x.PlumResponseChallengeExit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumFinalizeExit:
		s := proto.Size(x.PlumFinalizeExit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumSettleDeposit:
		s := proto.Size(x.PlumSettleDeposit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_PlumTransfer:
		s := proto.Size(x.PlumTransfer)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_DepositToRewardingFund:
		s := proto.Size(x.DepositToRewardingFund)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_ClaimFromRewardingFund:
		s := proto.Size(x.ClaimFromRewardingFund)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_SetReward:
		s := proto.Size(x.SetReward)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_GrantReward:
		s := proto.Size(x.GrantReward)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReceiptPb struct {
	ReturnValue          []byte   `protobuf:"bytes,1,opt,name=returnValue,proto3" json:"returnValue,omitempty"`
	Status               uint64   `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	ActHash              []byte   `protobuf:"bytes,3,opt,name=actHash,proto3" json:"actHash,omitempty"`
	GasConsumed          uint64   `protobuf:"varint,4,opt,name=gasConsumed" json:"gasConsumed,omitempty"`
	ContractAddress      string   `protobuf:"bytes,5,opt,name=contractAddress" json:"contractAddress,omitempty"`
	Logs                 []*LogPb `protobuf:"bytes,6,rep,name=logs" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptPb) Reset()         { *m = ReceiptPb{} }
func (m *ReceiptPb) String() string { return proto.CompactTextString(m) }
func (*ReceiptPb) ProtoMessage()    {}
func (*ReceiptPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{20}
}
func (m *ReceiptPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptPb.Unmarshal(m, b)
}
func (m *ReceiptPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptPb.Marshal(b, m, deterministic)
}
func (dst *ReceiptPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptPb.Merge(dst, src)
}
func (m *ReceiptPb) XXX_Size() int {
	return xxx_messageInfo_ReceiptPb.Size(m)
}
func (m *ReceiptPb) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptPb.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptPb proto.InternalMessageInfo

func (m *ReceiptPb) GetReturnValue() []byte {
	if m != nil {
		return m.ReturnValue
	}
	return nil
}

func (m *ReceiptPb) GetStatus() uint64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReceiptPb) GetActHash() []byte {
	if m != nil {
		return m.ActHash
	}
	return nil
}

func (m *ReceiptPb) GetGasConsumed() uint64 {
	if m != nil {
		return m.GasConsumed
	}
	return 0
}

func (m *ReceiptPb) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *ReceiptPb) GetLogs() []*LogPb {
	if m != nil {
		return m.Logs
	}
	return nil
}

type LogPb struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	Topics               [][]byte `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	BlockNumber          uint64   `protobuf:"varint,4,opt,name=blockNumber" json:"blockNumber,omitempty"`
	TxnHash              []byte   `protobuf:"bytes,5,opt,name=txnHash,proto3" json:"txnHash,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,6,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Index                uint32   `protobuf:"varint,7,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogPb) Reset()         { *m = LogPb{} }
func (m *LogPb) String() string { return proto.CompactTextString(m) }
func (*LogPb) ProtoMessage()    {}
func (*LogPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{21}
}
func (m *LogPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogPb.Unmarshal(m, b)
}
func (m *LogPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogPb.Marshal(b, m, deterministic)
}
func (dst *LogPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogPb.Merge(dst, src)
}
func (m *LogPb) XXX_Size() int {
	return xxx_messageInfo_LogPb.Size(m)
}
func (m *LogPb) XXX_DiscardUnknown() {
	xxx_messageInfo_LogPb.DiscardUnknown(m)
}

var xxx_messageInfo_LogPb proto.InternalMessageInfo

func (m *LogPb) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *LogPb) GetTopics() [][]byte {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *LogPb) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *LogPb) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *LogPb) GetTxnHash() []byte {
	if m != nil {
		return m.TxnHash
	}
	return nil
}

func (m *LogPb) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *LogPb) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type DepositToRewardingFund struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DepositToRewardingFund) Reset()         { *m = DepositToRewardingFund{} }
func (m *DepositToRewardingFund) String() string { return proto.CompactTextString(m) }
func (*DepositToRewardingFund) ProtoMessage()    {}
func (*DepositToRewardingFund) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{22}
}
func (m *DepositToRewardingFund) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositToRewardingFund.Unmarshal(m, b)
}
func (m *DepositToRewardingFund) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositToRewardingFund.Marshal(b, m, deterministic)
}
func (dst *DepositToRewardingFund) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositToRewardingFund.Merge(dst, src)
}
func (m *DepositToRewardingFund) XXX_Size() int {
	return xxx_messageInfo_DepositToRewardingFund.Size(m)
}
func (m *DepositToRewardingFund) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositToRewardingFund.DiscardUnknown(m)
}

var xxx_messageInfo_DepositToRewardingFund proto.InternalMessageInfo

func (m *DepositToRewardingFund) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *DepositToRewardingFund) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ClaimFromRewardingFund struct {
	Amount               []byte   `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClaimFromRewardingFund) Reset()         { *m = ClaimFromRewardingFund{} }
func (m *ClaimFromRewardingFund) String() string { return proto.CompactTextString(m) }
func (*ClaimFromRewardingFund) ProtoMessage()    {}
func (*ClaimFromRewardingFund) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{23}
}
func (m *ClaimFromRewardingFund) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimFromRewardingFund.Unmarshal(m, b)
}
func (m *ClaimFromRewardingFund) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimFromRewardingFund.Marshal(b, m, deterministic)
}
func (dst *ClaimFromRewardingFund) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimFromRewardingFund.Merge(dst, src)
}
func (m *ClaimFromRewardingFund) XXX_Size() int {
	return xxx_messageInfo_ClaimFromRewardingFund.Size(m)
}
func (m *ClaimFromRewardingFund) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimFromRewardingFund.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimFromRewardingFund proto.InternalMessageInfo

func (m *ClaimFromRewardingFund) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *ClaimFromRewardingFund) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type SetReward struct {
	Amount               []byte     `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Data                 []byte     `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Type                 RewardType `protobuf:"varint,3,opt,name=type,enum=iproto.RewardType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetReward) Reset()         { *m = SetReward{} }
func (m *SetReward) String() string { return proto.CompactTextString(m) }
func (*SetReward) ProtoMessage()    {}
func (*SetReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{24}
}
func (m *SetReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetReward.Unmarshal(m, b)
}
func (m *SetReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetReward.Marshal(b, m, deterministic)
}
func (dst *SetReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetReward.Merge(dst, src)
}
func (m *SetReward) XXX_Size() int {
	return xxx_messageInfo_SetReward.Size(m)
}
func (m *SetReward) XXX_DiscardUnknown() {
	xxx_messageInfo_SetReward.DiscardUnknown(m)
}

var xxx_messageInfo_SetReward proto.InternalMessageInfo

func (m *SetReward) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *SetReward) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SetReward) GetType() RewardType {
	if m != nil {
		return m.Type
	}
	return RewardType_Block
}

type GrantReward struct {
	Type                 RewardType `protobuf:"varint,1,opt,name=type,enum=iproto.RewardType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GrantReward) Reset()         { *m = GrantReward{} }
func (m *GrantReward) String() string { return proto.CompactTextString(m) }
func (*GrantReward) ProtoMessage()    {}
func (*GrantReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_action_7c3e570acfb303ca, []int{25}
}
func (m *GrantReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrantReward.Unmarshal(m, b)
}
func (m *GrantReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrantReward.Marshal(b, m, deterministic)
}
func (dst *GrantReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrantReward.Merge(dst, src)
}
func (m *GrantReward) XXX_Size() int {
	return xxx_messageInfo_GrantReward.Size(m)
}
func (m *GrantReward) XXX_DiscardUnknown() {
	xxx_messageInfo_GrantReward.DiscardUnknown(m)
}

var xxx_messageInfo_GrantReward proto.InternalMessageInfo

func (m *GrantReward) GetType() RewardType {
	if m != nil {
		return m.Type
	}
	return RewardType_Block
}

func init() {
	proto.RegisterType((*TransferPb)(nil), "iproto.TransferPb")
	proto.RegisterType((*VotePb)(nil), "iproto.VotePb")
	proto.RegisterType((*ExecutionPb)(nil), "iproto.ExecutionPb")
	proto.RegisterType((*StartSubChainPb)(nil), "iproto.StartSubChainPb")
	proto.RegisterType((*StopSubChainPb)(nil), "iproto.StopSubChainPb")
	proto.RegisterType((*MerkleRoot)(nil), "iproto.MerkleRoot")
	proto.RegisterType((*PutBlockPb)(nil), "iproto.PutBlockPb")
	proto.RegisterType((*CreateDepositPb)(nil), "iproto.CreateDepositPb")
	proto.RegisterType((*SettleDepositPb)(nil), "iproto.SettleDepositPb")
	proto.RegisterType((*CreatePlumChainPb)(nil), "iproto.CreatePlumChainPb")
	proto.RegisterType((*TerminatePlumChainPb)(nil), "iproto.TerminatePlumChainPb")
	proto.RegisterType((*PlumPutBlockPb)(nil), "iproto.PlumPutBlockPb")
	proto.RegisterMapType((map[string][]byte)(nil), "iproto.PlumPutBlockPb.RootsEntry")
	proto.RegisterType((*PlumCreateDepositPb)(nil), "iproto.PlumCreateDepositPb")
	proto.RegisterType((*PlumStartExitPb)(nil), "iproto.PlumStartExitPb")
	proto.RegisterType((*PlumChallengeExit)(nil), "iproto.PlumChallengeExit")
	proto.RegisterType((*PlumResponseChallengeExit)(nil), "iproto.PlumResponseChallengeExit")
	proto.RegisterType((*PlumFinalizeExit)(nil), "iproto.PlumFinalizeExit")
	proto.RegisterType((*PlumSettleDepositPb)(nil), "iproto.PlumSettleDepositPb")
	proto.RegisterType((*PlumTransferPb)(nil), "iproto.PlumTransferPb")
	proto.RegisterType((*ActionPb)(nil), "iproto.ActionPb")
	proto.RegisterType((*ReceiptPb)(nil), "iproto.ReceiptPb")
	proto.RegisterType((*LogPb)(nil), "iproto.LogPb")
	proto.RegisterType((*DepositToRewardingFund)(nil), "iproto.DepositToRewardingFund")
	proto.RegisterType((*ClaimFromRewardingFund)(nil), "iproto.ClaimFromRewardingFund")
	proto.RegisterType((*SetReward)(nil), "iproto.SetReward")
	proto.RegisterType((*GrantReward)(nil), "iproto.GrantReward")
	proto.RegisterEnum("iproto.RewardType", RewardType_name, RewardType_value)
}

func init() { proto.RegisterFile("action.proto", fileDescriptor_action_7c3e570acfb303ca) }

var fileDescriptor_action_7c3e570acfb303ca = []byte{
	// 1583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcb, 0x6f, 0xdb, 0x46,
	0x13, 0x97, 0x64, 0x49, 0xb6, 0x46, 0x7e, 0xc8, 0x6b, 0x7f, 0x0e, 0xed, 0x04, 0x89, 0x43, 0x7c,
	0xf8, 0x60, 0x18, 0x5f, 0x95, 0x36, 0x41, 0x13, 0xa3, 0x28, 0xda, 0x24, 0x7e, 0x54, 0x41, 0xd2,
	0x54, 0x58, 0xbb, 0x41, 0x0f, 0x2d, 0x0a, 0x8a, 0x5a, 0xcb, 0x44, 0x24, 0x2e, 0x41, 0x2e, 0x1d,
	0xbb, 0xa7, 0x5e, 0xfb, 0x2f, 0xf4, 0x3f, 0xe9, 0xa1, 0xc7, 0x5e, 0x7b, 0xe9, 0x1f, 0xd4, 0x62,
	0x5f, 0xe2, 0x2e, 0x49, 0x2b, 0x71, 0x10, 0xa0, 0x27, 0x71, 0x66, 0x7f, 0x33, 0x3b, 0x2f, 0xce,
	0x0c, 0x05, 0x8b, 0x9e, 0xcf, 0x02, 0x1a, 0x76, 0xa3, 0x98, 0x32, 0x8a, 0x9a, 0x81, 0xf8, 0xdd,
	0xba, 0x33, 0xa2, 0x74, 0x34, 0x26, 0xf7, 0x04, 0x35, 0x48, 0x4f, 0xef, 0xb1, 0x60, 0x42, 0x12,
	0xe6, 0x4d, 0x22, 0x09, 0x74, 0xbf, 0x07, 0x38, 0x89, 0xbd, 0x30, 0x39, 0x25, 0x71, 0x7f, 0x80,
	0x36, 0xa0, 0xe9, 0x4d, 0x68, 0x1a, 0x32, 0xa7, 0xba, 0x5d, 0xdd, 0x59, 0xc4, 0x8a, 0x42, 0xb7,
	0xa0, 0x15, 0x13, 0x3f, 0x88, 0x02, 0x12, 0x32, 0xa7, 0xb6, 0x5d, 0xdd, 0x69, 0xe1, 0x8c, 0x81,
	0x1c, 0x98, 0x8f, 0xbc, 0xcb, 0x31, 0xf5, 0x86, 0xce, 0x9c, 0x10, 0xd3, 0xa4, 0x7b, 0x0a, 0xcd,
	0x57, 0x94, 0x91, 0xfe, 0x00, 0xed, 0x41, 0x6b, 0x7a, 0xb5, 0x50, 0xde, 0xbe, 0xbf, 0xd5, 0x95,
	0xc6, 0x75, 0xb5, 0x71, 0xdd, 0x13, 0x8d, 0xc0, 0x19, 0x18, 0xb9, 0xb0, 0x78, 0x4e, 0x19, 0x21,
	0x4f, 0x86, 0xc3, 0x98, 0x24, 0x89, 0xba, 0xde, 0xe2, 0xb9, 0xdf, 0x42, 0xfb, 0xf0, 0x82, 0xf8,
	0x29, 0x8f, 0xc0, 0x0c, 0x37, 0xb6, 0x60, 0xc1, 0xa7, 0x21, 0x8b, 0x3d, 0x5f, 0x7b, 0x31, 0xa5,
	0x11, 0x82, 0xfa, 0xd0, 0x63, 0x9e, 0xf2, 0x40, 0x3c, 0xbb, 0x7f, 0x55, 0x61, 0xe5, 0x98, 0x79,
	0x31, 0x3b, 0x4e, 0x07, 0xfb, 0x67, 0x5e, 0xc0, 0x75, 0x3b, 0x30, 0xef, 0xf3, 0xc7, 0x67, 0x07,
	0x42, 0xf9, 0x12, 0xd6, 0x24, 0xda, 0x81, 0x95, 0x84, 0xf8, 0x69, 0x1c, 0xb0, 0xcb, 0x03, 0x12,
	0xd1, 0x24, 0x90, 0x97, 0x2c, 0xe2, 0x3c, 0x1b, 0xed, 0x42, 0x87, 0x46, 0x24, 0xf6, 0xb8, 0xb9,
	0x1a, 0x2a, 0xef, 0x2d, 0xf0, 0xd1, 0x36, 0xb4, 0x13, 0x6e, 0x42, 0x8f, 0x04, 0xa3, 0x33, 0xe6,
	0xd4, 0xb7, 0xab, 0x3b, 0x75, 0x6c, 0xb2, 0x50, 0x17, 0x50, 0xe4, 0xc5, 0x24, 0x54, 0xf4, 0x37,
	0xa7, 0xa7, 0x09, 0x61, 0x4e, 0x43, 0x00, 0x4b, 0x4e, 0x5c, 0x06, 0xcb, 0xc7, 0x8c, 0x46, 0xef,
	0xe4, 0xd3, 0x6d, 0x80, 0x84, 0xd1, 0x48, 0x5d, 0x5e, 0x13, 0x3a, 0x0d, 0x8e, 0xf0, 0x59, 0xe9,
	0xd1, 0xf9, 0x99, 0x13, 0x81, 0xcd, 0xb3, 0xdd, 0x87, 0x00, 0x5f, 0x93, 0xf8, 0xf5, 0x98, 0x60,
	0x4a, 0x45, 0xb4, 0x43, 0x6f, 0x42, 0xc4, 0x75, 0x2d, 0x2c, 0x9e, 0xd1, 0x3a, 0x34, 0xce, 0xbd,
	0x71, 0x4a, 0x54, 0xd4, 0x24, 0xe1, 0x5e, 0x00, 0xf4, 0x53, 0xf6, 0x74, 0x4c, 0xfd, 0xd7, 0xfd,
	0x41, 0xd9, 0x7d, 0xd5, 0xd2, 0xfb, 0x78, 0x0d, 0x9c, 0x99, 0x56, 0x2b, 0x0a, 0xed, 0x40, 0x23,
	0xa6, 0x94, 0x71, 0x3b, 0xe7, 0x76, 0xda, 0xf7, 0x51, 0x57, 0xbe, 0x29, 0xdd, 0xcc, 0x38, 0x2c,
	0x01, 0xae, 0x07, 0x2b, 0xfb, 0x31, 0xf1, 0x18, 0x51, 0xa9, 0x98, 0x19, 0xa8, 0xac, 0xe4, 0x6a,
	0x57, 0xbf, 0x39, 0x73, 0xb9, 0x37, 0xc7, 0xfd, 0x01, 0x56, 0x8e, 0x09, 0x63, 0x63, 0xe3, 0x8a,
	0xf7, 0x7b, 0x05, 0xd7, 0xa1, 0x11, 0x84, 0x43, 0x72, 0x21, 0xae, 0xa8, 0x63, 0x49, 0xb8, 0x6b,
	0xb0, 0x2a, 0x3d, 0xe8, 0x8f, 0xd3, 0x89, 0x4a, 0xb6, 0xfb, 0x18, 0xd6, 0x4f, 0x48, 0x3c, 0x09,
	0x42, 0x9b, 0xff, 0xee, 0xa1, 0x75, 0xff, 0xa8, 0xc2, 0x32, 0x97, 0xfc, 0xa0, 0x79, 0x79, 0x64,
	0xe7, 0xe5, 0xae, 0xce, 0x8b, 0x7d, 0x51, 0x97, 0x27, 0x28, 0x39, 0x0c, 0x59, 0x7c, 0xa9, 0xd2,
	0xb4, 0xb5, 0x07, 0x90, 0x31, 0x51, 0x07, 0xe6, 0x5e, 0x93, 0x4b, 0x75, 0x39, 0x7f, 0x2c, 0x2f,
	0xab, 0xcf, 0x6a, 0x7b, 0x55, 0x37, 0x85, 0x35, 0x11, 0x80, 0x5c, 0x92, 0xaf, 0xe5, 0xcb, 0x7b,
	0x24, 0xfd, 0xef, 0x1a, 0xac, 0xf0, 0x7b, 0x45, 0x67, 0x39, 0xbc, 0xb8, 0xe6, 0x9d, 0xbb, 0xd0,
	0x89, 0x62, 0x72, 0x1e, 0xd0, 0x34, 0xd1, 0x8d, 0x5b, 0xdd, 0x5e, 0xe0, 0xa3, 0x2f, 0x60, 0x2b,
	0xcf, 0x93, 0x71, 0x8c, 0x29, 0x3d, 0x55, 0x1d, 0x67, 0x06, 0x02, 0x3d, 0x86, 0x9b, 0xa5, 0xa7,
	0x56, 0x2f, 0x9a, 0x05, 0xe1, 0xcd, 0x9b, 0x5c, 0x04, 0x6c, 0x6a, 0x69, 0x43, 0xdc, 0x69, 0xf1,
	0xd0, 0x43, 0xd8, 0x30, 0x69, 0xc3, 0xc2, 0xa6, 0x40, 0x5f, 0x71, 0x8a, 0xf6, 0xe0, 0x46, 0xe1,
	0x44, 0x59, 0x36, 0x2f, 0x2c, 0xbb, 0xea, 0xd8, 0xfd, 0xa5, 0x06, 0xab, 0xaa, 0xf4, 0xc7, 0x63,
	0x12, 0x8e, 0x08, 0xcf, 0xc2, 0xf5, 0xf2, 0xee, 0x53, 0xd1, 0x05, 0x54, 0x0d, 0x4b, 0x0a, 0xfd,
	0x1f, 0x56, 0x7d, 0xad, 0x72, 0xea, 0xb2, 0x0c, 0x73, 0xf1, 0x80, 0x47, 0xb7, 0xc0, 0x34, 0x9c,
	0xaf, 0x0b, 0xb9, 0x59, 0x10, 0xf4, 0x14, 0x6e, 0x95, 0x1f, 0xab, 0x30, 0xc8, 0x19, 0x30, 0x13,
	0xe3, 0xfe, 0x56, 0x83, 0x4d, 0x1e, 0x0b, 0x4c, 0x92, 0x88, 0x86, 0x09, 0xf9, 0x77, 0x63, 0xb2,
	0x0b, 0x9d, 0x58, 0x19, 0x32, 0x05, 0xcb, 0x40, 0x14, 0xf8, 0xbc, 0xba, 0xf3, 0x3c, 0x23, 0x7c,
	0xb2, 0xd2, 0x66, 0x20, 0xde, 0x56, 0xdd, 0xcd, 0xb7, 0x56, 0xb7, 0x7b, 0x02, 0x1d, 0x1e, 0xba,
	0xa3, 0x20, 0xf4, 0xc6, 0xc1, 0x4f, 0x1f, 0x28, 0x62, 0xee, 0x47, 0xb2, 0x2d, 0x95, 0x0c, 0x06,
	0x05, 0xaf, 0x5a, 0xf0, 0x9f, 0x55, 0x37, 0xb6, 0xd7, 0xb8, 0x32, 0x28, 0x7f, 0x1b, 0x87, 0x24,
	0xa4, 0xa2, 0xf7, 0x07, 0x34, 0x54, 0x7d, 0xc3, 0xe2, 0xf1, 0x76, 0x49, 0xdf, 0x84, 0x2a, 0x47,
	0x2d, 0x2c, 0x09, 0xbb, 0xa3, 0xd5, 0xf3, 0x1d, 0xed, 0xd7, 0x25, 0x58, 0x78, 0xe2, 0xab, 0xe5,
	0xcb, 0x81, 0xf9, 0x73, 0x12, 0x27, 0x5c, 0xbf, 0x9a, 0x91, 0x8a, 0xe4, 0x66, 0x25, 0x24, 0x1c,
	0xaa, 0x86, 0xd5, 0xc2, 0x8a, 0xe2, 0x66, 0xc9, 0xa7, 0x7e, 0x3a, 0x78, 0x4e, 0x2e, 0x55, 0x75,
	0x58, 0x3c, 0x6e, 0x56, 0x48, 0x43, 0x9f, 0xa8, 0xa6, 0x23, 0x09, 0xbe, 0xd0, 0x8d, 0xbc, 0xe4,
	0x45, 0x30, 0x09, 0x74, 0xb1, 0x4f, 0x69, 0x75, 0xd6, 0x8f, 0x03, 0x9f, 0xa8, 0x46, 0x32, 0xa5,
	0xb9, 0x3b, 0x49, 0x30, 0x0a, 0x3d, 0x96, 0xc6, 0x44, 0x34, 0x8b, 0x45, 0x9c, 0x31, 0xd0, 0xc7,
	0xb0, 0xc0, 0x74, 0xf1, 0x81, 0x58, 0x55, 0xa7, 0x5b, 0x42, 0x16, 0xe4, 0x5e, 0x05, 0x4f, 0x51,
	0xe8, 0xbf, 0x50, 0xe7, 0xfb, 0xa8, 0xd3, 0x16, 0xe8, 0x65, 0x8d, 0x96, 0xbb, 0x6f, 0xaf, 0x82,
	0xc5, 0x29, 0x7a, 0x00, 0x2d, 0xa2, 0xb7, 0x54, 0x67, 0x51, 0x40, 0xd7, 0x34, 0xd4, 0x58, 0x5f,
	0x7b, 0x15, 0x9c, 0xe1, 0xd0, 0x97, 0xb0, 0x94, 0x98, 0x2b, 0xa8, 0xb3, 0x24, 0x04, 0x6f, 0x68,
	0xc1, 0xdc, 0x7e, 0xda, 0xab, 0x60, 0x1b, 0x8f, 0x3e, 0x87, 0xc5, 0xc4, 0x58, 0xf7, 0x9c, 0x65,
	0x21, 0xbf, 0x91, 0xc9, 0x9b, 0xab, 0x60, 0xaf, 0x82, 0x2d, 0x34, 0x8f, 0x45, 0xa4, 0xa6, 0xaf,
	0xb3, 0x62, 0xc7, 0x22, 0x9b, 0xca, 0x3c, 0x16, 0x1a, 0xc5, 0x0d, 0xf6, 0xcd, 0x89, 0xea, 0x74,
	0x6c, 0x83, 0x73, 0xe3, 0x96, 0x1b, 0x6c, 0xe1, 0x85, 0xc7, 0x66, 0xed, 0x3b, 0xab, 0x39, 0x8f,
	0xed, 0x17, 0x43, 0x78, 0x6c, 0xb2, 0xd0, 0x21, 0xac, 0xf8, 0xf6, 0xda, 0xe3, 0x20, 0xa1, 0x62,
	0xd3, 0xb6, 0xc1, 0xd8, 0x7e, 0x7a, 0x15, 0x9c, 0x97, 0x41, 0x2f, 0x01, 0xb1, 0xc2, 0xa2, 0xe4,
	0xac, 0x09, 0x4d, 0xb7, 0xa6, 0x05, 0x51, 0xb2, 0x4a, 0xf5, 0x2a, 0xb8, 0x44, 0x92, 0x27, 0x22,
	0x32, 0x96, 0x19, 0x67, 0xdd, 0x4e, 0x84, 0xbd, 0xe8, 0xf0, 0x44, 0x98, 0x68, 0xf4, 0x1c, 0x56,
	0xa3, 0xfc, 0xb2, 0xe2, 0xfc, 0x47, 0xa8, 0xb8, 0x69, 0xaa, 0x28, 0x86, 0xb7, 0x28, 0xc7, 0x43,
	0x1c, 0x99, 0x1b, 0x88, 0xb3, 0x61, 0x87, 0x38, 0xb7, 0x9e, 0xf0, 0x10, 0x5b, 0x78, 0xf4, 0x4c,
	0x59, 0x63, 0x0e, 0x0b, 0xe7, 0x86, 0x1d, 0xe4, 0xc2, 0x84, 0x9d, 0xda, 0x62, 0x8d, 0x18, 0x0f,
	0x36, 0xa3, 0xab, 0xe6, 0x8f, 0xe3, 0x08, 0x95, 0xd6, 0x32, 0x58, 0x0a, 0xec, 0x55, 0xf0, 0xd5,
	0x5a, 0xd0, 0x11, 0x74, 0xa2, 0x5c, 0x9f, 0x76, 0x36, 0x85, 0x66, 0xc7, 0xd4, 0x6c, 0x9e, 0xf7,
	0x2a, 0xb8, 0x20, 0xa3, 0x73, 0x60, 0x15, 0xa0, 0xb3, 0x55, 0xcc, 0x41, 0xb1, 0x42, 0x8b, 0x72,
	0xba, 0x1c, 0xa6, 0x63, 0xee, 0x66, 0xb1, 0x1c, 0xac, 0x6e, 0x63, 0xa1, 0xd1, 0x77, 0xb0, 0x31,
	0x94, 0x8a, 0x4e, 0x28, 0x26, 0x6f, 0xbc, 0x78, 0x18, 0x84, 0xa3, 0xa3, 0x34, 0x1c, 0x3a, 0xb7,
	0x85, 0x9e, 0xdb, 0x5a, 0xcf, 0x41, 0x29, 0xaa, 0x57, 0xc1, 0x57, 0xc8, 0x73, 0xcd, 0xfe, 0xd8,
	0x0b, 0x26, 0x47, 0x31, 0x9d, 0xd8, 0x9a, 0xef, 0xd8, 0x9a, 0xf7, 0x4b, 0x51, 0x5c, 0x73, 0xb9,
	0x3c, 0xfa, 0x04, 0x5a, 0x09, 0x61, 0x92, 0xe7, 0x6c, 0x0b, 0x65, 0xab, 0xc6, 0x4b, 0x2d, 0x0f,
	0x78, 0xf7, 0x9b, 0xa2, 0xd0, 0x23, 0x68, 0x8f, 0x62, 0x2f, 0xd4, 0x42, 0x77, 0xed, 0xa6, 0xf9,
	0x55, 0x76, 0xd4, 0xab, 0x60, 0x13, 0xf9, 0x74, 0x01, 0x9a, 0xf2, 0x0f, 0x11, 0xf7, 0xcf, 0x2a,
	0xb4, 0x30, 0xf1, 0x49, 0x10, 0xf1, 0x29, 0xba, 0x0d, 0xed, 0x98, 0xb0, 0x34, 0x0e, 0x5f, 0x89,
	0x6f, 0x02, 0xf9, 0x8d, 0x65, 0xb2, 0xc4, 0x94, 0x62, 0x1e, 0x4b, 0x13, 0x3d, 0x96, 0x25, 0xc5,
	0xe7, 0x9a, 0xe7, 0xb3, 0x9e, 0x97, 0x9c, 0xe9, 0x7f, 0x39, 0x14, 0xc9, 0x75, 0x8e, 0xbc, 0x64,
	0x9f, 0x86, 0x49, 0x3a, 0x21, 0x43, 0xfd, 0x89, 0x6e, 0xb0, 0xf8, 0x52, 0xa0, 0xff, 0x68, 0xd0,
	0x4b, 0x41, 0x43, 0x2e, 0x05, 0x39, 0x36, 0xba, 0x0b, 0xf5, 0x31, 0x1d, 0x25, 0x4e, 0x53, 0x7c,
	0x05, 0x2d, 0x69, 0x4f, 0x5f, 0xd0, 0x51, 0x7f, 0x80, 0xc5, 0x91, 0xfb, 0x7b, 0x15, 0x1a, 0x82,
	0x16, 0x26, 0x59, 0x3b, 0x86, 0x26, 0xb9, 0x13, 0x8c, 0x46, 0x81, 0xcf, 0x9d, 0x98, 0xe3, 0x5f,
	0x26, 0x92, 0x2a, 0xfb, 0x97, 0x83, 0x9b, 0x3f, 0xe0, 0x2d, 0xe6, 0x65, 0x3a, 0x19, 0xa8, 0x75,
	0xab, 0x8e, 0x4d, 0x16, 0xbf, 0x87, 0x5d, 0x84, 0xc2, 0x75, 0xb9, 0x56, 0x69, 0x92, 0x0f, 0x52,
	0x01, 0x14, 0x67, 0x72, 0xca, 0x66, 0x8c, 0xec, 0xab, 0x74, 0x5e, 0x2c, 0x02, 0xea, 0xab, 0xf4,
	0x00, 0x36, 0xca, 0x8b, 0xf2, 0xca, 0x6f, 0x5f, 0x6d, 0x75, 0xcd, 0xf8, 0x6f, 0xe6, 0x00, 0x36,
	0xca, 0x0b, 0xf0, 0x5a, 0x5a, 0x7e, 0x84, 0xd6, 0xb4, 0xf2, 0xae, 0x23, 0x88, 0xfe, 0x07, 0x75,
	0x76, 0x19, 0x11, 0x11, 0xc8, 0xe5, 0x6c, 0x26, 0x4a, 0x4d, 0x27, 0x97, 0x11, 0xc1, 0xe2, 0xdc,
	0xfd, 0x14, 0xda, 0x46, 0x95, 0x4e, 0xc5, 0xaa, 0xb3, 0xc5, 0x76, 0x5d, 0x80, 0x8c, 0x87, 0x5a,
	0xd0, 0x10, 0x43, 0xa0, 0x53, 0xe1, 0x8f, 0x87, 0x11, 0xf5, 0xcf, 0x3a, 0xd5, 0x41, 0x53, 0xc8,
	0x3e, 0xf8, 0x27, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x2d, 0x53, 0x39, 0xfa, 0x13, 0x00, 0x00,
}
