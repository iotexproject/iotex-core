// Copyright (c) 2019 IoTeX
// This is an alpha (internal) release and is not suitable for production. This source code is provided 'as is' and no
// warranties are given as to title or non-infringement, merchantability or fitness for purpose and, to the extent
// permitted by law, all liability for your use of the code is disclaimed. This source code is governed by Apache
// License 2.0 that can be found in the LICENSE file.

// To compile the proto, run:
//      protoc -I. -I ./../types --go_out=plugins=grpc:$GOPATH/src *.proto
syntax = "proto3";
package iotexapi;
option go_package = "github.com/iotexproject/iotex-core/protogen/iotexapi";

import "proto/types/action.proto";
import "proto/types/blockchain.proto";
import "proto/types/node.proto";

service APIService {
  // get the address detail of an address
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {}

  // get action(s) by:
  // 1. start index and action count
  // 2. action hash
  // 3. address with start index and action count
  // 4. get unconfirmed actions by address with start index and action count
  // 5. block hash with start index and action count
  rpc GetActions(GetActionsRequest) returns (GetActionsResponse) {}

  // get block metadata(s) by:
  // 1. start index and block count
  // 2. block hash
  rpc GetBlockMetas(GetBlockMetasRequest) returns (GetBlockMetasResponse) {}

  // get chain metadata
  rpc GetChainMeta(GetChainMetaRequest) returns (GetChainMetaResponse) {}

  // get server version
  rpc GetServerMeta(GetServerMetaRequest) returns (GetServerMetaResponse) {}

  // sendAction
  rpc SendAction(SendActionRequest) returns (SendActionResponse) {}

  // get receipt by action Hash
  rpc GetReceiptByAction(GetReceiptByActionRequest) returns (GetReceiptByActionResponse) {}

  // TODO: read contract
  rpc ReadContract(ReadContractRequest) returns (ReadContractResponse) {}

  // suggest gas price
  rpc SuggestGasPrice(SuggestGasPriceRequest) returns (SuggestGasPriceResponse) {}

  // estimate gas for action
  rpc EstimateGasForAction(EstimateGasForActionRequest) returns (EstimateGasForActionResponse) {}

  // read state from blockchain
  rpc ReadState(ReadStateRequest) returns (ReadStateResponse) {}

  // get epoch metadata
  rpc GetEpochMeta(GetEpochMetaRequest) returns (GetEpochMetaResponse) {}
}

message GetAccountRequest {
  string address = 1;
}

message GetAccountResponse {
  iotextypes.AccountMeta accountMeta = 1;
}

message GetActionsRequest {
  oneof lookup {
    GetActionsByIndexRequest byIndex = 1;
    GetActionByHashRequest byHash = 2;
    GetActionsByAddressRequest byAddr = 3;
    GetUnconfirmedActionsByAddressRequest unconfirmedByAddr = 4;
    GetActionsByBlockRequest byBlk = 5;
  }
}

message GetActionsByIndexRequest {
  uint64 start = 1;
  uint64 count = 2;
}

message GetActionByHashRequest {
  string actionHash = 1;
  bool checkPending = 2;
}

message GetActionsByAddressRequest {
  string address = 1;
  uint64 start = 2;
  uint64 count = 3;
}

message GetUnconfirmedActionsByAddressRequest {
  string address = 1;
  uint64 start = 2;
  uint64 count = 3;
}

message GetActionsByBlockRequest {
  string blkHash = 1;
  uint64 start = 2;
  uint64 count = 3;
}

message ActionInfo {
  iotextypes.Action action = 1;
  string actHash = 2;
  string blkHash = 3;
}

message ReceiptInfo {
  iotextypes.Receipt receipt = 1;
  string blkHash = 2;
}

message BlockProducerInfo {
    string address = 1;
    string votes = 2;
    bool active = 3;
    uint64 production = 4;
}

message GetActionsResponse {
  repeated ActionInfo actionInfo = 1;
}

message GetBlockMetasRequest {
  oneof lookup {
    GetBlockMetasByIndexRequest byIndex = 1;
    GetBlockMetaByHashRequest byHash = 2;
  }
}

message GetBlockMetasByIndexRequest {
  uint64 start = 1;
  uint64 count = 2;
}

message GetBlockMetaByHashRequest {
  string blkHash = 1;
}

message GetBlockMetasResponse {
  repeated iotextypes.BlockMeta blkMetas = 1;
}

message GetChainMetaRequest {}

message GetChainMetaResponse {
  iotextypes.ChainMeta chainMeta = 1;
}

message GetServerMetaRequest  {}

message GetServerMetaResponse  {
  iotextypes.ServerMeta serverMeta = 1;
}

message SendActionRequest {
  iotextypes.Action action = 1;
}

message SendActionResponse {}

message GetReceiptByActionRequest {
  string actionHash = 1;
}

message GetReceiptByActionResponse {
  ReceiptInfo receiptInfo = 1;
}

message ReadContractRequest {
  iotextypes.Action action = 1;
}

message ReadContractResponse {
  string data = 1;
  iotextypes.Receipt receipt = 2;
}

message SuggestGasPriceRequest {}

message SuggestGasPriceResponse {
  uint64 gasPrice = 1;
}

message EstimateGasForActionRequest {
  iotextypes.Action action = 1;
}

message EstimateGasForActionResponse {
  uint64 gas = 1;
}

message ReadStateRequest {
  bytes protocolID = 1;
  bytes methodName = 2;
  repeated bytes arguments = 3;
}

message ReadStateResponse {
  bytes data = 1;
}

message GetEpochMetaRequest {
    uint64 epochNumber = 1;
}

message GetEpochMetaResponse {
    iotextypes.EpochData epochData = 1;
    uint64 totalBlocks = 2;
    repeated BlockProducerInfo blockProducersInfo = 3;
}
