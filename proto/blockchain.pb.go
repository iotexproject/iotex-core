// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain.proto

package iproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ViewChangeMsg_ViewChangeType int32

const (
	ViewChangeMsg_INVALID_VIEW_CHANGE_TYPE ViewChangeMsg_ViewChangeType = 0
	ViewChangeMsg_PROPOSE                  ViewChangeMsg_ViewChangeType = 1
	ViewChangeMsg_PREVOTE                  ViewChangeMsg_ViewChangeType = 2
	ViewChangeMsg_VOTE                     ViewChangeMsg_ViewChangeType = 3
)

var ViewChangeMsg_ViewChangeType_name = map[int32]string{
	0: "INVALID_VIEW_CHANGE_TYPE",
	1: "PROPOSE",
	2: "PREVOTE",
	3: "VOTE",
}
var ViewChangeMsg_ViewChangeType_value = map[string]int32{
	"INVALID_VIEW_CHANGE_TYPE": 0,
	"PROPOSE":                  1,
	"PREVOTE":                  2,
	"VOTE":                     3,
}

func (x ViewChangeMsg_ViewChangeType) String() string {
	return proto.EnumName(ViewChangeMsg_ViewChangeType_name, int32(x))
}
func (ViewChangeMsg_ViewChangeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{13, 0}
}

type TxInputPb struct {
	TxHash               []byte   `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	OutIndex             int32    `protobuf:"varint,2,opt,name=outIndex,proto3" json:"outIndex,omitempty"`
	UnlockScriptSize     uint32   `protobuf:"varint,3,opt,name=unlockScriptSize,proto3" json:"unlockScriptSize,omitempty"`
	UnlockScript         []byte   `protobuf:"bytes,4,opt,name=unlockScript,proto3" json:"unlockScript,omitempty"`
	Sequence             uint32   `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxInputPb) Reset()         { *m = TxInputPb{} }
func (m *TxInputPb) String() string { return proto.CompactTextString(m) }
func (*TxInputPb) ProtoMessage()    {}
func (*TxInputPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{0}
}
func (m *TxInputPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInputPb.Unmarshal(m, b)
}
func (m *TxInputPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInputPb.Marshal(b, m, deterministic)
}
func (dst *TxInputPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInputPb.Merge(dst, src)
}
func (m *TxInputPb) XXX_Size() int {
	return xxx_messageInfo_TxInputPb.Size(m)
}
func (m *TxInputPb) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInputPb.DiscardUnknown(m)
}

var xxx_messageInfo_TxInputPb proto.InternalMessageInfo

func (m *TxInputPb) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *TxInputPb) GetOutIndex() int32 {
	if m != nil {
		return m.OutIndex
	}
	return 0
}

func (m *TxInputPb) GetUnlockScriptSize() uint32 {
	if m != nil {
		return m.UnlockScriptSize
	}
	return 0
}

func (m *TxInputPb) GetUnlockScript() []byte {
	if m != nil {
		return m.UnlockScript
	}
	return nil
}

func (m *TxInputPb) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

// TxOutput stores “coins”. It is indivisible, which means that you cannot reference a part of its value.
// When an output is referenced in a new transaction, it’s spent as a whole. And if its value is greater than required,
// a change is generated and sent back to the sender.
type TxOutputPb struct {
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	LockScriptSize       uint32   `protobuf:"varint,2,opt,name=lockScriptSize,proto3" json:"lockScriptSize,omitempty"`
	LockScript           []byte   `protobuf:"bytes,3,opt,name=lockScript,proto3" json:"lockScript,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxOutputPb) Reset()         { *m = TxOutputPb{} }
func (m *TxOutputPb) String() string { return proto.CompactTextString(m) }
func (*TxOutputPb) ProtoMessage()    {}
func (*TxOutputPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{1}
}
func (m *TxOutputPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutputPb.Unmarshal(m, b)
}
func (m *TxOutputPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutputPb.Marshal(b, m, deterministic)
}
func (dst *TxOutputPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutputPb.Merge(dst, src)
}
func (m *TxOutputPb) XXX_Size() int {
	return xxx_messageInfo_TxOutputPb.Size(m)
}
func (m *TxOutputPb) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutputPb.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutputPb proto.InternalMessageInfo

func (m *TxOutputPb) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxOutputPb) GetLockScriptSize() uint32 {
	if m != nil {
		return m.LockScriptSize
	}
	return 0
}

func (m *TxOutputPb) GetLockScript() []byte {
	if m != nil {
		return m.LockScript
	}
	return nil
}

type TxPb struct {
	Version  uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	LockTime uint32 `protobuf:"varint,2,opt,name=lockTime,proto3" json:"lockTime,omitempty"`
	// used by utxo-based model
	TxIn                 []*TxInputPb  `protobuf:"bytes,21,rep,name=txIn,proto3" json:"txIn,omitempty"`
	TxOut                []*TxOutputPb `protobuf:"bytes,22,rep,name=txOut,proto3" json:"txOut,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TxPb) Reset()         { *m = TxPb{} }
func (m *TxPb) String() string { return proto.CompactTextString(m) }
func (*TxPb) ProtoMessage()    {}
func (*TxPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{2}
}
func (m *TxPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxPb.Unmarshal(m, b)
}
func (m *TxPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxPb.Marshal(b, m, deterministic)
}
func (dst *TxPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxPb.Merge(dst, src)
}
func (m *TxPb) XXX_Size() int {
	return xxx_messageInfo_TxPb.Size(m)
}
func (m *TxPb) XXX_DiscardUnknown() {
	xxx_messageInfo_TxPb.DiscardUnknown(m)
}

var xxx_messageInfo_TxPb proto.InternalMessageInfo

func (m *TxPb) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TxPb) GetLockTime() uint32 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *TxPb) GetTxIn() []*TxInputPb {
	if m != nil {
		return m.TxIn
	}
	return nil
}

func (m *TxPb) GetTxOut() []*TxOutputPb {
	if m != nil {
		return m.TxOut
	}
	return nil
}

type TransferPb struct {
	// used by state-based model
	Amount               []byte   `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Sender               string   `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient            string   `protobuf:"bytes,6,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Payload              []byte   `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	SenderPubKey         []byte   `protobuf:"bytes,8,opt,name=senderPubKey,proto3" json:"senderPubKey,omitempty"`
	IsCoinbase           bool     `protobuf:"varint,9,opt,name=isCoinbase,proto3" json:"isCoinbase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferPb) Reset()         { *m = TransferPb{} }
func (m *TransferPb) String() string { return proto.CompactTextString(m) }
func (*TransferPb) ProtoMessage()    {}
func (*TransferPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{3}
}
func (m *TransferPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferPb.Unmarshal(m, b)
}
func (m *TransferPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferPb.Marshal(b, m, deterministic)
}
func (dst *TransferPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferPb.Merge(dst, src)
}
func (m *TransferPb) XXX_Size() int {
	return xxx_messageInfo_TransferPb.Size(m)
}
func (m *TransferPb) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferPb.DiscardUnknown(m)
}

var xxx_messageInfo_TransferPb proto.InternalMessageInfo

func (m *TransferPb) GetAmount() []byte {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *TransferPb) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *TransferPb) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *TransferPb) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *TransferPb) GetSenderPubKey() []byte {
	if m != nil {
		return m.SenderPubKey
	}
	return nil
}

func (m *TransferPb) GetIsCoinbase() bool {
	if m != nil {
		return m.IsCoinbase
	}
	return false
}

type VotePb struct {
	Timestamp            uint64   `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SelfPubkey           []byte   `protobuf:"bytes,5,opt,name=selfPubkey,proto3" json:"selfPubkey,omitempty"`
	VotePubkey           []byte   `protobuf:"bytes,6,opt,name=votePubkey,proto3" json:"votePubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VotePb) Reset()         { *m = VotePb{} }
func (m *VotePb) String() string { return proto.CompactTextString(m) }
func (*VotePb) ProtoMessage()    {}
func (*VotePb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{4}
}
func (m *VotePb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VotePb.Unmarshal(m, b)
}
func (m *VotePb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VotePb.Marshal(b, m, deterministic)
}
func (dst *VotePb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VotePb.Merge(dst, src)
}
func (m *VotePb) XXX_Size() int {
	return xxx_messageInfo_VotePb.Size(m)
}
func (m *VotePb) XXX_DiscardUnknown() {
	xxx_messageInfo_VotePb.DiscardUnknown(m)
}

var xxx_messageInfo_VotePb proto.InternalMessageInfo

func (m *VotePb) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *VotePb) GetSelfPubkey() []byte {
	if m != nil {
		return m.SelfPubkey
	}
	return nil
}

func (m *VotePb) GetVotePubkey() []byte {
	if m != nil {
		return m.VotePubkey
	}
	return nil
}

type ActionPb struct {
	// Types that are valid to be assigned to Action:
	//	*ActionPb_Tx
	//	*ActionPb_Transfer
	//	*ActionPb_Vote
	Action               isActionPb_Action `protobuf_oneof:"action"`
	Version              uint32            `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Nonce                uint64            `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Signature            []byte            `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActionPb) Reset()         { *m = ActionPb{} }
func (m *ActionPb) String() string { return proto.CompactTextString(m) }
func (*ActionPb) ProtoMessage()    {}
func (*ActionPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{5}
}
func (m *ActionPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPb.Unmarshal(m, b)
}
func (m *ActionPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPb.Marshal(b, m, deterministic)
}
func (dst *ActionPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPb.Merge(dst, src)
}
func (m *ActionPb) XXX_Size() int {
	return xxx_messageInfo_ActionPb.Size(m)
}
func (m *ActionPb) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPb.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPb proto.InternalMessageInfo

type isActionPb_Action interface {
	isActionPb_Action()
}

type ActionPb_Tx struct {
	Tx *TxPb `protobuf:"bytes,1,opt,name=tx,proto3,oneof"`
}

type ActionPb_Transfer struct {
	Transfer *TransferPb `protobuf:"bytes,2,opt,name=transfer,proto3,oneof"`
}

type ActionPb_Vote struct {
	Vote *VotePb `protobuf:"bytes,3,opt,name=vote,proto3,oneof"`
}

func (*ActionPb_Tx) isActionPb_Action() {}

func (*ActionPb_Transfer) isActionPb_Action() {}

func (*ActionPb_Vote) isActionPb_Action() {}

func (m *ActionPb) GetAction() isActionPb_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ActionPb) GetTx() *TxPb {
	if x, ok := m.GetAction().(*ActionPb_Tx); ok {
		return x.Tx
	}
	return nil
}

func (m *ActionPb) GetTransfer() *TransferPb {
	if x, ok := m.GetAction().(*ActionPb_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *ActionPb) GetVote() *VotePb {
	if x, ok := m.GetAction().(*ActionPb_Vote); ok {
		return x.Vote
	}
	return nil
}

func (m *ActionPb) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ActionPb) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *ActionPb) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ActionPb) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ActionPb_OneofMarshaler, _ActionPb_OneofUnmarshaler, _ActionPb_OneofSizer, []interface{}{
		(*ActionPb_Tx)(nil),
		(*ActionPb_Transfer)(nil),
		(*ActionPb_Vote)(nil),
	}
}

func _ActionPb_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ActionPb)
	// action
	switch x := m.Action.(type) {
	case *ActionPb_Tx:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tx); err != nil {
			return err
		}
	case *ActionPb_Transfer:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *ActionPb_Vote:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vote); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ActionPb.Action has unexpected type %T", x)
	}
	return nil
}

func _ActionPb_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ActionPb)
	switch tag {
	case 1: // action.tx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TxPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_Tx{msg}
		return true, err
	case 2: // action.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransferPb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_Transfer{msg}
		return true, err
	case 3: // action.vote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VotePb)
		err := b.DecodeMessage(msg)
		m.Action = &ActionPb_Vote{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ActionPb_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ActionPb)
	// action
	switch x := m.Action.(type) {
	case *ActionPb_Tx:
		s := proto.Size(x.Tx)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_Transfer:
		s := proto.Size(x.Transfer)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ActionPb_Vote:
		s := proto.Size(x.Vote)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// header of a block
type BlockHeaderPb struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	ChainID              uint32   `protobuf:"varint,2,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Height               uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp            uint64   `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevBlockHash        []byte   `protobuf:"bytes,5,opt,name=prevBlockHash,proto3" json:"prevBlockHash,omitempty"`
	TxRoot               []byte   `protobuf:"bytes,6,opt,name=txRoot,proto3" json:"txRoot,omitempty"`
	StateRoot            []byte   `protobuf:"bytes,7,opt,name=stateRoot,proto3" json:"stateRoot,omitempty"`
	TrnxNumber           uint32   `protobuf:"varint,8,opt,name=trnxNumber,proto3" json:"trnxNumber,omitempty"`
	TrnxDataSize         uint32   `protobuf:"varint,9,opt,name=trnxDataSize,proto3" json:"trnxDataSize,omitempty"`
	Signature            []byte   `protobuf:"bytes,10,opt,name=signature,proto3" json:"signature,omitempty"`
	Pubkey               []byte   `protobuf:"bytes,11,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHeaderPb) Reset()         { *m = BlockHeaderPb{} }
func (m *BlockHeaderPb) String() string { return proto.CompactTextString(m) }
func (*BlockHeaderPb) ProtoMessage()    {}
func (*BlockHeaderPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{6}
}
func (m *BlockHeaderPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeaderPb.Unmarshal(m, b)
}
func (m *BlockHeaderPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeaderPb.Marshal(b, m, deterministic)
}
func (dst *BlockHeaderPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeaderPb.Merge(dst, src)
}
func (m *BlockHeaderPb) XXX_Size() int {
	return xxx_messageInfo_BlockHeaderPb.Size(m)
}
func (m *BlockHeaderPb) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeaderPb.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeaderPb proto.InternalMessageInfo

func (m *BlockHeaderPb) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockHeaderPb) GetChainID() uint32 {
	if m != nil {
		return m.ChainID
	}
	return 0
}

func (m *BlockHeaderPb) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockHeaderPb) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockHeaderPb) GetPrevBlockHash() []byte {
	if m != nil {
		return m.PrevBlockHash
	}
	return nil
}

func (m *BlockHeaderPb) GetTxRoot() []byte {
	if m != nil {
		return m.TxRoot
	}
	return nil
}

func (m *BlockHeaderPb) GetStateRoot() []byte {
	if m != nil {
		return m.StateRoot
	}
	return nil
}

func (m *BlockHeaderPb) GetTrnxNumber() uint32 {
	if m != nil {
		return m.TrnxNumber
	}
	return 0
}

func (m *BlockHeaderPb) GetTrnxDataSize() uint32 {
	if m != nil {
		return m.TrnxDataSize
	}
	return 0
}

func (m *BlockHeaderPb) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *BlockHeaderPb) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

// block consists of header followed by transactions
// hash of current block can be computed from header hence not stored
type BlockPb struct {
	Header               *BlockHeaderPb `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Actions              []*ActionPb    `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BlockPb) Reset()         { *m = BlockPb{} }
func (m *BlockPb) String() string { return proto.CompactTextString(m) }
func (*BlockPb) ProtoMessage()    {}
func (*BlockPb) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{7}
}
func (m *BlockPb) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockPb.Unmarshal(m, b)
}
func (m *BlockPb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockPb.Marshal(b, m, deterministic)
}
func (dst *BlockPb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockPb.Merge(dst, src)
}
func (m *BlockPb) XXX_Size() int {
	return xxx_messageInfo_BlockPb.Size(m)
}
func (m *BlockPb) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockPb.DiscardUnknown(m)
}

var xxx_messageInfo_BlockPb proto.InternalMessageInfo

func (m *BlockPb) GetHeader() *BlockHeaderPb {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BlockPb) GetActions() []*ActionPb {
	if m != nil {
		return m.Actions
	}
	return nil
}

// index of block raw data file
type BlockIndex struct {
	Start                uint64   `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  uint64   `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Offset               []uint32 `protobuf:"varint,3,rep,packed,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockIndex) Reset()         { *m = BlockIndex{} }
func (m *BlockIndex) String() string { return proto.CompactTextString(m) }
func (*BlockIndex) ProtoMessage()    {}
func (*BlockIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{8}
}
func (m *BlockIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockIndex.Unmarshal(m, b)
}
func (m *BlockIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockIndex.Marshal(b, m, deterministic)
}
func (dst *BlockIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockIndex.Merge(dst, src)
}
func (m *BlockIndex) XXX_Size() int {
	return xxx_messageInfo_BlockIndex.Size(m)
}
func (m *BlockIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockIndex.DiscardUnknown(m)
}

var xxx_messageInfo_BlockIndex proto.InternalMessageInfo

func (m *BlockIndex) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *BlockIndex) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *BlockIndex) GetOffset() []uint32 {
	if m != nil {
		return m.Offset
	}
	return nil
}

// //////////////////////////////////////////////////////////////////////////////////////////////////
// BELOW ARE DEFINITIONS FOR ON-WIRE MESSAGES!
// //////////////////////////////////////////////////////////////////////////////////////////////////
type PingMsg struct {
	Nonce                uint64   `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMsg) Reset()         { *m = PingMsg{} }
func (m *PingMsg) String() string { return proto.CompactTextString(m) }
func (*PingMsg) ProtoMessage()    {}
func (*PingMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{9}
}
func (m *PingMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMsg.Unmarshal(m, b)
}
func (m *PingMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMsg.Marshal(b, m, deterministic)
}
func (dst *PingMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMsg.Merge(dst, src)
}
func (m *PingMsg) XXX_Size() int {
	return xxx_messageInfo_PingMsg.Size(m)
}
func (m *PingMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PingMsg proto.InternalMessageInfo

func (m *PingMsg) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type PongMsg struct {
	AckNonce             uint64   `protobuf:"varint,1,opt,name=ack_nonce,json=ackNonce,proto3" json:"ack_nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PongMsg) Reset()         { *m = PongMsg{} }
func (m *PongMsg) String() string { return proto.CompactTextString(m) }
func (*PongMsg) ProtoMessage()    {}
func (*PongMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{10}
}
func (m *PongMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PongMsg.Unmarshal(m, b)
}
func (m *PongMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PongMsg.Marshal(b, m, deterministic)
}
func (dst *PongMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PongMsg.Merge(dst, src)
}
func (m *PongMsg) XXX_Size() int {
	return xxx_messageInfo_PongMsg.Size(m)
}
func (m *PongMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PongMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PongMsg proto.InternalMessageInfo

func (m *PongMsg) GetAckNonce() uint64 {
	if m != nil {
		return m.AckNonce
	}
	return 0
}

type BlockSync struct {
	Start                uint64   `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  uint64   `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockSync) Reset()         { *m = BlockSync{} }
func (m *BlockSync) String() string { return proto.CompactTextString(m) }
func (*BlockSync) ProtoMessage()    {}
func (*BlockSync) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{11}
}
func (m *BlockSync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockSync.Unmarshal(m, b)
}
func (m *BlockSync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockSync.Marshal(b, m, deterministic)
}
func (dst *BlockSync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockSync.Merge(dst, src)
}
func (m *BlockSync) XXX_Size() int {
	return xxx_messageInfo_BlockSync.Size(m)
}
func (m *BlockSync) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockSync.DiscardUnknown(m)
}

var xxx_messageInfo_BlockSync proto.InternalMessageInfo

func (m *BlockSync) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *BlockSync) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

// block container
// used to send old/existing blocks in block sync
type BlockContainer struct {
	Block                *BlockPb `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockContainer) Reset()         { *m = BlockContainer{} }
func (m *BlockContainer) String() string { return proto.CompactTextString(m) }
func (*BlockContainer) ProtoMessage()    {}
func (*BlockContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{12}
}
func (m *BlockContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockContainer.Unmarshal(m, b)
}
func (m *BlockContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockContainer.Marshal(b, m, deterministic)
}
func (dst *BlockContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockContainer.Merge(dst, src)
}
func (m *BlockContainer) XXX_Size() int {
	return xxx_messageInfo_BlockContainer.Size(m)
}
func (m *BlockContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockContainer.DiscardUnknown(m)
}

var xxx_messageInfo_BlockContainer proto.InternalMessageInfo

func (m *BlockContainer) GetBlock() *BlockPb {
	if m != nil {
		return m.Block
	}
	return nil
}

type ViewChangeMsg struct {
	Vctype               ViewChangeMsg_ViewChangeType `protobuf:"varint,1,opt,name=vctype,proto3,enum=iproto.ViewChangeMsg_ViewChangeType" json:"vctype,omitempty"`
	Block                *BlockPb                     `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	BlockHash            []byte                       `protobuf:"bytes,3,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	SenderAddr           string                       `protobuf:"bytes,4,opt,name=senderAddr,proto3" json:"senderAddr,omitempty"`
	Decision             bool                         `protobuf:"varint,5,opt,name=decision,proto3" json:"decision,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ViewChangeMsg) Reset()         { *m = ViewChangeMsg{} }
func (m *ViewChangeMsg) String() string { return proto.CompactTextString(m) }
func (*ViewChangeMsg) ProtoMessage()    {}
func (*ViewChangeMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{13}
}
func (m *ViewChangeMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewChangeMsg.Unmarshal(m, b)
}
func (m *ViewChangeMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewChangeMsg.Marshal(b, m, deterministic)
}
func (dst *ViewChangeMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewChangeMsg.Merge(dst, src)
}
func (m *ViewChangeMsg) XXX_Size() int {
	return xxx_messageInfo_ViewChangeMsg.Size(m)
}
func (m *ViewChangeMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewChangeMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ViewChangeMsg proto.InternalMessageInfo

func (m *ViewChangeMsg) GetVctype() ViewChangeMsg_ViewChangeType {
	if m != nil {
		return m.Vctype
	}
	return ViewChangeMsg_INVALID_VIEW_CHANGE_TYPE
}

func (m *ViewChangeMsg) GetBlock() *BlockPb {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *ViewChangeMsg) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *ViewChangeMsg) GetSenderAddr() string {
	if m != nil {
		return m.SenderAddr
	}
	return ""
}

func (m *ViewChangeMsg) GetDecision() bool {
	if m != nil {
		return m.Decision
	}
	return false
}

// //////////////////////////////////////////////////////////////////////////////////////////////////
// BELOW ARE DEFINITIONS FOR TEST-ONLY MESSAGES!
// //////////////////////////////////////////////////////////////////////////////////////////////////
type TestPayload struct {
	MsgBody              []byte   `protobuf:"bytes,1,opt,name=msg_body,json=msgBody,proto3" json:"msg_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPayload) Reset()         { *m = TestPayload{} }
func (m *TestPayload) String() string { return proto.CompactTextString(m) }
func (*TestPayload) ProtoMessage()    {}
func (*TestPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_blockchain_402e90f077d0f7f0, []int{14}
}
func (m *TestPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPayload.Unmarshal(m, b)
}
func (m *TestPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPayload.Marshal(b, m, deterministic)
}
func (dst *TestPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPayload.Merge(dst, src)
}
func (m *TestPayload) XXX_Size() int {
	return xxx_messageInfo_TestPayload.Size(m)
}
func (m *TestPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPayload.DiscardUnknown(m)
}

var xxx_messageInfo_TestPayload proto.InternalMessageInfo

func (m *TestPayload) GetMsgBody() []byte {
	if m != nil {
		return m.MsgBody
	}
	return nil
}

func init() {
	proto.RegisterType((*TxInputPb)(nil), "iproto.TxInputPb")
	proto.RegisterType((*TxOutputPb)(nil), "iproto.TxOutputPb")
	proto.RegisterType((*TxPb)(nil), "iproto.TxPb")
	proto.RegisterType((*TransferPb)(nil), "iproto.TransferPb")
	proto.RegisterType((*VotePb)(nil), "iproto.VotePb")
	proto.RegisterType((*ActionPb)(nil), "iproto.ActionPb")
	proto.RegisterType((*BlockHeaderPb)(nil), "iproto.BlockHeaderPb")
	proto.RegisterType((*BlockPb)(nil), "iproto.BlockPb")
	proto.RegisterType((*BlockIndex)(nil), "iproto.BlockIndex")
	proto.RegisterType((*PingMsg)(nil), "iproto.PingMsg")
	proto.RegisterType((*PongMsg)(nil), "iproto.PongMsg")
	proto.RegisterType((*BlockSync)(nil), "iproto.BlockSync")
	proto.RegisterType((*BlockContainer)(nil), "iproto.BlockContainer")
	proto.RegisterType((*ViewChangeMsg)(nil), "iproto.ViewChangeMsg")
	proto.RegisterType((*TestPayload)(nil), "iproto.TestPayload")
	proto.RegisterEnum("iproto.ViewChangeMsg_ViewChangeType", ViewChangeMsg_ViewChangeType_name, ViewChangeMsg_ViewChangeType_value)
}

func init() { proto.RegisterFile("blockchain.proto", fileDescriptor_blockchain_402e90f077d0f7f0) }

var fileDescriptor_blockchain_402e90f077d0f7f0 = []byte{
	// 962 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0x4d, 0x6e, 0xe3, 0x46,
	0x13, 0x35, 0x29, 0x4a, 0x94, 0x4a, 0x96, 0x3f, 0x7d, 0x0d, 0xcf, 0x80, 0x49, 0x06, 0x13, 0x83,
	0xf0, 0x0c, 0x84, 0x01, 0x62, 0x04, 0x9e, 0x45, 0x36, 0xd9, 0xf8, 0x47, 0x88, 0x84, 0x4c, 0x6c,
	0xa2, 0x2d, 0x28, 0xc8, 0x4a, 0x68, 0x92, 0x2d, 0x89, 0xb1, 0xd5, 0x64, 0xc8, 0xa6, 0x22, 0xe5,
	0x0e, 0xb9, 0x44, 0xb6, 0xb9, 0x40, 0x6e, 0x91, 0x7d, 0x4e, 0x13, 0x74, 0x35, 0xff, 0xe4, 0xfc,
	0xad, 0xec, 0xf7, 0xba, 0xd8, 0xf5, 0xaa, 0xea, 0x75, 0x09, 0x86, 0xfe, 0x53, 0x1c, 0x3c, 0x06,
	0x6b, 0x16, 0x89, 0x8b, 0x24, 0x8d, 0x65, 0x4c, 0x3a, 0x11, 0xfe, 0x75, 0x7f, 0x35, 0xa0, 0x37,
	0xdb, 0x4d, 0x45, 0x92, 0x4b, 0xcf, 0x27, 0x2f, 0xa1, 0x23, 0x77, 0x13, 0x96, 0xad, 0x1d, 0xe3,
	0xcc, 0x18, 0x1d, 0xd3, 0x02, 0x91, 0x8f, 0xa1, 0x1b, 0xe7, 0x72, 0x2a, 0x42, 0xbe, 0x73, 0xcc,
	0x33, 0x63, 0xd4, 0xa6, 0x15, 0x26, 0xef, 0x60, 0x98, 0x0b, 0x75, 0xfd, 0x43, 0x90, 0x46, 0x89,
	0x7c, 0x88, 0x7e, 0xe2, 0x4e, 0xeb, 0xcc, 0x18, 0x0d, 0xe8, 0x5f, 0x78, 0xe2, 0xc2, 0x71, 0x93,
	0x73, 0x2c, 0xcc, 0x72, 0xc0, 0xa9, 0x5c, 0x19, 0xff, 0x21, 0xe7, 0x22, 0xe0, 0x4e, 0x1b, 0xef,
	0xa9, 0xb0, 0xfb, 0x3d, 0xc0, 0x6c, 0x77, 0x9f, 0x4b, 0xad, 0xf6, 0x14, 0xda, 0x5b, 0xf6, 0x94,
	0x73, 0x14, 0x6b, 0x51, 0x0d, 0xc8, 0x5b, 0x38, 0x79, 0xa6, 0xc6, 0xc4, 0x5b, 0x9e, 0xb1, 0xe4,
	0x35, 0x40, 0x43, 0x49, 0x0b, 0x95, 0x34, 0x18, 0xf7, 0x67, 0x03, 0xac, 0xd9, 0xce, 0xf3, 0x89,
	0x03, 0xf6, 0x96, 0xa7, 0x59, 0x14, 0x0b, 0x4c, 0x34, 0xa0, 0x25, 0x54, 0x52, 0xd5, 0x07, 0xb3,
	0x68, 0x53, 0x26, 0xa9, 0x30, 0x79, 0x03, 0x96, 0xdc, 0x4d, 0x85, 0xf3, 0xe2, 0xac, 0x35, 0xea,
	0x5f, 0xfe, 0xff, 0x42, 0xf7, 0xfb, 0xa2, 0xea, 0x35, 0xc5, 0x63, 0x32, 0x82, 0xb6, 0x54, 0x15,
	0x39, 0x2f, 0x31, 0x8e, 0xd4, 0x71, 0x65, 0x99, 0x54, 0x07, 0xb8, 0xbf, 0x19, 0x00, 0xb3, 0x94,
	0x89, 0x6c, 0xc9, 0x53, 0x3d, 0x2a, 0xb6, 0x89, 0x73, 0x51, 0x36, 0xb1, 0x40, 0x8a, 0xcf, 0xb8,
	0x08, 0x79, 0x8a, 0xcd, 0xeb, 0xd1, 0x02, 0x91, 0x57, 0xd0, 0x4b, 0x79, 0x10, 0x25, 0x11, 0x17,
	0xd2, 0xe9, 0xe0, 0x51, 0x4d, 0xa8, 0x1a, 0x13, 0xb6, 0x7f, 0x8a, 0x59, 0xe8, 0xd8, 0x78, 0x5d,
	0x09, 0xd5, 0xc8, 0xf4, 0x0d, 0x5e, 0xee, 0x7f, 0xcd, 0xf7, 0x4e, 0x57, 0x8f, 0xac, 0xc9, 0xa9,
	0x56, 0x46, 0xd9, 0x4d, 0x1c, 0x09, 0x9f, 0x65, 0xdc, 0xe9, 0x9d, 0x19, 0xa3, 0x2e, 0x6d, 0x30,
	0xee, 0x12, 0x3a, 0xf3, 0x58, 0x72, 0xcf, 0x57, 0x2a, 0x64, 0xb4, 0xe1, 0x99, 0x64, 0x9b, 0x04,
	0x85, 0x5b, 0xb4, 0x26, 0xd4, 0x3d, 0x19, 0x7f, 0x5a, 0x7a, 0xb9, 0xff, 0xc8, 0xf7, 0xa8, 0xff,
	0x98, 0x36, 0x18, 0x75, 0xbe, 0x55, 0xf7, 0xe8, 0xf3, 0x8e, 0x3e, 0xaf, 0x19, 0xf7, 0x0f, 0x03,
	0xba, 0x57, 0x81, 0x8c, 0x62, 0xe1, 0xf9, 0xe4, 0x35, 0x98, 0x72, 0x87, 0x13, 0xeb, 0x5f, 0x1e,
	0xd7, 0x6d, 0xf5, 0xfc, 0xc9, 0x11, 0x35, 0xe5, 0x8e, 0x7c, 0x0e, 0x5d, 0x59, 0xb4, 0x13, 0x87,
	0xd7, 0x6c, 0x7e, 0xd5, 0xe6, 0xc9, 0x11, 0xad, 0xa2, 0xc8, 0x39, 0x58, 0x2a, 0x19, 0x7a, 0xa5,
	0x7f, 0x79, 0x52, 0x46, 0xeb, 0xd2, 0x26, 0x47, 0x14, 0x4f, 0x9b, 0x76, 0xb1, 0x0e, 0xed, 0x72,
	0x0a, 0x6d, 0x11, 0x97, 0xb6, 0xb6, 0xa8, 0x06, 0xaa, 0x25, 0x59, 0xb4, 0x12, 0x4c, 0xe6, 0x29,
	0x2f, 0x6a, 0xaa, 0x89, 0xeb, 0x2e, 0x74, 0x18, 0x56, 0xe4, 0xfe, 0x6e, 0xc2, 0xe0, 0x5a, 0xd9,
	0x6b, 0xc2, 0x59, 0x88, 0x16, 0xf8, 0x67, 0x63, 0x3a, 0x60, 0xe3, 0x63, 0x9f, 0xde, 0x16, 0xbe,
	0x2c, 0xa1, 0xb2, 0xc7, 0x9a, 0x47, 0xab, 0xb5, 0x76, 0xbc, 0x45, 0x0b, 0xf4, 0x1f, 0x83, 0x39,
	0x87, 0x41, 0x92, 0xf2, 0xad, 0x4e, 0xaf, 0xd6, 0x83, 0x9e, 0xcd, 0x21, 0xa9, 0xb7, 0x07, 0x8d,
	0x63, 0x59, 0x94, 0x51, 0x20, 0xac, 0x50, 0x32, 0xc9, 0xf1, 0xc8, 0x2e, 0x2a, 0x2c, 0x09, 0x35,
	0x54, 0x99, 0x8a, 0xdd, 0x5d, 0xbe, 0xf1, 0x79, 0x8a, 0xf6, 0x1a, 0xd0, 0x06, 0xa3, 0x0c, 0xa8,
	0xd0, 0x2d, 0x93, 0x0c, 0x5f, 0x73, 0x0f, 0x23, 0x0e, 0xb8, 0xc3, 0x1e, 0xc2, 0xb3, 0x1e, 0x2a,
	0x5d, 0x89, 0xb6, 0x4c, 0x5f, 0xeb, 0xd2, 0xc8, 0x0d, 0xc1, 0x46, 0xf1, 0x9e, 0x4f, 0x3e, 0x53,
	0x6d, 0x51, 0x6d, 0x2d, 0x0c, 0xf3, 0xa2, 0x1c, 0xee, 0x41, 0xc7, 0x69, 0x11, 0x44, 0xde, 0x81,
	0xad, 0xa7, 0x92, 0x39, 0x26, 0xbe, 0xdb, 0x61, 0x19, 0x5f, 0xda, 0x8f, 0x96, 0x01, 0xee, 0x07,
	0x00, 0xbc, 0x44, 0x6f, 0xcb, 0x53, 0x68, 0x67, 0x92, 0xa5, 0xb2, 0xdc, 0x59, 0x08, 0xc8, 0x10,
	0x5a, 0x5c, 0x84, 0x38, 0x2b, 0x8b, 0xaa, 0x7f, 0x95, 0xe6, 0x78, 0xb9, 0xcc, 0xb8, 0x9a, 0x53,
	0x6b, 0x34, 0xa0, 0x05, 0x72, 0x3f, 0x05, 0xdb, 0x8b, 0xc4, 0xea, 0x9b, 0x6c, 0x55, 0xdb, 0xc9,
	0x68, 0xd8, 0xc9, 0x7d, 0x0b, 0xb6, 0x17, 0xeb, 0x80, 0x4f, 0xa0, 0xc7, 0x82, 0xc7, 0x45, 0x33,
	0xa8, 0xcb, 0x82, 0xc7, 0x3b, 0x8c, 0x7b, 0x0f, 0x3d, 0x94, 0xf5, 0xb0, 0x17, 0x41, 0xad, 0xca,
	0xfc, 0x1b, 0x55, 0xad, 0x4a, 0x95, 0xfb, 0x05, 0x9c, 0xe0, 0x47, 0x37, 0xb1, 0x90, 0x2c, 0x12,
	0x3c, 0x25, 0x6f, 0xa0, 0x8d, 0xbf, 0x2d, 0x45, 0xdf, 0xfe, 0x77, 0xd0, 0x37, 0xb5, 0xbc, 0xf0,
	0xd4, 0xfd, 0xc5, 0x84, 0xc1, 0x3c, 0xe2, 0x3f, 0xde, 0xac, 0x99, 0x58, 0x71, 0x25, 0xee, 0x4b,
	0xe8, 0x6c, 0x03, 0xb9, 0x4f, 0xb4, 0xb2, 0x93, 0xcb, 0xf3, 0xea, 0x39, 0x35, 0xc3, 0x1a, 0x68,
	0xb6, 0x4f, 0x38, 0x2d, 0xbe, 0xa9, 0xd3, 0x9a, 0xff, 0x96, 0x56, 0xf9, 0xc2, 0xaf, 0x3c, 0xab,
	0x57, 0x7c, 0x4d, 0xe8, 0x75, 0xa3, 0xd6, 0xd8, 0x55, 0x18, 0xa6, 0x68, 0xfa, 0x1e, 0x6d, 0x30,
	0x6a, 0xbd, 0x87, 0x3c, 0x88, 0xf0, 0x81, 0xb5, 0x71, 0xa9, 0x55, 0xd8, 0xa5, 0x70, 0x72, 0x28,
	0x8d, 0xbc, 0x02, 0x67, 0x7a, 0x37, 0xbf, 0xfa, 0x30, 0xbd, 0x5d, 0xcc, 0xa7, 0xe3, 0x6f, 0x17,
	0x37, 0x93, 0xab, 0xbb, 0xaf, 0xc6, 0x8b, 0xd9, 0x77, 0xde, 0x78, 0x78, 0x44, 0xfa, 0x60, 0x7b,
	0xf4, 0xde, 0xbb, 0x7f, 0x18, 0x0f, 0x0d, 0x0d, 0xc6, 0xf3, 0xfb, 0xd9, 0x78, 0x68, 0x92, 0x2e,
	0x58, 0xf8, 0x5f, 0xcb, 0x1d, 0x41, 0x7f, 0xc6, 0x33, 0xe9, 0x15, 0x9b, 0xf7, 0x23, 0xe8, 0x6e,
	0xb2, 0xd5, 0xc2, 0x8f, 0xc3, 0x7d, 0xf1, 0x73, 0x6c, 0x6f, 0xb2, 0xd5, 0x75, 0x1c, 0xee, 0xfd,
	0x0e, 0x56, 0xfb, 0xfe, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0xc4, 0x03, 0x3c, 0xd8, 0x07,
	0x00, 0x00,
}
