// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/web3server.go

// Package mock_web3server is a generated GoMock package.
package mock_web3server

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWeb3Handler is a mock of Web3Handler interface.
type MockWeb3Handler struct {
	ctrl     *gomock.Controller
	recorder *MockWeb3HandlerMockRecorder
}

// MockWeb3HandlerMockRecorder is the mock recorder for MockWeb3Handler.
type MockWeb3HandlerMockRecorder struct {
	mock *MockWeb3Handler
}

// NewMockWeb3Handler creates a new mock instance.
func NewMockWeb3Handler(ctrl *gomock.Controller) *MockWeb3Handler {
	mock := &MockWeb3Handler{ctrl: ctrl}
	mock.recorder = &MockWeb3HandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeb3Handler) EXPECT() *MockWeb3HandlerMockRecorder {
	return m.recorder
}

// HandlePOSTReq mocks base method.
func (m *MockWeb3Handler) HandlePOSTReq(reader io.Reader) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandlePOSTReq", reader)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// HandlePOSTReq indicates an expected call of HandlePOSTReq.
func (mr *MockWeb3HandlerMockRecorder) HandlePOSTReq(reader interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandlePOSTReq", reflect.TypeOf((*MockWeb3Handler)(nil).HandlePOSTReq), reader)
}
