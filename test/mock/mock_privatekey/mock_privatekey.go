// Code generated by MockGen. DO NOT EDIT.
// Source: blockchain/config_privatekey.go

// Package mock_privatekey is a generated GoMock package.
package mock_privatekey

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/hashicorp/vault/api"
)

// MockprivKeyLoader is a mock of privKeyLoader interface.
type MockprivKeyLoader struct {
	ctrl     *gomock.Controller
	recorder *MockprivKeyLoaderMockRecorder
}

// MockprivKeyLoaderMockRecorder is the mock recorder for MockprivKeyLoader.
type MockprivKeyLoaderMockRecorder struct {
	mock *MockprivKeyLoader
}

// NewMockprivKeyLoader creates a new mock instance.
func NewMockprivKeyLoader(ctrl *gomock.Controller) *MockprivKeyLoader {
	mock := &MockprivKeyLoader{ctrl: ctrl}
	mock.recorder = &MockprivKeyLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockprivKeyLoader) EXPECT() *MockprivKeyLoaderMockRecorder {
	return m.recorder
}

// load mocks base method.
func (m *MockprivKeyLoader) load() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "load")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// load indicates an expected call of load.
func (mr *MockprivKeyLoaderMockRecorder) load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "load", reflect.TypeOf((*MockprivKeyLoader)(nil).load))
}

// MockvaultSecretReader is a mock of vaultSecretReader interface.
type MockvaultSecretReader struct {
	ctrl     *gomock.Controller
	recorder *MockvaultSecretReaderMockRecorder
}

// MockvaultSecretReaderMockRecorder is the mock recorder for MockvaultSecretReader.
type MockvaultSecretReaderMockRecorder struct {
	mock *MockvaultSecretReader
}

// NewMockvaultSecretReader creates a new mock instance.
func NewMockvaultSecretReader(ctrl *gomock.Controller) *MockvaultSecretReader {
	mock := &MockvaultSecretReader{ctrl: ctrl}
	mock.recorder = &MockvaultSecretReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockvaultSecretReader) EXPECT() *MockvaultSecretReaderMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockvaultSecretReader) Read(path string) (*api.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", path)
	ret0, _ := ret[0].(*api.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockvaultSecretReaderMockRecorder) Read(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockvaultSecretReader)(nil).Read), path)
}
